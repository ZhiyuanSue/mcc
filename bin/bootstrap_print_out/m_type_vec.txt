read in file name:
	./pre/m_type_vec.i
                  
                  
                  
                    
                      
                  
                    
                      
                  


                     




                        
                        
                                
                               
typedef long unsigned int size_t;

typedef long int __off64_t;
typedef long int __off_t;

typedef struct
{
  int __count;
  union
  {
    unsigned int __wch;
    char __wchb[4];
  } __value;
} __mbstate_t;

typedef struct _G_fpos_t
{
  __off_t __pos;
  __mbstate_t __state;
} __fpos_t;
typedef __fpos_t fpos_t;

typedef struct _G_fpos64_t
{
  __off64_t __pos;
  __mbstate_t __state;
} __fpos64_t;

struct _IO_marker;
struct _IO_FILE;
typedef struct _IO_FILE FILE;
typedef void _IO_lock_t;
struct _IO_FILE
{
  int _flags;


  char *_IO_read_ptr;
  char *_IO_read_end;
  char *_IO_read_base;
  char *_IO_write_base;
  char *_IO_write_ptr;
  char *_IO_write_end;
  char *_IO_buf_base;
  char *_IO_buf_end;


  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;
  int _flags2;
  __off_t _old_offset;

  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];

  _IO_lock_t *_lock;

  __off64_t _offset;

  struct _IO_codecvt *_codecvt;
  struct _IO_wide_data *_wide_data;
  struct _IO_FILE *_freeres_list;
  void *_freeres_buf;
  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];
};
extern int remove(const char *filename);

extern int rename(const char *old, const char *new);

extern FILE *tmpfile(void);

extern char *tmpnam(char *s);

extern int fclose(FILE *stream);

extern int fflush(FILE *stream);

extern FILE *fopen(const char * restrict filename,
    const char * restrict mode);

extern FILE *freopen(const char * restrict filename,
    const char * restrict mode,
    FILE * restrict stream);

extern void setbuf(FILE * restrict stream,
    char * restrict buf);

extern int setvbuf(FILE * restrict stream,
    char * restrict buf,
    int mode, size_t size);

extern int fprintf(FILE * restrict stream,
    const char * restrict format, ...);

extern int fscanf(FILE * restrict stream,
    const char * restrict format, ...);

extern int printf(const char * restrict format, ...);

extern int scanf(const char * restrict format, ...);

extern int snprintf(char * restrict s, size_t n,
    const char * restrict format, ...);

extern int sprintf(char * restrict s,
    const char * restrict format, ...);

extern int sscanf(const char * restrict s,
    const char * restrict format, ...);

extern char *fgets(char * restrict s, int n,
    FILE * restrict stream);

extern int fputc(int c, FILE *stream);

extern int fputs(const char * restrict s,
    FILE * restrict stream);

extern int getc(FILE *stream);

extern int getchar(void);

extern int putc(int c, FILE *stream);

extern int putchar(int c);

extern int puts(const char *s);

extern int ungetc(int c, FILE *stream);

extern size_t fread(void * restrict ptr,
    size_t size, size_t nmemb,
    FILE * restrict stream);

extern size_t fwrite(const void * restrict ptr,
    size_t size, size_t nmemb,
    FILE * restrict stream);

extern int fgetpos(FILE * restrict stream,
    fpos_t * restrict pos);

extern int fseek(FILE *stream, long int offset, int whence);

extern int fsetpos(FILE *stream, const fpos_t *pos);

extern long int ftell(FILE *stream);

extern void rewind(FILE *stream);

extern void clearerr(FILE *stream);

extern int feof(FILE *stream);

extern int ferror(FILE *stream);

extern void perror(const char *s);

extern int fprintf_s(FILE * restrict stream,
    const char * restrict format, ...);

extern int fscanf_s(FILE * restrict stream,
    const char * restrict format, ...);

extern int printf_s(const char * restrict format, ...);

extern int scanf_s(const char * restrict format, ...);

extern int sscanf_s(const char * restrict s,
    const char * restrict format, ...);
                          

                                 
                                
typedef long unsigned int size_t;

extern void *memset(void *s, int c, size_t n);

extern int strcmp(const char *s1, const char *s2);

extern void *memcpy(void * restrict s1,
    const void * restrict s2, size_t n);
                          

                                 






                                
                               
extern int *__errno_location(void);
                                 
                                 


                                 
                                
                                   
                                  
typedef signed char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;

typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long long int_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long long uint_least64_t;

typedef signed char int_fast8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;

typedef long long intmax_t;
typedef unsigned long long uintmax_t;
                                 
    typedef unsigned long int uintptr_t;
                                 


typedef int wchar_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;





typedef long int ptrdiff_t;

typedef struct
{
  int count;
  union
  {
    int wch;
    char wchb[4];
  } value;
} mbstate_t;




extern size_t mbrtoc16 (char16_t *restrict pc16,
                        const char *restrict s, size_t n,
                        mbstate_t *restrict p);


extern size_t c16rtomb (char *restrict s, char16_t c16,
                        mbstate_t *restrict ps);



extern size_t mbrtoc32 (char32_t *restrict pc32,
                        const char *restrict s, size_t n,
                        mbstate_t *restrict p);


extern size_t c32rtomb (char *restrict s, char32_t c32,
                        mbstate_t *restrict ps);
                                 




extern size_t __ctype_get_mb_cur_max (void);

typedef long unsigned int size_t;

extern void *malloc(size_t size);

extern void free(void *ptr);

extern _Noreturn void exit(int status);

extern long int strtol(
    const char * restrict nptr,
    char ** restrict endptr,
    int base);

extern long long int strtoll(
    const char * restrict nptr,
    char ** restrict endptr,
    int base);

extern unsigned long int strtoul(
    const char * restrict nptr,
    char ** restrict endptr,
    int base);

extern unsigned long long int strtoull(
    const char * restrict nptr,
    char ** restrict endptr,
    int base);

extern double strtod(const char * restrict nptr,
    char ** restrict endptr);

extern float strtof(const char * restrict nptr,
    char ** restrict endptr);

extern long double strtold(const char * restrict nptr,
    char ** restrict endptr);

extern int mbtowc(wchar_t *pwc, const char *str, size_t n);

extern int mblen (const char *s, size_t n);
                          

                                  
                          



                                
                          
                        
                         
                        
inline _Bool is_legal_align(unsigned long int align_size)
{
        if (align_size==0)
                return 0;
        while(align_size%2==0)
        {
                align_size/=2;
        }
        if(align_size!=1)
                return 0;
        else
                return 1;
}
                          
                     
                    
enum compiler_error{
    C0001_ERR_NONE,C0002_ERR_UNKNOWN,

    C0003_ERR_LEX_ERROR,

    C0004_ERR_NAMESPACE,
    C0005_ERR_REDEFINE,
    C0006_ERR_NOT_IN_SYMBOL_TABLE,
    C0007_ERR_UNEXPECTED_TOKEN,


    C0008_ERR_TOO_MANY_STOR_SPEC,
    C0009_ERR_THREAD_LOCAL_PREFIX,
    C0010_ERR_NEED_MORE_TYPE_SPEC,
    C0011_ERR_WRONG_TYPE_SPEC,
    C0012_ERR_COMPLEX_NOT_SUPPORT,
    C0013_ERR_ATOMIC_UNSUPPORT,
    C0014_ERR_ATOMIC_TYPE_NAME,

    C0015_ERR_REDEFINATION,
    C0016_ERR_UNDECLARATION,
    C0017_ERR_TYPEDEF_OVERLAP,
    C0018_ERR_STRUCT_INCOMPLETE_FUNCTION_TYPE,
    C0019_ERR_ILLEGAL_CONST_EXPR,
    C0020_ERR_CONST_EXPR_RANGE,
    C0021_ERR_STATIC_ASSERT,


    C0022_ERR_BIT_FIELD_TYPE,
    C0023_ERR_BIT_FIELD_WIDTH_EXCEED,
    C0024_ERR_BIT_FIELD_WIDTH_INT,
    C0025_ERR_BIT_FIELD_WIDTH_NEGATIVE,
    C0026_ERR_BIT_FIELD_ZERO_WITH_DECLERATOR,

    C0027_ERR_ENUM_NOT_INT,
    C0028_ERR_ENUM_RANGE,

    C0029_ERR_LKA_EXTERN_FOLLOW_NO,
    C0030_ERR_LKA_NO_FOLLOW_EXTERN,
    C0031_ERR_CONFICT_TYPE,
    C0032_ERR_CONFICT_LINKAGE,
    C0033_ERR_CONFICT_THREAD_LOCAL,

    C0034_ERR_ARR_STAR_SCOPE,
    C0035_ERR_ARR_QUAL_STATIC_OUTMOST,
    C0036_ERR_ARR_QUAL_STATIC_IN_PARA,
    C0037_ERR_ARR_STATIC_THREAD_WITH_VLA,
    C0038_ERR_ARR_SIZE_INTEGER,
    C0039_ERR_ARR_SIZE_ZERO,
    C0040_ERR_ARR_FUNCTIONS_INCOMPLETE,
    C0041_ERR_VM_ID,

    C0042_ERR_FUN_IDENTIFIER_LIST,
    C0043_ERR_FUN_RETURN_TYPE,
    C0044_ERR_FUNC_DEF_DECL_TYPE,
    C0045_ERR_FUNC_PARA_INCOMPLETE_TYPE,
    C0046_ERR_FUNC_VOID_MORE_THAN_ONE,
    C0047_ERR_FUNC_PARA_STORAGE,

    C0048_ERR_LVALUE_ARR_TYPE_COMPLETE,
    C0049_ERR_LVALUE_ARR_TYPE_WRONG,
    C0050_ERR_LVALUE_FUNC_TYPE_WRONG,
    C0051_ERR_LVALUE_REQUIRED,

    C0052_ERR_EXPR_TYPE_ERROR,
    C0053_ERR_EXPR_STRUCT_UNION_DOT_TYPE_WRONG,
    C0054_ERR_EXPR_STRUCT_UNION_POINT_TYPE_WRONG,
    C0055_ERR_EXPR_POSTFIX_DOUBLE_P_M_TYPE,
    C0056_ERR_EXPR_MODIFIABLE_LVALUE,

    C0057_ERR_OPERAND_BIT_FIELD,
    C0058_ERR_OPERAND_REGISTER,
    C0059_ERR_OPERAND_SHOULD_POINTER,

    C0060_ERR_OPERAND_INTEGER_TYPE,
    C0061_ERR_OPERAND_ARTHMATIC_TYPE,
    C0062_ERR_OPERAND_SCALAR_TYPE,
    C0063_ERR_OPERAND_REAL_TYPE,

    C0064_ERR_SIZEOF_INCOMPLETE,
    C0065_ERR_SIZEOF_FUNCTION,

    C0066_ERR_CAST_CONVERT_POINT_FLOAT,
    C0067_ERR_ADD_OPERAND_TYPE,
    C0068_ERR_MINUS_OPERAND_TYPE,
    C0069_ERR_NEED_COMPATIBLE_TYPE,
    C0070_ERR_EQUAL_OPERAND,
    C0071_ERR_CONDITION_OPERAND,
    C0072_ERR_ASSIGN_OPERAND,

    C0073_ERR_FUNC_MORE_PARAMETERS,
    C0074_ERR_FUNC_PARA_TYPE,

    C0075_ERR_FOR_DECLARATION_STOR,
    C0076_ERR_IN_SWITCH,
    C0077_ERR_SWITCH_SAME_CASE,
    C0078_ERR_IN_LOOP,
    C0079_ERR_IN_SWITCH_LOOP,
    C0080_ERR_FUNC_RET_VOID,
    C0081_ERR_FUNC_RET_NONE_VOID,
    C0082_ERR_FUNC_NO_ID_LIST_BUT_DEC,
    C0083_ERR_FUNC_PARA_INITILIZATION,
    C0084_ERR_FUNC_STORAGE,
    C0085_ERR_FUNC_PARA_OLD_NOT_FIND,
    C0086_ERR_FUNC_PARA_OLD_NOT_DEC,
    C0087_ERR_FUNC_PARA_OLD_STOR,
    C0088_ERR_ALIGN_TWO_POWER,
    C0089_ERR_ALIGN_CANNOT_SPECIFIE,
    C0090_ERR_ALIGN_DIFFERENT_DECLARATION,
    C0091_ERR_INIT_TYPE_COMPLETE,
    C0092_ERR_INIT_ENTITY,
    C0093_ERR_INIT_DESIGNATOR_CONST_EXPR,
    C0094_ERR_INIT_DESIGNATOR_IDENTIFIER,

    W0001_WARN_NONE,W0002_WARN_UNKNOWN,
    W0003_WARN_NO_DECLARATION_ANY_THING,
    W0004_WARN_DUPLICATE_QUAL,
    W0005_WARN_IMPLICIT_DEC,
    W0006_WARN_NO_RETURN,
};
typedef unsigned int LINE_NUM;
typedef struct line{
    LINE_NUM line_number;
    size_t start;
    size_t end;
}LINE;
typedef struct mcc_error_item{
    enum compiler_error ce;
    char* filename;
    LINE_NUM error_line;
    char* error_token_value;
}ERROR_ITEM;

void m_error(char filename[],char function[],char reason[]);
void m_error_arg_char(char* arg);
void m_error_arg_int(int arg);

void m_test(char test[]);
void m_test_item(char test_item_name[]);
void m_test_arg_char(char* item_arg);
void m_test_arg_int(int item_arg);

void mcc_error(ERROR_ITEM* e,char* file_buf,LINE* line);
inline void* m_error_item(
    ERROR_ITEM* tei,
    enum compiler_error ce,
    char* filename,
    LINE_NUM error_line,
    char* error_token_value)
{
    tei->ce=ce;
    tei->filename=filename;
    tei->error_line=error_line;
    tei->error_token_value=error_token_value;
    return (void*)tei;
}
                  
                  



               
              
typedef struct mem_pool{
    char name[8];



    unsigned long long int malloc_cnt;
    unsigned long long int free_cnt;
    unsigned long long int sys_malloc_cnt;
    unsigned long long int sys_free_cnt;
}MEM_POOL;
              
MEM_POOL* MEMInit(char name[]);





void MEMDel(MEM_POOL* pool);


void* m_alloc(size_t n);
void m_free(void* p);

inline void m_memset(void* p,char value,size_t len)
{
    memset(p,value,len);
}
                  

typedef struct vector{
    void** data;
    size_t capicity;
    size_t len;
}VEC;





VEC* InitVEC(size_t len);
void VECinsert(VEC* v,void* p);
void VECremove(VEC* v,size_t low,size_t high);
void VECpopback(VEC* v);
void VECexpand(VEC* v);
void VECshrink(VEC* v);
void VECcpy(VEC* src,VEC** dst);
inline void VECappend(VEC* src,VEC* dst){
    if(!src||!dst)
        return;
    for(size_t i=0;i<(src->len);++i){
        VECinsert(dst,((src!=0&&i<(src->len))?(src->data[i]):0));
    }
}
void DelVEC(VEC* v);
                  
                








                     


typedef unsigned int NMSP;



NMSP GET_NEW_NAMESPACE(void);
void RESET_NAMESPACE(void);
                 


typedef struct hash_table{
    void** data;
    unsigned long long int capicity;
    unsigned long long int capicity_index;
    unsigned long long int record_num;
}HASH;


typedef struct hash_item{
    unsigned long long int key; unsigned int count;
}HASH_ITEM;
inline unsigned long long int HASHFunction(unsigned long long int key,HASH* h)
{
    return key%(h->capicity);
}
HASH* InitHASH(void);
_Bool HSAHExpand(HASH* h,_Bool (*cmp)(void* a,void* b));
void* HASHInsert(HASH* h,HASH_ITEM* item,_Bool (*cmp)(void* a,void* b));
HASH_ITEM* HASHFind(HASH* h,void* a,_Bool (*cmp)(void* a,void* b),_Bool delete_item,_Bool insert_item);
HASH* HASHCOPY(HASH* h);
               
void DelHASH(HASH* h);
void TestHASH(void);
                  
                 
enum TP_STORAGE_SPEC{
    TP_STOR_NONE,
    TP_TYPE_DEF,
    TP_EXTERN,
    TP_STATIC,
    TP_EXTERN_THREAD_LOCAL,
    TP_AUTO,
    TP_REGISTER,
    TP_STATIC_THREAD_LOCAL
};
enum TP_CATEGORY{
    TP_SPEC_NONE,

    TP_VOID,
    TP_SCHAR,
    TP_USCHAR,
    TP_SSHORT,
    TP_USHORT,
    TP_SINT,
    TP_USINT,
    TP_SLONG,
    TP_USLONG,
    TP_SLONGLONG,
    TP_USLONGLONG,
    TP_FLOAT,
    TP_DOUBLE,
    TP_LONG_DOUBLE,
    TP_BOOL,
    TP_FLOAT_COMPLEX,
    TP_DOUBLE_COMPLEX,
    TP_LONG_DOUBLE_COMPLEX,

    TP_POINT,
    TP_UNION_STRUCT,
    TP_UNION,
    TP_STRUCT,
    TP_ARRAY,
    TP_ENUM,
    TP_FUNCTION,
    TP_TYPE_DEF_TYPE,
    TP_SPEC_ATOMIC,


    TP_NULL_POINTER_CONSTANT,
    TP_LABEL
};
                 
typedef struct {
    unsigned long long int key; unsigned int count;
    _Bool complete; _Bool modifier;
    union{
        struct{
            enum TP_STORAGE_SPEC typ_stor;
            unsigned char type_qual;
            unsigned char func_spec;
            unsigned long int align_spec;
        };
        struct{
            enum TP_CATEGORY typ_category; unsigned int data_size;
        };
    };
}M_TYPE;

typedef struct {
    unsigned long long int key; unsigned int count;
    _Bool complete; _Bool modifier;
    enum TP_CATEGORY typ_category; unsigned int data_size;
    char* tag;
    VEC* members;
    size_t data_align;
    size_t total_data_size;
    NMSP namespece;
    _Bool can_be_modified_lvalue;
    _Bool have_flex_array;
}TP_SU;
typedef struct {
    char* member_name;
    NMSP name_space;
    size_t offset;
    VEC* type_vec;
    _Bool bit_field;
    size_t bit_field_size;
    size_t bit_field_offset;
}TP_SU_MEMBER;

typedef struct {
    unsigned long long int key; unsigned int count;
    _Bool complete; _Bool modifier;
    enum TP_CATEGORY typ_category; unsigned int data_size;
    _Bool is_vla;
    _Bool is_star;
    union{
        size_t axis_size;
        void* assign_expr_node;
    };
    void* axis_modify;
}TP_ARR;

typedef struct {
    unsigned long long int key; unsigned int count;
    _Bool complete; _Bool modifier;
    enum TP_CATEGORY typ_category; unsigned int data_size;
    char* tag;
    VEC* members;
}TP_ENUMERA;

typedef struct {
    unsigned long long int key; unsigned int count;
    _Bool complete; _Bool modifier;
    enum TP_CATEGORY typ_category; unsigned int data_size;
    char* func_name;
    VEC* func_parameters;
    _Bool have_ellipsis;
    _Bool is_old_style;
}TP_FUNC;
typedef struct {
    char* para_name;
    VEC* type_vec;
}TP_FUNC_PARA;

typedef struct {
    unsigned long long int key; unsigned int count;
    _Bool complete; _Bool modifier;
    enum TP_CATEGORY typ_category; unsigned int data_size;
    VEC* typedef_name_type;
}TP_DEF_TYPE;

typedef struct {
    _Bool databool;
    signed char schar;
    unsigned char uschar;
    signed short sshort;
    unsigned short usshort;
    signed int sint;
    unsigned int usint;
    signed long int slong;
    unsigned long int uslong;
    signed long long int sllong;
    unsigned long long int usllong;
    float datafloat;
    double datadouble;
    long double datalongdouble;
    float floatcomplex[2];
    double doublecomplex[2];
    long double longdoublecomplex[2];
    void* pointer;
}VALUE_DATA;
                  
typedef struct VALUE{
    enum TP_CATEGORY const_expr_type;
    VALUE_DATA* const_value;
}CONST_VALUE;

M_TYPE* build_modify_type(
    enum TP_STORAGE_SPEC storage_spec_type,
    int type_qual_cnt[4],
    int func_spec_cnt[2],
    unsigned long int align_spec_cnt
);
M_TYPE* build_base_type(
    enum TP_CATEGORY spec_type
);
unsigned long long int StrToKey(char* str);
unsigned long long int TypeToKey(M_TYPE* t);

void print_type(M_TYPE* tmpt);
                      
_Bool Type_VEC_cmp(VEC* a,VEC* b);
_Bool Type_item_cmp(void* a,void* b);
_Bool Type_VEC_VM(VEC* type_vec);
_Bool Type_VEC_VLA(VEC* type_vec);
_Bool Type_VEC_modify_lvalue(VEC* type_vec,_Bool is_lvalue);
size_t Type_size(VEC* type_vec);
size_t Type_align(VEC* type_vec);
M_TYPE* Type_VEC_get_qual(VEC* type_vec);
M_TYPE* Type_composite_qual(M_TYPE* qual_a,M_TYPE* qual_b);
M_TYPE* Type_VEC_get_spec_other(VEC* type_vec);
M_TYPE* Type_VEC_get_actual_base_type(VEC* type_vec);
_Bool Type_VEC_change_actual_base_type(VEC* type_vec,M_TYPE* tmp_type);
M_TYPE* Type_VEC_get_Atomic(VEC* type_vec);

VEC* Type_VEC_get_Atomic_TO(VEC* type_vec,_Bool is_atomic);
VEC* Type_VEC_get_Pointer_TO(VEC* type_vec,_Bool is_pointer);
VEC* Type_VEC_get_Array_TO(VEC* type_vec,_Bool is_array);
VEC* Type_VEC_get_func_return_type(VEC* type_vec,_Bool is_function);
VEC* Type_VEC_unqualifier(VEC* type_vec,_Bool is_qual);

VEC* lvalue_convertion(VEC* tmp_type_vec);
_Bool compatible_types(VEC* type_vec_a,VEC* type_vec_b);
VEC* composite_types(VEC* type_vec_a,VEC* type_vec_b,_Bool compatible_type);
M_TYPE* usual_arith_conversion(M_TYPE** operand_a,M_TYPE** operand_b);
_Bool integer_promotion(M_TYPE** integer_operand);
_Bool float_promotion(M_TYPE** float_operand);


size_t Type_VEC_get_element_size(VEC* current_obj_type);
VEC* Type_VEC_get_sub_obj_type(VEC* current_obj_type,size_t sub_obj_size);
VEC* Type_VEC_get_sub_obj_off_element_type(VEC* sub_obj_type,size_t sub_obj_off);


void print_type_vec(VEC* type_vec);
                    
extern size_t type_data_size[30];
int int_rank[30 +1]={255,255,2,2,3,3,4,4,5,5,6,6,255,255,255,1,
    255,255,255,255,255,255,255,255,255,255,255,255,4
};
_Bool Type_VEC_cmp(VEC* a,VEC* b){
    M_TYPE* tmpa=((a!=0&&0<(a->len))?(a->data[0]):0);
    if(tmpa->typ_category==TP_TYPE_DEF_TYPE){
        VEC* tmpavec=((TP_DEF_TYPE*)tmpa)->typedef_name_type;
        return Type_VEC_cmp(tmpavec,b);
    }
    M_TYPE* tmpb=((b!=0&&0<(b->len))?(b->data[0]):0);
    if(tmpb->typ_category==TP_TYPE_DEF_TYPE){
        VEC* tmpbvec=((TP_DEF_TYPE*)tmpb)->typedef_name_type;
        return Type_VEC_cmp(a,tmpbvec);
    }
    if((a->len)!=(b->len))
        return 0;
    for(size_t i=0;i<(a->len);++i){
        _Bool cmp=Type_item_cmp(((a!=0&&i<(a->len))?(a->data[i]):0),((b!=0&&i<(b->len))?(b->data[i]):0));
        if(!cmp)
            return 0;
    }
    return 1;
}
_Bool Type_item_cmp(void* a,void* b){
    if(a==0||b==0)
        return 0;
    M_TYPE* x=(M_TYPE*)a;
    M_TYPE* y=(M_TYPE*)b;
    if(x->modifier!=y->modifier)
        return 0;
    else{
        if(x->modifier){
            if(((x->typ_stor<=TP_TYPE_DEF&&y->typ_stor<=TP_TYPE_DEF)||x->typ_stor==y->typ_stor)&&x->align_spec==y->align_spec&&x->type_qual==y->type_qual&&x->func_spec==y->func_spec)
                return 1;
            else
                return 0;
        }
        else{
            if(x->typ_category!=y->typ_category)
                return 0;
            else{
                switch (x->typ_category){
                    case TP_ENUM:
                    {
                        TP_ENUMERA* enumx=(TP_ENUMERA*)x;
                        TP_ENUMERA* enumy=(TP_ENUMERA*)y;
                        if(enumx->tag==0||enumy->tag==0)
                            return 0;
                        else
                            return !strcmp(enumx->tag,enumy->tag);
                    }
                    case TP_UNION_STRUCT:
                    case TP_UNION:
                    case TP_STRUCT:
                    {

                        TP_SU* tmpsux=(TP_SU*)x;
                        TP_SU* tmpsuy=(TP_SU*)y;
                        if(tmpsux->tag==0||tmpsuy->tag==0)
                            return 0;
                        else
                            return !strcmp(tmpsux->tag,tmpsuy->tag);
                    }
                    case TP_ARRAY:
                    {
                        TP_ARR* tmparrx=(TP_ARR*)x;
                        TP_ARR* tmparry=(TP_ARR*)y;
                        if(tmparrx->axis_size!=tmparry->axis_size)
                            return 0;
                        return 1;
                    }
                    case TP_FUNCTION:
                    {
                        TP_FUNC* tmpfuncx=(TP_FUNC*)x;
                        TP_FUNC* tmpfuncy=(TP_FUNC*)y;
                        if(tmpfuncx->func_name&&tmpfuncy->func_name){
                            if(strcmp(tmpfuncx->func_name,tmpfuncy->func_name))
                                return 0;
                            else
                            {
                                if((tmpfuncx->func_parameters->len)!=(tmpfuncy->func_parameters->len))
                                    return 0;
                                for(size_t i=0;i<(tmpfuncx->func_parameters->len);++i){
                                    TP_FUNC_PARA* parax=(TP_FUNC_PARA*)((tmpfuncx->func_parameters!=0&&i<(tmpfuncx->func_parameters->len))?(tmpfuncx->func_parameters->data[i]):0);
                                    TP_FUNC_PARA* paray=(TP_FUNC_PARA*)((tmpfuncy->func_parameters!=0&&i<(tmpfuncy->func_parameters->len))?(tmpfuncy->func_parameters->data[i]):0);
                                    if(!Type_VEC_cmp(parax->type_vec,paray->type_vec))
                                        return 0;
                                }
                            }
                        }
                        else
                            return 0;
                        break;
                    }
                    case TP_TYPE_DEF_TYPE:
                    {
                        TP_DEF_TYPE* defx=(TP_DEF_TYPE*)x;
                        TP_DEF_TYPE* defy=(TP_DEF_TYPE*)y;
                        if(!Type_VEC_cmp(defx->typedef_name_type,defy->typedef_name_type))
                            return 0;
                        break;
                    }
                    case TP_SPEC_ATOMIC:
                        return 0;
                    default:
                        return 1;
                }
            }
        }
    }
    return 1;
}
_Bool Type_VEC_VM(VEC* type_vec)
{
    if(!type_vec||(type_vec->len)==0){
        return 0;
    }

    for(size_t i=0;i<(type_vec->len);++i){
        M_TYPE* tmpt=((type_vec!=0&&i<(type_vec->len))?(type_vec->data[i]):0);
        if(tmpt->typ_category==TP_ARRAY&&((TP_ARR*)tmpt)->is_vla){
            return 1;
        }
    }
    return 0;
}
_Bool Type_VEC_VLA(VEC* type_vec)
{
    if(!type_vec||(type_vec->len)==0){
        return 0;
    }
    M_TYPE* tmpt=Type_VEC_get_actual_base_type(type_vec);
    if(!tmpt)
        return 0;
    if(tmpt->typ_category!=TP_ARRAY)
        return 0;
    VEC* tmpv=Type_VEC_get_Array_TO(type_vec,1);
    for(int i=(tmpv->len)-1;i>=0;i--){
        M_TYPE* tmpt=((tmpv!=0&&i<(tmpv->len))?(tmpv->data[i]):0);
        if(tmpt->modifier)
            continue;
        if(tmpt->typ_category==TP_ARRAY&&((TP_ARR*)tmpt)->is_vla){
            return 1;
        }
        if(tmpt->typ_category!=TP_ARRAY){
            if(tmpt->complete)
                return 0;
            else
                return 1;
        }
    }
    return 0;
}
_Bool Type_VEC_modify_lvalue(VEC* type_vec,_Bool is_lvalue)
{
    if(!type_vec||(type_vec->len)==0)
        return 0;
    if(!is_lvalue)
        return 0;
    M_TYPE* tmpt=Type_VEC_get_actual_base_type(type_vec);
    if(tmpt&&(tmpt->typ_category==TP_ARRAY||tmpt->typ_category==TP_FUNCTION))
        return 0;



    if(tmpt&&(tmpt->typ_category==TP_STRUCT||tmpt->typ_category==TP_UNION)){
        if(((TP_SU*)tmpt)->can_be_modified_lvalue==0)
            return 0;
    }
    if(tmpt&&!tmpt->complete)
        return 0;
    tmpt=Type_VEC_get_qual(type_vec);
    if(tmpt&&tmpt->type_qual>=8)
        return 0;
    return 1;
}
size_t Type_size(VEC* type_vec)
{
    if(!type_vec)
        return 0;
    size_t res=0;
    for(size_t i=0;i<(type_vec->len);++i){




        M_TYPE* tmpt=((type_vec!=0&&i<(type_vec->len))?(type_vec->data[i]):0);
        if(tmpt->modifier)
            continue;
        if(tmpt->typ_category==TP_SPEC_NONE||tmpt->typ_category==TP_VOID)
            res=0;
        else if((tmpt->typ_category>=TP_SCHAR&&tmpt->typ_category<=TP_LONG_DOUBLE_COMPLEX)||tmpt->typ_category==TP_POINT)
        {
            res=type_data_size[tmpt->typ_category];
        }
        else if(tmpt->typ_category==TP_UNION_STRUCT||tmpt->typ_category==TP_UNION||tmpt->typ_category==TP_STRUCT){
            TP_SU* tmpt_su=(TP_SU*)tmpt;
            res=tmpt_su->total_data_size;
        }
        else if(tmpt->typ_category==TP_ARRAY){
            TP_ARR* tmpt_arr=(TP_ARR*)tmpt;
            res*=tmpt_arr->axis_size;
        }
        else if(tmpt->typ_category==TP_ENUM){
            res=type_data_size[TP_SINT];
        }
    }
    return res;
}
size_t Type_align(VEC* type_vec)
{
    if(!type_vec||(type_vec->len)==0)
        return 0;
    size_t res=0;
    size_t spec_res=0;

    M_TYPE* tmpt=Type_VEC_get_spec_other(type_vec);
    if(tmpt&&tmpt->align_spec!=0)
        spec_res = tmpt->align_spec;
    tmpt=Type_VEC_get_actual_base_type(type_vec);
    if(!tmpt)
        return 0;
    if(tmpt->typ_category==TP_SPEC_NONE||tmpt->typ_category==TP_VOID)
        res=0;
    else if((tmpt->typ_category>=TP_SCHAR&&tmpt->typ_category<=TP_LONG_DOUBLE_COMPLEX)||tmpt->typ_category==TP_POINT)
    {
        res=type_data_size[tmpt->typ_category];
    }
    else if(tmpt->typ_category==TP_UNION_STRUCT||tmpt->typ_category==TP_UNION||tmpt->typ_category==TP_STRUCT){
        TP_SU* tmpt_su=(TP_SU*)tmpt;
        res=tmpt_su->data_align;
    }
    else if(tmpt->typ_category==TP_ENUM)
    {
        res=type_data_size[TP_SINT];
    }
    if(res<spec_res)
        res=spec_res;
    return res;
}
M_TYPE* Type_VEC_get_spec_other(VEC* type_vec)
{
    if(!type_vec||(type_vec->len)==0)
        return 0;
    M_TYPE* tmpt=((type_vec!=0&&0<(type_vec->len))?(type_vec->data[0]):0);
    if(tmpt&&tmpt->modifier)
        goto final;
    if((type_vec->len)>=2){
        tmpt=((type_vec!=0&&1<(type_vec->len))?(type_vec->data[1]):0);
        if(tmpt->modifier)
            goto final;
    }
    return 0;
final:
    if(!tmpt)
        return 0;
    if(tmpt->align_spec||tmpt->func_spec||tmpt->typ_stor)
        return tmpt;
    return 0;
}
M_TYPE* Type_VEC_get_qual(VEC* type_vec)
{
    if(!type_vec||(type_vec->len)==0)
        return 0;
    M_TYPE* tmpt=(type_vec&&type_vec->len>0?type_vec->data[type_vec->len-1]:0);
    if(!tmpt)
        return 0;
    if(tmpt->modifier){
        if(tmpt->type_qual)
            return tmpt;
    }
    return 0;
}
M_TYPE* Type_composite_qual(M_TYPE* qual_a,M_TYPE* qual_b)
{
    if(!qual_a&&!qual_b)
        return 0;
    if(!qual_a)
        return qual_b;
    if(!qual_b)
        return qual_a;
    if(!qual_a->modifier||!qual_b->modifier)
        return 0;
    if(qual_a->typ_stor!=qual_b->typ_stor)
        return 0;
    int type_qual_cnt[4];
    int func_spec_cnt[2];
    for(size_t i=0;i<4;++i)
    {
        type_qual_cnt[i]=((qual_a->type_qual)&0x01)&((qual_b->type_qual)&0x01);
        (qual_a->type_qual)>>=1;
        (qual_b->type_qual)>>=1;
    }
    for(size_t i=0;i<2;++i)
    {
        func_spec_cnt[i]=((qual_a->func_spec)&0x01)&((qual_b->func_spec)&0x01);
        (qual_a->func_spec)>>=1;
        (qual_b->func_spec)>>=1;
    }
    int align_spec_cnt=(((qual_a->align_spec)>(qual_b->align_spec))?(qual_a->align_spec):(qual_b->align_spec));
    M_TYPE* res_type=build_modify_type(
        qual_a->typ_stor,
        type_qual_cnt,
        func_spec_cnt,
        align_spec_cnt
    );
    return res_type;
}
M_TYPE* Type_VEC_get_actual_base_type(VEC* type_vec)
{
    if(!type_vec||(type_vec->len)==0)
        return 0;
    for(int i=(type_vec->len)-1;i>=0;i--){
        M_TYPE* tmpt=((type_vec!=0&&i<(type_vec->len))?(type_vec->data[i]):0);
        if(tmpt->modifier)
        {
            continue;
        }
        else{
            if(tmpt->typ_category==TP_SPEC_ATOMIC){
                continue;
            }
            else
            {
                return tmpt;
            }
        }
    }
    return 0;
}
_Bool Type_VEC_change_actual_base_type(VEC* type_vec,M_TYPE* tmp_type)
{

    if(!type_vec||(type_vec->len)==0)
        return 0;
    if(!tmp_type)
        return 0;
    for(int i=(type_vec->len)-1;i>=0;i--){
        M_TYPE* tmpt=((type_vec!=0&&i<(type_vec->len))?(type_vec->data[i]):0);
        if(tmpt->modifier)
            continue;
        else{
            if(tmpt->typ_category==TP_SPEC_ATOMIC){
                continue;
            }
            else
            {
                type_vec->data[i]=(void*)tmp_type;
                return 1;
            }
        }
    }
    return 0;
}
M_TYPE* Type_VEC_get_Atomic(VEC* type_vec)
{
    if(!type_vec||(type_vec->len)==0)
        return 0;
    for(int i=(type_vec->len)-1;i>=0;i--){
        M_TYPE* tmpt=((type_vec!=0&&i<(type_vec->len))?(type_vec->data[i]):0);
        if(tmpt->modifier)
            continue;
        else{
            if(tmpt->typ_category==TP_SPEC_ATOMIC){
                return tmpt;
            }
            else
                return 0;
        }
    }
    return 0;
}
VEC* Type_VEC_get_Atomic_TO(VEC* type_vec,_Bool is_atomic)
{
    if(!type_vec||(type_vec->len)==0){
        return 0;
    }
    VEC* res_vec=0;
    VECcpy(type_vec,&res_vec);
    if(!res_vec)
        return 0;
    if(!is_atomic)
        return res_vec;
    for(int i=(res_vec->len)-1;i>=0;i--){
        M_TYPE* tmpt=((res_vec!=0&&i<(res_vec->len))?(res_vec->data[i]):0);
        if(tmpt->modifier)
            continue;
        else{
            if(tmpt->typ_category==TP_SPEC_ATOMIC){
                VECremove(res_vec,i,(res_vec->len));
                break;
            }
            else{
                DelVEC(res_vec);
                return 0;
            }
        }
    }
    return res_vec;
}

VEC* Type_VEC_get_Pointer_TO(VEC* type_vec,_Bool is_pointer)
{
    if(!type_vec||(type_vec->len)==0)
        return 0;
    VEC* res_vec=0;
    VECcpy(type_vec,&res_vec);
    if(!res_vec)
        return 0;
    if(!is_pointer)
        return res_vec;
    for(int i=(res_vec->len)-1;i>=0;i--){
        M_TYPE* tmpt=((res_vec!=0&&i<(res_vec->len))?(res_vec->data[i]):0);
        if(tmpt->modifier)
            continue;
        else{
            if(tmpt->typ_category==TP_SPEC_ATOMIC){
                continue;
            }
            else if(tmpt->typ_category==TP_POINT){
                VECremove(res_vec,i,(res_vec->len));
                break;
            }
            else{
                DelVEC(res_vec);
                return 0;
            }
        }
    }
    return res_vec;
}
VEC* Type_VEC_get_Array_TO(VEC* type_vec,_Bool is_array)
{
    if(!type_vec||(type_vec->len)==0)
        return 0;
    VEC* res_vec=0;
    VECcpy(type_vec,&res_vec);
    if(!res_vec)
        return 0;
    if(!is_array)
        return res_vec;
    for(int i=(res_vec->len)-1;i>=0;i--){
        M_TYPE* tmpt=((res_vec!=0&&i<(res_vec->len))?(res_vec->data[i]):0);
        if(tmpt->modifier)
            continue;
        else{
            if(tmpt->typ_category==TP_SPEC_ATOMIC){
                continue;
            }
            else if(tmpt->typ_category==TP_ARRAY){
                VECremove(res_vec,i,(res_vec->len));
                break;
            }
            else{
                DelVEC(res_vec);
                return 0;
            }
        }
    }
    return res_vec;
}
VEC* Type_VEC_get_func_return_type(VEC* type_vec,_Bool is_function)
{
    if(!type_vec||(type_vec->len)==0)
        return 0;
    VEC* res_vec=0;
    VECcpy(type_vec,&res_vec);
    if(!res_vec)
        return 0;
    if(!is_function)
        return res_vec;
    for(int i=(res_vec->len)-1;i>=0;i--){
        M_TYPE* tmpt=((res_vec!=0&&i<(res_vec->len))?(res_vec->data[i]):0);
        if(tmpt->modifier)
            continue;
        else{
            if(tmpt->typ_category==TP_SPEC_ATOMIC){
                continue;
            }
            else if(tmpt->typ_category==TP_FUNCTION){
                VECremove(res_vec,i,(res_vec->len));
                break;
            }
            else{
                DelVEC(res_vec);
                return 0;
            }
        }
    }
    return res_vec;
}
VEC* Type_VEC_unqualifier(VEC* type_vec,_Bool is_qual)
{
    if(!type_vec||(type_vec->len)==0)
        return 0;
    VEC* res_vec=0;
    VECcpy(type_vec,&res_vec);
    if(!is_qual)
        return res_vec;
    if(!res_vec)
        return 0;
    M_TYPE* tmpt=(res_vec&&res_vec->len>0?res_vec->data[res_vec->len-1]:0);
    if(!tmpt)
        return 0;
    if(tmpt->modifier){
        VECpopback(res_vec);
    }
    return res_vec;
}
VEC* lvalue_convertion(VEC* tmp_type_vec)
{
    if(!tmp_type_vec||(tmp_type_vec->len)==0)
        return 0;
    VEC* res=Type_VEC_unqualifier(tmp_type_vec,Type_VEC_get_qual(tmp_type_vec));
    if(!res)
        return 0;
    VEC* oldres=res;
    res=Type_VEC_get_Atomic_TO(res,Type_VEC_get_Atomic(res));
    if(oldres!=res)
        DelVEC(oldres);
    M_TYPE* tmpt=Type_VEC_get_actual_base_type(res);
    if(tmpt->typ_category==TP_ARRAY){
        oldres=res;
        res=Type_VEC_get_Array_TO(res,1);
        if(oldres!=res)
            DelVEC(oldres);
        M_TYPE* pointer=build_base_type(TP_POINT);
        VECinsert(res,(void*)pointer);
    }
    else if(tmpt->typ_category==TP_FUNCTION){
        oldres=res;
        res=Type_VEC_get_func_return_type(res,1);
        if(oldres!=res)
            DelVEC(oldres);
        M_TYPE* pointer=build_base_type(TP_POINT);
        VECinsert(res,(void*)pointer);
    }
    return res;
}
_Bool compatible_types(VEC* type_vec_a,VEC* type_vec_b)
{

    return 1;
}
VEC* composite_types(VEC* type_vec_a,VEC* type_vec_b,_Bool compatible_type)
{

    VEC* tmpv;
    VECcpy(type_vec_a,&tmpv);
    return tmpv;
}
M_TYPE* usual_arith_conversion(M_TYPE** operand_a,M_TYPE** operand_b){




    if(!operand_a||!operand_b)
        return 0;
    enum TP_CATEGORY type_a=(*operand_a)->typ_category,type_b=(*operand_b)->typ_category;
    if((!((type_a>=TP_SCHAR&&type_a<=TP_LONG_DOUBLE_COMPLEX)||type_a==TP_NULL_POINTER_CONSTANT))||(!((type_b>=TP_SCHAR&&type_b<=TP_LONG_DOUBLE_COMPLEX)||type_b==TP_NULL_POINTER_CONSTANT)))
        return 0;
    if(type_a==TP_LONG_DOUBLE||type_b==TP_LONG_DOUBLE)
    {
        return build_base_type(TP_LONG_DOUBLE);
    }
    else if(type_a==TP_DOUBLE||type_b==TP_DOUBLE)
    {
        return build_base_type(TP_DOUBLE);
    }
    else if(type_a==TP_FLOAT||type_b==TP_FLOAT)
    {
        return build_base_type(TP_FLOAT);
    }
    if(((type_a>=TP_SCHAR&&type_a<=TP_USLONGLONG)||type_a==TP_BOOL||type_a==TP_NULL_POINTER_CONSTANT)&&((type_b>=TP_SCHAR&&type_b<=TP_USLONGLONG)||type_b==TP_BOOL||type_b==TP_NULL_POINTER_CONSTANT))
    {
        integer_promotion(operand_a);
        integer_promotion(operand_b);
        type_a=(*operand_a)->typ_category;
        type_b=(*operand_b)->typ_category;
        if(type_a==type_b)
            return build_base_type(type_a);
        else if(type_a%2==type_b%2)
        {
            if(int_rank[type_a]<int_rank[type_b]){
                *operand_a=build_base_type(type_b);
                return build_base_type(type_b);
            }
            else if(int_rank[type_a]>int_rank[type_b])
            {
                *operand_b=build_base_type(type_a);
                return build_base_type(type_a);
            }
        }
        else{
            if(int_rank[type_a]<=int_rank[type_b]&&type_b%2==1)
            {
                *operand_a=build_base_type(type_b);
                return build_base_type(type_b);
            }
            else if(int_rank[type_a]>=int_rank[type_b]&&type_a%2==1)
            {
                *operand_b=build_base_type(type_a);
                return build_base_type(type_a);
            }
            else if(int_rank[type_a]<int_rank[type_b]&&type_data_size[type_b]>type_data_size[type_a]){
                *operand_a=build_base_type(type_b);
                return build_base_type(type_b);
            }
            else if(int_rank[type_a]>int_rank[type_b]&&type_data_size[type_b]<type_data_size[type_a]){
                *operand_b=build_base_type(type_a);
                return build_base_type(type_a);
            }
            else{
                enum TP_CATEGORY return_type=TP_SPEC_NONE;
                if(type_a%2==0)
                {
                    return_type=type_a+1;
                }
                else if(type_b%2==0)
                {
                    return_type=type_b+1;
                }
                *operand_b=build_base_type(return_type);
                *operand_a=build_base_type(return_type);
                return build_base_type(return_type);
            }
        }
    }

    else
    {
        return 0;
    }

    return 0;
}

_Bool integer_promotion(M_TYPE** integer_operand){
    M_TYPE* operand=*integer_operand;
    if(!integer_operand||!operand||!((operand->typ_category>=TP_SCHAR&&operand->typ_category<=TP_USLONGLONG)||operand->typ_category==TP_BOOL||operand->typ_category==TP_NULL_POINTER_CONSTANT))
        return 0;
    int rank=int_rank[operand->typ_category];
    if(rank>=int_rank[TP_SINT])
        return 0;
    M_TYPE* new_o=build_base_type(TP_SINT);
    integer_operand=&new_o;
    return 1;
}
_Bool float_promotion(M_TYPE** float_operand){
    M_TYPE* operand=*float_operand;
    if(!float_operand||!operand||!(operand->typ_category>=TP_FLOAT&&operand->typ_category<=TP_LONG_DOUBLE))
        return 0;
    if(operand->typ_category!=TP_FLOAT)
        return 1;
    M_TYPE* new_o=build_base_type(TP_FLOAT);
    *float_operand=new_o;
    return 1;
}

size_t Type_VEC_get_element_size(VEC* current_obj_type)
                    
{
    size_t element_size=0;
    M_TYPE* base_type=Type_VEC_get_actual_base_type(current_obj_type);
    if(((base_type->typ_category>=TP_SCHAR&&base_type->typ_category<=TP_POINT)||base_type->typ_category==TP_NULL_POINTER_CONSTANT))
    {
        element_size=1;
    }
    else if(base_type->typ_category==TP_ARRAY){
        if(!((TP_ARR*)base_type)->is_vla)
        {
            VEC* sub_obj_type=Type_VEC_get_Array_TO(current_obj_type,1);
            element_size=(((TP_ARR*)base_type)->axis_size)*Type_VEC_get_element_size(sub_obj_type);
        }
    }
    else if(base_type->typ_category==TP_STRUCT)
    {
        VEC* struct_member_list=((TP_SU*)base_type)->members;
        for(size_t i=0;i<(struct_member_list->len);++i){
            TP_SU_MEMBER* sub_obj=((struct_member_list!=0&&i<(struct_member_list->len))?(struct_member_list->data[i]):0);
            element_size+=Type_VEC_get_element_size(sub_obj->type_vec);
        }
    }
    else if(base_type->typ_category==TP_UNION){
        VEC* struct_member_list=((TP_SU*)base_type)->members;
        TP_SU_MEMBER* sub_obj=((struct_member_list!=0&&0<(struct_member_list->len))?(struct_member_list->data[0]):0);
        element_size+=Type_VEC_get_element_size(sub_obj->type_vec);
    }
    return element_size;
}
VEC* Type_VEC_get_sub_obj_type(VEC* current_obj_type,size_t sub_obj_size)
{
    if(!current_obj_type)
        return 0;
    VEC* res_vec=0;
    M_TYPE* actual_type=Type_VEC_get_actual_base_type(current_obj_type);
    if(((actual_type->typ_category>=TP_SCHAR&&actual_type->typ_category<=TP_POINT)||actual_type->typ_category==TP_NULL_POINTER_CONSTANT))
    {
        VECcpy(current_obj_type,&res_vec);
    }
    else if(actual_type->typ_category==TP_ENUM)
    {
        M_TYPE* tmpt=build_base_type(TP_SINT);
        res_vec=InitVEC(3);
        VECinsert(res_vec,tmpt);
    }
    else if(actual_type->typ_category==TP_ARRAY)
    {
        res_vec=Type_VEC_get_Array_TO(current_obj_type,1);
    }
    else if(actual_type->typ_category==TP_STRUCT||actual_type->typ_category==TP_UNION)
    {
        VEC* struct_member_list=((TP_SU*)actual_type)->members;
        TP_SU_MEMBER* sub_obj=((struct_member_list!=0&&sub_obj_size<(struct_member_list->len))?(struct_member_list->data[sub_obj_size]):0);
        VECcpy(sub_obj->type_vec,&res_vec);
    }
    return res_vec;
}
VEC* Type_VEC_get_sub_obj_off_element_type(VEC* sub_obj_type,size_t sub_obj_off)
                    
{
    if(!sub_obj_type)
        return 0;
    VEC* res_vec=0;
    M_TYPE* actual_type=Type_VEC_get_actual_base_type(sub_obj_type);
    if(((actual_type->typ_category>=TP_SCHAR&&actual_type->typ_category<=TP_POINT)||actual_type->typ_category==TP_NULL_POINTER_CONSTANT))
    {
        VECcpy(sub_obj_type,&res_vec);
    }
    else if(actual_type->typ_category==TP_ENUM)
    {
        M_TYPE* tmpt=build_base_type(TP_SINT);
        res_vec=InitVEC(3);
        VECinsert(res_vec,tmpt);
    }
    else if(actual_type->typ_category==TP_ARRAY)
    {

        VEC* sub_sub_obj_type=Type_VEC_get_Array_TO(sub_obj_type,1);
        size_t sub_sub_obj_element_size=Type_VEC_get_element_size(sub_sub_obj_type);
        res_vec=Type_VEC_get_sub_obj_off_element_type(sub_sub_obj_type,sub_obj_off%sub_sub_obj_element_size);
    }
    else if(actual_type->typ_category==TP_STRUCT)
    {
        VEC* struct_member_list=((TP_SU*)actual_type)->members;
        for(size_t i=0;i<(struct_member_list->len);++i)
        {
            TP_SU_MEMBER* struct_member=((struct_member_list!=0&&i<(struct_member_list->len))?(struct_member_list->data[i]):0);
            size_t struct_member_size=Type_VEC_get_element_size(struct_member->type_vec);
            if(struct_member_size>sub_obj_off)
            {
                res_vec=Type_VEC_get_sub_obj_off_element_type(struct_member->type_vec,sub_obj_off);
            }
            else{
                sub_obj_off-=struct_member_size;
            }
        }
    }
    else if(actual_type->typ_category==TP_UNION)
    {
        VEC* struct_member_list=((TP_SU*)actual_type)->members;
        TP_SU_MEMBER* struct_member=((struct_member_list!=0&&0<(struct_member_list->len))?(struct_member_list->data[0]):0);
        res_vec=Type_VEC_get_sub_obj_off_element_type(struct_member->type_vec,sub_obj_off);
    }
    return res_vec;
}

void print_type_vec(VEC* type_vec)
{
    printf("<");
    for(int i=(type_vec->len)-1;i>=0;i--){
        M_TYPE* tmpt=(M_TYPE*)((type_vec!=0&&i<(type_vec->len))?(type_vec->data[i]):0);
        if(tmpt)
            print_type(tmpt);
        if(i)
            printf(",");
    }
    printf(">\n");
}

start print ast tree
<translation_unit ns:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:size_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:__off64_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:__off_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:7>
                            <&struct_decl ns:7>
                                <&spec_qual_list ns:7>
                                    <&type_spec ns:7>
                                        <KW_int:int sym level: 0 namespace:7>
                                <&struct_declarator_list ns:7>
                                    <&struct_declarator ns:7>
                                        <&declarator ns:7>
                                            <&direct_declarator ns:7>
                                                <identifier:__count sym level: 0 namespace:7>
                                <;:; sym level: 0 namespace:7>
                            <&struct_decl ns:7>
                                <&spec_qual_list ns:7>
                                    <&type_spec ns:7>
                                        <&struct_union_spec ns:7>
                                            <&struct_union ns:7>
                                                <KW_union:union sym level: 0 namespace:7>
                                            <left_brace:{ sym level: 0 namespace:7>
                                            <&struct_decl_list ns:8>
                                                <&struct_decl ns:8>
                                                    <&spec_qual_list ns:8>
                                                        <&type_spec ns:8>
                                                            <KW_unsigned:unsigned sym level: 0 namespace:8>
                                                        <&type_spec ns:8>
                                                            <KW_int:int sym level: 0 namespace:8>
                                                    <&struct_declarator_list ns:8>
                                                        <&struct_declarator ns:8>
                                                            <&declarator ns:8>
                                                                <&direct_declarator ns:8>
                                                                    <identifier:__wch sym level: 0 namespace:8>
                                                    <;:; sym level: 0 namespace:8>
                                                <&struct_decl ns:8>
                                                    <&spec_qual_list ns:8>
                                                        <&type_spec ns:8>
                                                            <KW_char:char sym level: 0 namespace:8>
                                                    <&struct_declarator_list ns:8>
                                                        <&struct_declarator ns:8>
                                                            <&declarator ns:8>
                                                                <&direct_declarator ns:8>
                                                                    <identifier:__wchb sym level: 0 namespace:8>
                                                                    <[:[ sym level: 0 namespace:8>
                                                                    <&primary_expression ns:8>
                                                                        <integer_constant:4 sym level: 0 namespace:8>
                                                                    <]:] sym level: 0 namespace:8>
                                                    <;:; sym level: 0 namespace:8>
                                            <right_brace:} sym level: 0 namespace:7>
                                <&struct_declarator_list ns:7>
                                    <&struct_declarator ns:7>
                                        <&declarator ns:7>
                                            <&direct_declarator ns:7>
                                                <identifier:__value sym level: 0 namespace:7>
                                <;:; sym level: 0 namespace:7>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:__mbstate_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:_G_fpos_t sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:10>
                            <&struct_decl ns:10>
                                <&spec_qual_list ns:10>
                                    <&type_spec ns:10>
                                        <&typedef_name ns:10>
                                            <identifier:__off_t sym level: 0 namespace:10>
                                <&struct_declarator_list ns:10>
                                    <&struct_declarator ns:10>
                                        <&declarator ns:10>
                                            <&direct_declarator ns:10>
                                                <identifier:__pos sym level: 0 namespace:10>
                                <;:; sym level: 0 namespace:10>
                            <&struct_decl ns:10>
                                <&spec_qual_list ns:10>
                                    <&type_spec ns:10>
                                        <&typedef_name ns:10>
                                            <identifier:__mbstate_t sym level: 0 namespace:10>
                                <&struct_declarator_list ns:10>
                                    <&struct_declarator ns:10>
                                        <&declarator ns:10>
                                            <&direct_declarator ns:10>
                                                <identifier:__state sym level: 0 namespace:10>
                                <;:; sym level: 0 namespace:10>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:__fpos_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:__fpos_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fpos_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:_G_fpos64_t sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:13>
                            <&struct_decl ns:13>
                                <&spec_qual_list ns:13>
                                    <&type_spec ns:13>
                                        <&typedef_name ns:13>
                                            <identifier:__off64_t sym level: 0 namespace:13>
                                <&struct_declarator_list ns:13>
                                    <&struct_declarator ns:13>
                                        <&declarator ns:13>
                                            <&direct_declarator ns:13>
                                                <identifier:__pos sym level: 0 namespace:13>
                                <;:; sym level: 0 namespace:13>
                            <&struct_decl ns:13>
                                <&spec_qual_list ns:13>
                                    <&type_spec ns:13>
                                        <&typedef_name ns:13>
                                            <identifier:__mbstate_t sym level: 0 namespace:13>
                                <&struct_declarator_list ns:13>
                                    <&struct_declarator ns:13>
                                        <&declarator ns:13>
                                            <&direct_declarator ns:13>
                                                <identifier:__state sym level: 0 namespace:13>
                                <;:; sym level: 0 namespace:13>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:__fpos64_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:_IO_marker sym level: 0 namespace:2>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:_IO_FILE sym level: 0 namespace:2>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:_IO_FILE sym level: 0 namespace:2>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:FILE sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:_IO_lock_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:_IO_FILE sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_int:int sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_flags sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_IO_read_ptr sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_IO_read_end sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_IO_read_base sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_IO_write_base sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_IO_write_ptr sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_IO_write_end sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_IO_buf_base sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_IO_buf_end sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_IO_save_base sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_IO_backup_base sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_IO_save_end sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <&struct_union_spec ns:19>
                                            <&struct_union ns:19>
                                                <KW_struct:struct sym level: 0 namespace:19>
                                            <identifier:_IO_marker sym level: 0 namespace:2>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_markers sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <&struct_union_spec ns:19>
                                            <&struct_union ns:19>
                                                <KW_struct:struct sym level: 0 namespace:19>
                                            <identifier:_IO_FILE sym level: 0 namespace:2>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_chain sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_int:int sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_fileno sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_int:int sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_flags2 sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <&typedef_name ns:19>
                                            <identifier:__off_t sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_old_offset sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_unsigned:unsigned sym level: 0 namespace:19>
                                    <&type_spec ns:19>
                                        <KW_short:short sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_cur_column sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_signed:signed sym level: 0 namespace:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_vtable_offset sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_shortbuf sym level: 0 namespace:19>
                                                <[:[ sym level: 0 namespace:19>
                                                <&primary_expression ns:19>
                                                    <integer_constant:1 sym level: 0 namespace:19>
                                                <]:] sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <&typedef_name ns:19>
                                            <identifier:_IO_lock_t sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_lock sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <&typedef_name ns:19>
                                            <identifier:__off64_t sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_offset sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <&struct_union_spec ns:19>
                                            <&struct_union ns:19>
                                                <KW_struct:struct sym level: 0 namespace:19>
                                            <identifier:_IO_codecvt sym level: 0 namespace:2>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_codecvt sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <&struct_union_spec ns:19>
                                            <&struct_union ns:19>
                                                <KW_struct:struct sym level: 0 namespace:19>
                                            <identifier:_IO_wide_data sym level: 0 namespace:2>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_wide_data sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <&struct_union_spec ns:19>
                                            <&struct_union ns:19>
                                                <KW_struct:struct sym level: 0 namespace:19>
                                            <identifier:_IO_FILE sym level: 0 namespace:2>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_freeres_list sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_void:void sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&pointer ns:19>
                                                <*:* sym level: 0 namespace:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_freeres_buf sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <&typedef_name ns:19>
                                            <identifier:size_t sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&direct_declarator ns:19>
                                                <identifier:__pad5 sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_int:int sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_mode sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                            <&struct_decl ns:19>
                                <&spec_qual_list ns:19>
                                    <&type_spec ns:19>
                                        <KW_char:char sym level: 0 namespace:19>
                                <&struct_declarator_list ns:19>
                                    <&struct_declarator ns:19>
                                        <&declarator ns:19>
                                            <&direct_declarator ns:19>
                                                <identifier:_unused2 sym level: 0 namespace:19>
                                                <[:[ sym level: 0 namespace:19>
                                                <&additive_expr ns:19>
                                                    <&multi_expr ns:19>
                                                        <&primary_expression ns:19>
                                                            <integer_constant:15 sym level: 0 namespace:19>
                                                        <*:* sym level: 0 namespace:19>
                                                        <&unary_expr ns:19>
                                                            <KW_sizeof:sizeof sym level: 0 namespace:19>
                                                            <(:( sym level: 0 namespace:19>
                                                            <&type_name ns:19>
                                                                <&spec_qual_list ns:19>
                                                                    <&type_spec ns:19>
                                                                        <KW_int:int sym level: 0 namespace:19>
                                                            <):) sym level: 0 namespace:19>
                                                    <-:- sym level: 0 namespace:19>
                                                    <&multi_expr ns:19>
                                                        <&primary_expression ns:19>
                                                            <integer_constant:4 sym level: 0 namespace:19>
                                                        <*:* sym level: 0 namespace:19>
                                                        <&unary_expr ns:19>
                                                            <KW_sizeof:sizeof sym level: 0 namespace:19>
                                                            <(:( sym level: 0 namespace:19>
                                                            <&type_name ns:19>
                                                                <&spec_qual_list ns:19>
                                                                    <&type_spec ns:19>
                                                                        <KW_void:void sym level: 0 namespace:19>
                                                                <&abstract_declarator ns:19>
                                                                    <&pointer ns:19>
                                                                        <*:* sym level: 0 namespace:19>
                                                            <):) sym level: 0 namespace:19>
                                                    <-:- sym level: 0 namespace:19>
                                                    <&unary_expr ns:19>
                                                        <KW_sizeof:sizeof sym level: 0 namespace:19>
                                                        <&primary_expression ns:19>
                                                            <(:( sym level: 0 namespace:19>
                                                            <&primary_expression ns:19>
                                                                <identifier:size_t sym level: 0 namespace:19>
                                                            <):) sym level: 0 namespace:19>
                                                <]:] sym level: 0 namespace:19>
                                <;:; sym level: 0 namespace:19>
                        <right_brace:} sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:remove sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:filename sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:rename sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:old sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:new sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:FILE sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:tmpfile sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_char:char sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:tmpnam sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fclose sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fflush sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:FILE sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:fopen sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:filename sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:mode sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:FILE sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:freopen sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:filename sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:mode sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:setbuf sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:buf sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:setvbuf sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:buf sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:mode sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:size sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fprintf sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:format sym level: 1 namespace:1>
                                <,:, sym level: 1 namespace:1>
                                <...:... sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fscanf sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:format sym level: 1 namespace:1>
                                <,:, sym level: 1 namespace:1>
                                <...:... sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:printf sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:format sym level: 1 namespace:1>
                                <,:, sym level: 1 namespace:1>
                                <...:... sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:scanf sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:format sym level: 1 namespace:1>
                                <,:, sym level: 1 namespace:1>
                                <...:... sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:snprintf sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:n sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:format sym level: 1 namespace:1>
                                <,:, sym level: 1 namespace:1>
                                <...:... sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:sprintf sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:format sym level: 1 namespace:1>
                                <,:, sym level: 1 namespace:1>
                                <...:... sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:sscanf sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:format sym level: 1 namespace:1>
                                <,:, sym level: 1 namespace:1>
                                <...:... sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_char:char sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:fgets sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:n sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fputc sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:c sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fputs sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:getc sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:getchar sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:putc sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:c sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:putchar sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:c sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:puts sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:ungetc sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:c sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fread sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:ptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:size sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:nmemb sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fwrite sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:ptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:size sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:nmemb sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fgetpos sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:fpos_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:pos sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fseek sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_long:long sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:offset sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:whence sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fsetpos sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:fpos_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:pos sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:ftell sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:rewind sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:clearerr sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:feof sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:ferror sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:perror sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fprintf_s sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:format sym level: 1 namespace:1>
                                <,:, sym level: 1 namespace:1>
                                <...:... sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:fscanf_s sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:FILE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:stream sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:format sym level: 1 namespace:1>
                                <,:, sym level: 1 namespace:1>
                                <...:... sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:printf_s sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:format sym level: 1 namespace:1>
                                <,:, sym level: 1 namespace:1>
                                <...:... sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:scanf_s sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:format sym level: 1 namespace:1>
                                <,:, sym level: 1 namespace:1>
                                <...:... sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:sscanf_s sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:format sym level: 1 namespace:1>
                                <,:, sym level: 1 namespace:1>
                                <...:... sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:size_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:memset sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:c sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:n sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:strcmp sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s1 sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s2 sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:memcpy sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s1 sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s2 sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:n sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:__errno_location sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_signed:signed sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_char:char sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int8_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_short:short sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int16_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int32_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int64_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_char:char sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uint8_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_short:short sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uint16_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uint32_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uint64_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_signed:signed sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_char:char sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int_least8_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_short:short sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int_least16_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int_least32_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int_least64_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_char:char sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uint_least8_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_short:short sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uint_least16_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uint_least32_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uint_least64_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_signed:signed sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_char:char sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int_fast8_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int_fast16_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int_fast32_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int_fast64_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_char:char sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uint_fast8_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uint_fast16_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uint_fast32_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uint_fast64_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:intmax_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uintmax_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:uintptr_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:wchar_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:uint_least16_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:char16_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:uint_least32_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:char32_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:ptrdiff_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:99>
                            <&struct_decl ns:99>
                                <&spec_qual_list ns:99>
                                    <&type_spec ns:99>
                                        <KW_int:int sym level: 0 namespace:99>
                                <&struct_declarator_list ns:99>
                                    <&struct_declarator ns:99>
                                        <&declarator ns:99>
                                            <&direct_declarator ns:99>
                                                <identifier:count sym level: 0 namespace:99>
                                <;:; sym level: 0 namespace:99>
                            <&struct_decl ns:99>
                                <&spec_qual_list ns:99>
                                    <&type_spec ns:99>
                                        <&struct_union_spec ns:99>
                                            <&struct_union ns:99>
                                                <KW_union:union sym level: 0 namespace:99>
                                            <left_brace:{ sym level: 0 namespace:99>
                                            <&struct_decl_list ns:100>
                                                <&struct_decl ns:100>
                                                    <&spec_qual_list ns:100>
                                                        <&type_spec ns:100>
                                                            <KW_int:int sym level: 0 namespace:100>
                                                    <&struct_declarator_list ns:100>
                                                        <&struct_declarator ns:100>
                                                            <&declarator ns:100>
                                                                <&direct_declarator ns:100>
                                                                    <identifier:wch sym level: 0 namespace:100>
                                                    <;:; sym level: 0 namespace:100>
                                                <&struct_decl ns:100>
                                                    <&spec_qual_list ns:100>
                                                        <&type_spec ns:100>
                                                            <KW_char:char sym level: 0 namespace:100>
                                                    <&struct_declarator_list ns:100>
                                                        <&struct_declarator ns:100>
                                                            <&declarator ns:100>
                                                                <&direct_declarator ns:100>
                                                                    <identifier:wchb sym level: 0 namespace:100>
                                                                    <[:[ sym level: 0 namespace:100>
                                                                    <&primary_expression ns:100>
                                                                        <integer_constant:4 sym level: 0 namespace:100>
                                                                    <]:] sym level: 0 namespace:100>
                                                    <;:; sym level: 0 namespace:100>
                                            <right_brace:} sym level: 0 namespace:99>
                                <&struct_declarator_list ns:99>
                                    <&struct_declarator ns:99>
                                        <&declarator ns:99>
                                            <&direct_declarator ns:99>
                                                <identifier:value sym level: 0 namespace:99>
                                <;:; sym level: 0 namespace:99>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:mbstate_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:mbrtoc16 sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:char16_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:pc16 sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:n sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:mbstate_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:p sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:c16rtomb sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:char16_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:c16 sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:mbstate_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:ps sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:mbrtoc32 sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:char32_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:pc32 sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:n sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:mbstate_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:p sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:c32rtomb sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:char32_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:c32 sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:mbstate_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:ps sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:__ctype_get_mb_cur_max sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:size_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:malloc sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:size sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:free sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:ptr sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&function_spec ns:1>
                    <KW__Noreturn:_Noreturn sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:exit sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:status sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:strtol sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:nptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:endptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:base sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:strtoll sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:nptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:endptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:base sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:strtoul sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:nptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:endptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:base sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:strtoull sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:nptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:endptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:base sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_double:double sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:strtod sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:nptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:endptr sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_float:float sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:strtof sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:nptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:endptr sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_double:double sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:strtold sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:nptr sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_restrict:restrict sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:endptr sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:mbtowc sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:wchar_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:pwc sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:str sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:n sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:mblen sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:s sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:n sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&function_spec ns:1>
                    <KW_inline:inline sym level: 1 namespace:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:is_legal_align sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_unsigned:unsigned sym level: 2 namespace:1>
                                    <&type_spec ns:1>
                                        <KW_long:long sym level: 2 namespace:1>
                                    <&type_spec ns:1>
                                        <KW_int:int sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:align_size sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&equality_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:align_size sym level: 3 namespace:1>
                            <==:== sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&while_stmt ns:1>
                        <KW_while:while sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&equality_expr ns:1>
                            <&multi_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:align_size sym level: 3 namespace:1>
                                <%:% sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:2 sym level: 3 namespace:1>
                            <==:== sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:align_size sym level: 4 namespace:1>
                                            <=:/= sym level: 4 namespace:1>
                                            <&multi_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:align_size sym level: 4 namespace:1>
                                                </:/= sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:2 sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&equality_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:align_size sym level: 3 namespace:1>
                            <!=:!= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:1 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                        <KW_else:else sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:1 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&enum_spec ns:1>
                        <KW_enum:enum sym level: 0 namespace:1>
                        <identifier:compiler_error sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&enum_list ns:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0001_ERR_NONE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0002_ERR_UNKNOWN sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0003_ERR_LEX_ERROR sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0004_ERR_NAMESPACE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0005_ERR_REDEFINE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0006_ERR_NOT_IN_SYMBOL_TABLE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0007_ERR_UNEXPECTED_TOKEN sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0008_ERR_TOO_MANY_STOR_SPEC sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0009_ERR_THREAD_LOCAL_PREFIX sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0010_ERR_NEED_MORE_TYPE_SPEC sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0011_ERR_WRONG_TYPE_SPEC sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0012_ERR_COMPLEX_NOT_SUPPORT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0013_ERR_ATOMIC_UNSUPPORT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0014_ERR_ATOMIC_TYPE_NAME sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0015_ERR_REDEFINATION sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0016_ERR_UNDECLARATION sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0017_ERR_TYPEDEF_OVERLAP sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0018_ERR_STRUCT_INCOMPLETE_FUNCTION_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0019_ERR_ILLEGAL_CONST_EXPR sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0020_ERR_CONST_EXPR_RANGE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0021_ERR_STATIC_ASSERT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0022_ERR_BIT_FIELD_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0023_ERR_BIT_FIELD_WIDTH_EXCEED sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0024_ERR_BIT_FIELD_WIDTH_INT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0025_ERR_BIT_FIELD_WIDTH_NEGATIVE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0026_ERR_BIT_FIELD_ZERO_WITH_DECLERATOR sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0027_ERR_ENUM_NOT_INT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0028_ERR_ENUM_RANGE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0029_ERR_LKA_EXTERN_FOLLOW_NO sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0030_ERR_LKA_NO_FOLLOW_EXTERN sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0031_ERR_CONFICT_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0032_ERR_CONFICT_LINKAGE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0033_ERR_CONFICT_THREAD_LOCAL sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0034_ERR_ARR_STAR_SCOPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0035_ERR_ARR_QUAL_STATIC_OUTMOST sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0036_ERR_ARR_QUAL_STATIC_IN_PARA sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0037_ERR_ARR_STATIC_THREAD_WITH_VLA sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0038_ERR_ARR_SIZE_INTEGER sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0039_ERR_ARR_SIZE_ZERO sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0040_ERR_ARR_FUNCTIONS_INCOMPLETE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0041_ERR_VM_ID sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0042_ERR_FUN_IDENTIFIER_LIST sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0043_ERR_FUN_RETURN_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0044_ERR_FUNC_DEF_DECL_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0045_ERR_FUNC_PARA_INCOMPLETE_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0046_ERR_FUNC_VOID_MORE_THAN_ONE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0047_ERR_FUNC_PARA_STORAGE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0048_ERR_LVALUE_ARR_TYPE_COMPLETE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0049_ERR_LVALUE_ARR_TYPE_WRONG sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0050_ERR_LVALUE_FUNC_TYPE_WRONG sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0051_ERR_LVALUE_REQUIRED sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0052_ERR_EXPR_TYPE_ERROR sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0053_ERR_EXPR_STRUCT_UNION_DOT_TYPE_WRONG sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0054_ERR_EXPR_STRUCT_UNION_POINT_TYPE_WRONG sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0055_ERR_EXPR_POSTFIX_DOUBLE_P_M_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0056_ERR_EXPR_MODIFIABLE_LVALUE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0057_ERR_OPERAND_BIT_FIELD sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0058_ERR_OPERAND_REGISTER sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0059_ERR_OPERAND_SHOULD_POINTER sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0060_ERR_OPERAND_INTEGER_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0061_ERR_OPERAND_ARTHMATIC_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0062_ERR_OPERAND_SCALAR_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0063_ERR_OPERAND_REAL_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0064_ERR_SIZEOF_INCOMPLETE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0065_ERR_SIZEOF_FUNCTION sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0066_ERR_CAST_CONVERT_POINT_FLOAT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0067_ERR_ADD_OPERAND_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0068_ERR_MINUS_OPERAND_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0069_ERR_NEED_COMPATIBLE_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0070_ERR_EQUAL_OPERAND sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0071_ERR_CONDITION_OPERAND sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0072_ERR_ASSIGN_OPERAND sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0073_ERR_FUNC_MORE_PARAMETERS sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0074_ERR_FUNC_PARA_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0075_ERR_FOR_DECLARATION_STOR sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0076_ERR_IN_SWITCH sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0077_ERR_SWITCH_SAME_CASE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0078_ERR_IN_LOOP sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0079_ERR_IN_SWITCH_LOOP sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0080_ERR_FUNC_RET_VOID sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0081_ERR_FUNC_RET_NONE_VOID sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0082_ERR_FUNC_NO_ID_LIST_BUT_DEC sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0083_ERR_FUNC_PARA_INITILIZATION sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0084_ERR_FUNC_STORAGE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0085_ERR_FUNC_PARA_OLD_NOT_FIND sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0086_ERR_FUNC_PARA_OLD_NOT_DEC sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0087_ERR_FUNC_PARA_OLD_STOR sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0088_ERR_ALIGN_TWO_POWER sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0089_ERR_ALIGN_CANNOT_SPECIFIE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0090_ERR_ALIGN_DIFFERENT_DECLARATION sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0091_ERR_INIT_TYPE_COMPLETE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0092_ERR_INIT_ENTITY sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0093_ERR_INIT_DESIGNATOR_CONST_EXPR sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:C0094_ERR_INIT_DESIGNATOR_IDENTIFIER sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:W0001_WARN_NONE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:W0002_WARN_UNKNOWN sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:W0003_WARN_NO_DECLARATION_ANY_THING sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:W0004_WARN_DUPLICATE_QUAL sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:W0005_WARN_IMPLICIT_DEC sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:W0006_WARN_NO_RETURN sym level: 0 namespace:1>
                        <,:, sym level: 0 namespace:1>
                        <right_brace:} sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:LINE_NUM sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:line sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:123>
                            <&struct_decl ns:123>
                                <&spec_qual_list ns:123>
                                    <&type_spec ns:123>
                                        <&typedef_name ns:123>
                                            <identifier:LINE_NUM sym level: 0 namespace:123>
                                <&struct_declarator_list ns:123>
                                    <&struct_declarator ns:123>
                                        <&declarator ns:123>
                                            <&direct_declarator ns:123>
                                                <identifier:line_number sym level: 0 namespace:123>
                                <;:; sym level: 0 namespace:123>
                            <&struct_decl ns:123>
                                <&spec_qual_list ns:123>
                                    <&type_spec ns:123>
                                        <&typedef_name ns:123>
                                            <identifier:size_t sym level: 0 namespace:123>
                                <&struct_declarator_list ns:123>
                                    <&struct_declarator ns:123>
                                        <&declarator ns:123>
                                            <&direct_declarator ns:123>
                                                <identifier:start sym level: 0 namespace:123>
                                <;:; sym level: 0 namespace:123>
                            <&struct_decl ns:123>
                                <&spec_qual_list ns:123>
                                    <&type_spec ns:123>
                                        <&typedef_name ns:123>
                                            <identifier:size_t sym level: 0 namespace:123>
                                <&struct_declarator_list ns:123>
                                    <&struct_declarator ns:123>
                                        <&declarator ns:123>
                                            <&direct_declarator ns:123>
                                                <identifier:end sym level: 0 namespace:123>
                                <;:; sym level: 0 namespace:123>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:LINE sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:mcc_error_item sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:125>
                            <&struct_decl ns:125>
                                <&spec_qual_list ns:125>
                                    <&type_spec ns:125>
                                        <&enum_spec ns:125>
                                            <KW_enum:enum sym level: 0 namespace:125>
                                            <identifier:compiler_error sym level: 0 namespace:2>
                                <&struct_declarator_list ns:125>
                                    <&struct_declarator ns:125>
                                        <&declarator ns:125>
                                            <&direct_declarator ns:125>
                                                <identifier:ce sym level: 0 namespace:125>
                                <;:; sym level: 0 namespace:125>
                            <&struct_decl ns:125>
                                <&spec_qual_list ns:125>
                                    <&type_spec ns:125>
                                        <KW_char:char sym level: 0 namespace:125>
                                <&struct_declarator_list ns:125>
                                    <&struct_declarator ns:125>
                                        <&declarator ns:125>
                                            <&pointer ns:125>
                                                <*:* sym level: 0 namespace:125>
                                            <&direct_declarator ns:125>
                                                <identifier:filename sym level: 0 namespace:125>
                                <;:; sym level: 0 namespace:125>
                            <&struct_decl ns:125>
                                <&spec_qual_list ns:125>
                                    <&type_spec ns:125>
                                        <&typedef_name ns:125>
                                            <identifier:LINE_NUM sym level: 0 namespace:125>
                                <&struct_declarator_list ns:125>
                                    <&struct_declarator ns:125>
                                        <&declarator ns:125>
                                            <&direct_declarator ns:125>
                                                <identifier:error_line sym level: 0 namespace:125>
                                <;:; sym level: 0 namespace:125>
                            <&struct_decl ns:125>
                                <&spec_qual_list ns:125>
                                    <&type_spec ns:125>
                                        <KW_char:char sym level: 0 namespace:125>
                                <&struct_declarator_list ns:125>
                                    <&struct_declarator ns:125>
                                        <&declarator ns:125>
                                            <&pointer ns:125>
                                                <*:* sym level: 0 namespace:125>
                                            <&direct_declarator ns:125>
                                                <identifier:error_token_value sym level: 0 namespace:125>
                                <;:; sym level: 0 namespace:125>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:ERROR_ITEM sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:m_error sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:filename sym level: 1 namespace:1>
                                                <[:[ sym level: 1 namespace:1>
                                                <]:] sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:function sym level: 1 namespace:1>
                                                <[:[ sym level: 1 namespace:1>
                                                <]:] sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:reason sym level: 1 namespace:1>
                                                <[:[ sym level: 1 namespace:1>
                                                <]:] sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:m_error_arg_char sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:arg sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:m_error_arg_int sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:arg sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:m_test sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:test sym level: 1 namespace:1>
                                                <[:[ sym level: 1 namespace:1>
                                                <]:] sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:m_test_item sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:test_item_name sym level: 1 namespace:1>
                                                <[:[ sym level: 1 namespace:1>
                                                <]:] sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:m_test_arg_char sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:item_arg sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:m_test_arg_int sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:item_arg sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:mcc_error sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:ERROR_ITEM sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:e sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:file_buf sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:LINE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:line sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&function_spec ns:1>
                    <KW_inline:inline sym level: 1 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:m_error_item sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:ERROR_ITEM sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:tei sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&enum_spec ns:1>
                                            <KW_enum:enum sym level: 2 namespace:1>
                                            <identifier:compiler_error sym level: 2 namespace:2>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:ce sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_char:char sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:filename sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:LINE_NUM sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:error_line sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_char:char sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:error_token_value sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&assignment_expr ns:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:tei sym level: 2 namespace:1>
                                <->:-> sym level: 2 namespace:1>
                                <identifier:ce sym level: 2 namespace:0>
                            <=:= sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:ce sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&assignment_expr ns:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:tei sym level: 2 namespace:1>
                                <->:-> sym level: 2 namespace:1>
                                <identifier:filename sym level: 2 namespace:0>
                            <=:= sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:filename sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&assignment_expr ns:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:tei sym level: 2 namespace:1>
                                <->:-> sym level: 2 namespace:1>
                                <identifier:error_line sym level: 2 namespace:0>
                            <=:= sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:error_line sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&assignment_expr ns:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:tei sym level: 2 namespace:1>
                                <->:-> sym level: 2 namespace:1>
                                <identifier:error_token_value sym level: 2 namespace:0>
                            <=:= sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:error_token_value sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&cast_expr ns:1>
                            <(:( sym level: 2 namespace:1>
                            <&type_name ns:1>
                                <&spec_qual_list ns:1>
                                    <&type_spec ns:1>
                                        <KW_void:void sym level: 2 namespace:1>
                                <&abstract_declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                            <):) sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:tei sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:mem_pool sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:136>
                            <&struct_decl ns:136>
                                <&spec_qual_list ns:136>
                                    <&type_spec ns:136>
                                        <KW_char:char sym level: 0 namespace:136>
                                <&struct_declarator_list ns:136>
                                    <&struct_declarator ns:136>
                                        <&declarator ns:136>
                                            <&direct_declarator ns:136>
                                                <identifier:name sym level: 0 namespace:136>
                                                <[:[ sym level: 0 namespace:136>
                                                <&primary_expression ns:136>
                                                    <integer_constant:8 sym level: 0 namespace:136>
                                                <]:] sym level: 0 namespace:136>
                                <;:; sym level: 0 namespace:136>
                            <&struct_decl ns:136>
                                <&spec_qual_list ns:136>
                                    <&type_spec ns:136>
                                        <KW_unsigned:unsigned sym level: 0 namespace:136>
                                    <&type_spec ns:136>
                                        <KW_long:long sym level: 0 namespace:136>
                                    <&type_spec ns:136>
                                        <KW_long:long sym level: 0 namespace:136>
                                    <&type_spec ns:136>
                                        <KW_int:int sym level: 0 namespace:136>
                                <&struct_declarator_list ns:136>
                                    <&struct_declarator ns:136>
                                        <&declarator ns:136>
                                            <&direct_declarator ns:136>
                                                <identifier:malloc_cnt sym level: 0 namespace:136>
                                <;:; sym level: 0 namespace:136>
                            <&struct_decl ns:136>
                                <&spec_qual_list ns:136>
                                    <&type_spec ns:136>
                                        <KW_unsigned:unsigned sym level: 0 namespace:136>
                                    <&type_spec ns:136>
                                        <KW_long:long sym level: 0 namespace:136>
                                    <&type_spec ns:136>
                                        <KW_long:long sym level: 0 namespace:136>
                                    <&type_spec ns:136>
                                        <KW_int:int sym level: 0 namespace:136>
                                <&struct_declarator_list ns:136>
                                    <&struct_declarator ns:136>
                                        <&declarator ns:136>
                                            <&direct_declarator ns:136>
                                                <identifier:free_cnt sym level: 0 namespace:136>
                                <;:; sym level: 0 namespace:136>
                            <&struct_decl ns:136>
                                <&spec_qual_list ns:136>
                                    <&type_spec ns:136>
                                        <KW_unsigned:unsigned sym level: 0 namespace:136>
                                    <&type_spec ns:136>
                                        <KW_long:long sym level: 0 namespace:136>
                                    <&type_spec ns:136>
                                        <KW_long:long sym level: 0 namespace:136>
                                    <&type_spec ns:136>
                                        <KW_int:int sym level: 0 namespace:136>
                                <&struct_declarator_list ns:136>
                                    <&struct_declarator ns:136>
                                        <&declarator ns:136>
                                            <&direct_declarator ns:136>
                                                <identifier:sys_malloc_cnt sym level: 0 namespace:136>
                                <;:; sym level: 0 namespace:136>
                            <&struct_decl ns:136>
                                <&spec_qual_list ns:136>
                                    <&type_spec ns:136>
                                        <KW_unsigned:unsigned sym level: 0 namespace:136>
                                    <&type_spec ns:136>
                                        <KW_long:long sym level: 0 namespace:136>
                                    <&type_spec ns:136>
                                        <KW_long:long sym level: 0 namespace:136>
                                    <&type_spec ns:136>
                                        <KW_int:int sym level: 0 namespace:136>
                                <&struct_declarator_list ns:136>
                                    <&struct_declarator ns:136>
                                        <&declarator ns:136>
                                            <&direct_declarator ns:136>
                                                <identifier:sys_free_cnt sym level: 0 namespace:136>
                                <;:; sym level: 0 namespace:136>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:MEM_POOL sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:MEM_POOL sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:MEMInit sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:name sym level: 1 namespace:1>
                                                <[:[ sym level: 1 namespace:1>
                                                <]:] sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:MEMDel sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:MEM_POOL sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:pool sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:m_alloc sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:n sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:m_free sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:p sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&function_spec ns:1>
                    <KW_inline:inline sym level: 1 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:m_memset sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_void:void sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:p sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_char:char sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:value sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:size_t sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:len sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:memset sym level: 2 namespace:1>
                            <(:( sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:p sym level: 2 namespace:1>
                            <,:, sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:value sym level: 2 namespace:1>
                            <,:, sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:len sym level: 2 namespace:1>
                            <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:vector sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:143>
                            <&struct_decl ns:143>
                                <&spec_qual_list ns:143>
                                    <&type_spec ns:143>
                                        <KW_void:void sym level: 0 namespace:143>
                                <&struct_declarator_list ns:143>
                                    <&struct_declarator ns:143>
                                        <&declarator ns:143>
                                            <&pointer ns:143>
                                                <*:* sym level: 0 namespace:143>
                                            <&pointer ns:143>
                                                <*:* sym level: 0 namespace:143>
                                            <&direct_declarator ns:143>
                                                <identifier:data sym level: 0 namespace:143>
                                <;:; sym level: 0 namespace:143>
                            <&struct_decl ns:143>
                                <&spec_qual_list ns:143>
                                    <&type_spec ns:143>
                                        <&typedef_name ns:143>
                                            <identifier:size_t sym level: 0 namespace:143>
                                <&struct_declarator_list ns:143>
                                    <&struct_declarator ns:143>
                                        <&declarator ns:143>
                                            <&direct_declarator ns:143>
                                                <identifier:capicity sym level: 0 namespace:143>
                                <;:; sym level: 0 namespace:143>
                            <&struct_decl ns:143>
                                <&spec_qual_list ns:143>
                                    <&type_spec ns:143>
                                        <&typedef_name ns:143>
                                            <identifier:size_t sym level: 0 namespace:143>
                                <&struct_declarator_list ns:143>
                                    <&struct_declarator ns:143>
                                        <&declarator ns:143>
                                            <&direct_declarator ns:143>
                                                <identifier:len sym level: 0 namespace:143>
                                <;:; sym level: 0 namespace:143>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:VEC sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:InitVEC sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:len sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:VECinsert sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:v sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:p sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:VECremove sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:v sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:low sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:high sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:VECpopback sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:v sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:VECexpand sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:v sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:VECshrink sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:v sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:VECcpy sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:src sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:dst sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&function_spec ns:1>
                    <KW_inline:inline sym level: 1 namespace:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:VECappend sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:src sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:dst sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:src sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:dst sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <&typedef_name ns:1>
                                        <identifier:size_t sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <<:< sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:src sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:len sym level: 3 namespace:0>
                                <):) sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <++:++ sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:VECinsert sym level: 4 namespace:1>
                                            <(:( sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:dst sym level: 4 namespace:1>
                                            <,:, sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 4 namespace:1>
                                                <&conditional_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 4 namespace:1>
                                                        <&logical_and_expr ns:1>
                                                            <&equality_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:src sym level: 4 namespace:1>
                                                                <!=:!= sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <integer_constant:0 sym level: 4 namespace:1>
                                                            <double_ampersand:&& sym level: 4 namespace:1>
                                                            <&relational_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:i sym level: 4 namespace:1>
                                                                <<:< sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <(:( sym level: 4 namespace:1>
                                                                    <&postfix_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:src sym level: 4 namespace:1>
                                                                        <->:-> sym level: 4 namespace:1>
                                                                        <identifier:len sym level: 4 namespace:0>
                                                                    <):) sym level: 4 namespace:1>
                                                        <):) sym level: 4 namespace:1>
                                                    <?:? sym level: 4 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 4 namespace:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:src sym level: 4 namespace:1>
                                                            <->:-> sym level: 4 namespace:1>
                                                            <identifier:data sym level: 4 namespace:0>
                                                            <[:[ sym level: 4 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:i sym level: 4 namespace:1>
                                                            <]:] sym level: 4 namespace:1>
                                                        <):) sym level: 4 namespace:1>
                                                    <colon:: sym level: 4 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <integer_constant:0 sym level: 4 namespace:1>
                                                <):) sym level: 4 namespace:1>
                                            <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:DelVEC sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:v sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:NMSP sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:NMSP sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:GET_NEW_NAMESPACE sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:RESET_NAMESPACE sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:hash_table sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:157>
                            <&struct_decl ns:157>
                                <&spec_qual_list ns:157>
                                    <&type_spec ns:157>
                                        <KW_void:void sym level: 0 namespace:157>
                                <&struct_declarator_list ns:157>
                                    <&struct_declarator ns:157>
                                        <&declarator ns:157>
                                            <&pointer ns:157>
                                                <*:* sym level: 0 namespace:157>
                                            <&pointer ns:157>
                                                <*:* sym level: 0 namespace:157>
                                            <&direct_declarator ns:157>
                                                <identifier:data sym level: 0 namespace:157>
                                <;:; sym level: 0 namespace:157>
                            <&struct_decl ns:157>
                                <&spec_qual_list ns:157>
                                    <&type_spec ns:157>
                                        <KW_unsigned:unsigned sym level: 0 namespace:157>
                                    <&type_spec ns:157>
                                        <KW_long:long sym level: 0 namespace:157>
                                    <&type_spec ns:157>
                                        <KW_long:long sym level: 0 namespace:157>
                                    <&type_spec ns:157>
                                        <KW_int:int sym level: 0 namespace:157>
                                <&struct_declarator_list ns:157>
                                    <&struct_declarator ns:157>
                                        <&declarator ns:157>
                                            <&direct_declarator ns:157>
                                                <identifier:capicity sym level: 0 namespace:157>
                                <;:; sym level: 0 namespace:157>
                            <&struct_decl ns:157>
                                <&spec_qual_list ns:157>
                                    <&type_spec ns:157>
                                        <KW_unsigned:unsigned sym level: 0 namespace:157>
                                    <&type_spec ns:157>
                                        <KW_long:long sym level: 0 namespace:157>
                                    <&type_spec ns:157>
                                        <KW_long:long sym level: 0 namespace:157>
                                    <&type_spec ns:157>
                                        <KW_int:int sym level: 0 namespace:157>
                                <&struct_declarator_list ns:157>
                                    <&struct_declarator ns:157>
                                        <&declarator ns:157>
                                            <&direct_declarator ns:157>
                                                <identifier:capicity_index sym level: 0 namespace:157>
                                <;:; sym level: 0 namespace:157>
                            <&struct_decl ns:157>
                                <&spec_qual_list ns:157>
                                    <&type_spec ns:157>
                                        <KW_unsigned:unsigned sym level: 0 namespace:157>
                                    <&type_spec ns:157>
                                        <KW_long:long sym level: 0 namespace:157>
                                    <&type_spec ns:157>
                                        <KW_long:long sym level: 0 namespace:157>
                                    <&type_spec ns:157>
                                        <KW_int:int sym level: 0 namespace:157>
                                <&struct_declarator_list ns:157>
                                    <&struct_declarator ns:157>
                                        <&declarator ns:157>
                                            <&direct_declarator ns:157>
                                                <identifier:record_num sym level: 0 namespace:157>
                                <;:; sym level: 0 namespace:157>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:HASH sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:hash_item sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:159>
                            <&struct_decl ns:159>
                                <&spec_qual_list ns:159>
                                    <&type_spec ns:159>
                                        <KW_unsigned:unsigned sym level: 0 namespace:159>
                                    <&type_spec ns:159>
                                        <KW_long:long sym level: 0 namespace:159>
                                    <&type_spec ns:159>
                                        <KW_long:long sym level: 0 namespace:159>
                                    <&type_spec ns:159>
                                        <KW_int:int sym level: 0 namespace:159>
                                <&struct_declarator_list ns:159>
                                    <&struct_declarator ns:159>
                                        <&declarator ns:159>
                                            <&direct_declarator ns:159>
                                                <identifier:key sym level: 0 namespace:159>
                                <;:; sym level: 0 namespace:159>
                            <&struct_decl ns:159>
                                <&spec_qual_list ns:159>
                                    <&type_spec ns:159>
                                        <KW_unsigned:unsigned sym level: 0 namespace:159>
                                    <&type_spec ns:159>
                                        <KW_int:int sym level: 0 namespace:159>
                                <&struct_declarator_list ns:159>
                                    <&struct_declarator ns:159>
                                        <&declarator ns:159>
                                            <&direct_declarator ns:159>
                                                <identifier:count sym level: 0 namespace:159>
                                <;:; sym level: 0 namespace:159>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:HASH_ITEM sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&function_spec ns:1>
                    <KW_inline:inline sym level: 1 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 1 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 1 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 1 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:HASHFunction sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_unsigned:unsigned sym level: 2 namespace:1>
                                    <&type_spec ns:1>
                                        <KW_long:long sym level: 2 namespace:1>
                                    <&type_spec ns:1>
                                        <KW_long:long sym level: 2 namespace:1>
                                    <&type_spec ns:1>
                                        <KW_int:int sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:key sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:HASH sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:h sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&multi_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:key sym level: 2 namespace:1>
                            <%:% sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 2 namespace:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:h sym level: 2 namespace:1>
                                    <->:-> sym level: 2 namespace:1>
                                    <identifier:capicity sym level: 2 namespace:0>
                                <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:HASH sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:InitHASH sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:HSAHExpand sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:HASH sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:h sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW__Bool:_Bool sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <(:( sym level: 1 namespace:1>
                                                <&declarator ns:1>
                                                    <&pointer ns:1>
                                                        <*:* sym level: 1 namespace:1>
                                                    <&direct_declarator ns:1>
                                                        <identifier:cmp sym level: 1 namespace:1>
                                                <):) sym level: 1 namespace:1>
                                                <(:( sym level: 1 namespace:1>
                                                <&parameter_type_list ns:1>
                                                    <&parameter_list ns:1>
                                                        <&parameter_declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <KW_void:void sym level: 2 namespace:1>
                                                            <&declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 2 namespace:1>
                                                                <&direct_declarator ns:1>
                                                                    <identifier:a sym level: 2 namespace:1>
                                                        <&parameter_declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <KW_void:void sym level: 2 namespace:1>
                                                            <&declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 2 namespace:1>
                                                                <&direct_declarator ns:1>
                                                                    <identifier:b sym level: 2 namespace:1>
                                                <):) sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:HASHInsert sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:HASH sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:h sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:HASH_ITEM sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:item sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW__Bool:_Bool sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <(:( sym level: 1 namespace:1>
                                                <&declarator ns:1>
                                                    <&pointer ns:1>
                                                        <*:* sym level: 1 namespace:1>
                                                    <&direct_declarator ns:1>
                                                        <identifier:cmp sym level: 1 namespace:1>
                                                <):) sym level: 1 namespace:1>
                                                <(:( sym level: 1 namespace:1>
                                                <&parameter_type_list ns:1>
                                                    <&parameter_list ns:1>
                                                        <&parameter_declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <KW_void:void sym level: 2 namespace:1>
                                                            <&declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 2 namespace:1>
                                                                <&direct_declarator ns:1>
                                                                    <identifier:a sym level: 2 namespace:1>
                                                        <&parameter_declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <KW_void:void sym level: 2 namespace:1>
                                                            <&declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 2 namespace:1>
                                                                <&direct_declarator ns:1>
                                                                    <identifier:b sym level: 2 namespace:1>
                                                <):) sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:HASH_ITEM sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:HASHFind sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:HASH sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:h sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:a sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW__Bool:_Bool sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <(:( sym level: 1 namespace:1>
                                                <&declarator ns:1>
                                                    <&pointer ns:1>
                                                        <*:* sym level: 1 namespace:1>
                                                    <&direct_declarator ns:1>
                                                        <identifier:cmp sym level: 1 namespace:1>
                                                <):) sym level: 1 namespace:1>
                                                <(:( sym level: 1 namespace:1>
                                                <&parameter_type_list ns:1>
                                                    <&parameter_list ns:1>
                                                        <&parameter_declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <KW_void:void sym level: 2 namespace:1>
                                                            <&declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 2 namespace:1>
                                                                <&direct_declarator ns:1>
                                                                    <identifier:a sym level: 2 namespace:1>
                                                        <&parameter_declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <KW_void:void sym level: 2 namespace:1>
                                                            <&declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 2 namespace:1>
                                                                <&direct_declarator ns:1>
                                                                    <identifier:b sym level: 2 namespace:1>
                                                <):) sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW__Bool:_Bool sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:delete_item sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW__Bool:_Bool sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:insert_item sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:HASH sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:HASHCOPY sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:HASH sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:h sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:DelHASH sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:HASH sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:h sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:TestHASH sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&enum_spec ns:1>
                        <KW_enum:enum sym level: 0 namespace:1>
                        <identifier:TP_STORAGE_SPEC sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&enum_list ns:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_STOR_NONE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_TYPE_DEF sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_EXTERN sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_STATIC sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_EXTERN_THREAD_LOCAL sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_AUTO sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_REGISTER sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_STATIC_THREAD_LOCAL sym level: 0 namespace:1>
                        <right_brace:} sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&enum_spec ns:1>
                        <KW_enum:enum sym level: 0 namespace:1>
                        <identifier:TP_CATEGORY sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&enum_list ns:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_SPEC_NONE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_VOID sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_SCHAR sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_USCHAR sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_SSHORT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_USHORT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_SINT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_USINT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_SLONG sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_USLONG sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_SLONGLONG sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_USLONGLONG sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_FLOAT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_DOUBLE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_LONG_DOUBLE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_BOOL sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_FLOAT_COMPLEX sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_DOUBLE_COMPLEX sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_LONG_DOUBLE_COMPLEX sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_POINT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_UNION_STRUCT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_UNION sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_STRUCT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_ARRAY sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_ENUM sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_FUNCTION sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_TYPE_DEF_TYPE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_SPEC_ATOMIC sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_NULL_POINTER_CONSTANT sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:TP_LABEL sym level: 0 namespace:1>
                        <right_brace:} sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:171>
                            <&struct_decl ns:171>
                                <&spec_qual_list ns:171>
                                    <&type_spec ns:171>
                                        <KW_unsigned:unsigned sym level: 0 namespace:171>
                                    <&type_spec ns:171>
                                        <KW_long:long sym level: 0 namespace:171>
                                    <&type_spec ns:171>
                                        <KW_long:long sym level: 0 namespace:171>
                                    <&type_spec ns:171>
                                        <KW_int:int sym level: 0 namespace:171>
                                <&struct_declarator_list ns:171>
                                    <&struct_declarator ns:171>
                                        <&declarator ns:171>
                                            <&direct_declarator ns:171>
                                                <identifier:key sym level: 0 namespace:171>
                                <;:; sym level: 0 namespace:171>
                            <&struct_decl ns:171>
                                <&spec_qual_list ns:171>
                                    <&type_spec ns:171>
                                        <KW_unsigned:unsigned sym level: 0 namespace:171>
                                    <&type_spec ns:171>
                                        <KW_int:int sym level: 0 namespace:171>
                                <&struct_declarator_list ns:171>
                                    <&struct_declarator ns:171>
                                        <&declarator ns:171>
                                            <&direct_declarator ns:171>
                                                <identifier:count sym level: 0 namespace:171>
                                <;:; sym level: 0 namespace:171>
                            <&struct_decl ns:171>
                                <&spec_qual_list ns:171>
                                    <&type_spec ns:171>
                                        <KW__Bool:_Bool sym level: 0 namespace:171>
                                <&struct_declarator_list ns:171>
                                    <&struct_declarator ns:171>
                                        <&declarator ns:171>
                                            <&direct_declarator ns:171>
                                                <identifier:complete sym level: 0 namespace:171>
                                <;:; sym level: 0 namespace:171>
                            <&struct_decl ns:171>
                                <&spec_qual_list ns:171>
                                    <&type_spec ns:171>
                                        <KW__Bool:_Bool sym level: 0 namespace:171>
                                <&struct_declarator_list ns:171>
                                    <&struct_declarator ns:171>
                                        <&declarator ns:171>
                                            <&direct_declarator ns:171>
                                                <identifier:modifier sym level: 0 namespace:171>
                                <;:; sym level: 0 namespace:171>
                            <&struct_decl ns:171>
                                <&spec_qual_list ns:171>
                                    <&type_spec ns:171>
                                        <&struct_union_spec ns:171>
                                            <&struct_union ns:171>
                                                <KW_union:union sym level: 0 namespace:171>
                                            <left_brace:{ sym level: 0 namespace:171>
                                            <&struct_decl_list ns:172>
                                                <&struct_decl ns:172>
                                                    <&spec_qual_list ns:172>
                                                        <&type_spec ns:172>
                                                            <&struct_union_spec ns:172>
                                                                <&struct_union ns:172>
                                                                    <KW_struct:struct sym level: 0 namespace:172>
                                                                <left_brace:{ sym level: 0 namespace:172>
                                                                <&struct_decl_list ns:173>
                                                                    <&struct_decl ns:173>
                                                                        <&spec_qual_list ns:173>
                                                                            <&type_spec ns:173>
                                                                                <&enum_spec ns:173>
                                                                                    <KW_enum:enum sym level: 0 namespace:173>
                                                                                    <identifier:TP_STORAGE_SPEC sym level: 0 namespace:2>
                                                                        <&struct_declarator_list ns:173>
                                                                            <&struct_declarator ns:173>
                                                                                <&declarator ns:173>
                                                                                    <&direct_declarator ns:173>
                                                                                        <identifier:typ_stor sym level: 0 namespace:173>
                                                                        <;:; sym level: 0 namespace:173>
                                                                    <&struct_decl ns:173>
                                                                        <&spec_qual_list ns:173>
                                                                            <&type_spec ns:173>
                                                                                <KW_unsigned:unsigned sym level: 0 namespace:173>
                                                                            <&type_spec ns:173>
                                                                                <KW_char:char sym level: 0 namespace:173>
                                                                        <&struct_declarator_list ns:173>
                                                                            <&struct_declarator ns:173>
                                                                                <&declarator ns:173>
                                                                                    <&direct_declarator ns:173>
                                                                                        <identifier:type_qual sym level: 0 namespace:173>
                                                                        <;:; sym level: 0 namespace:173>
                                                                    <&struct_decl ns:173>
                                                                        <&spec_qual_list ns:173>
                                                                            <&type_spec ns:173>
                                                                                <KW_unsigned:unsigned sym level: 0 namespace:173>
                                                                            <&type_spec ns:173>
                                                                                <KW_char:char sym level: 0 namespace:173>
                                                                        <&struct_declarator_list ns:173>
                                                                            <&struct_declarator ns:173>
                                                                                <&declarator ns:173>
                                                                                    <&direct_declarator ns:173>
                                                                                        <identifier:func_spec sym level: 0 namespace:173>
                                                                        <;:; sym level: 0 namespace:173>
                                                                    <&struct_decl ns:173>
                                                                        <&spec_qual_list ns:173>
                                                                            <&type_spec ns:173>
                                                                                <KW_unsigned:unsigned sym level: 0 namespace:173>
                                                                            <&type_spec ns:173>
                                                                                <KW_long:long sym level: 0 namespace:173>
                                                                            <&type_spec ns:173>
                                                                                <KW_int:int sym level: 0 namespace:173>
                                                                        <&struct_declarator_list ns:173>
                                                                            <&struct_declarator ns:173>
                                                                                <&declarator ns:173>
                                                                                    <&direct_declarator ns:173>
                                                                                        <identifier:align_spec sym level: 0 namespace:173>
                                                                        <;:; sym level: 0 namespace:173>
                                                                <right_brace:} sym level: 0 namespace:172>
                                                    <;:; sym level: 0 namespace:172>
                                                <&struct_decl ns:172>
                                                    <&spec_qual_list ns:172>
                                                        <&type_spec ns:172>
                                                            <&struct_union_spec ns:172>
                                                                <&struct_union ns:172>
                                                                    <KW_struct:struct sym level: 0 namespace:172>
                                                                <left_brace:{ sym level: 0 namespace:172>
                                                                <&struct_decl_list ns:174>
                                                                    <&struct_decl ns:174>
                                                                        <&spec_qual_list ns:174>
                                                                            <&type_spec ns:174>
                                                                                <&enum_spec ns:174>
                                                                                    <KW_enum:enum sym level: 0 namespace:174>
                                                                                    <identifier:TP_CATEGORY sym level: 0 namespace:2>
                                                                        <&struct_declarator_list ns:174>
                                                                            <&struct_declarator ns:174>
                                                                                <&declarator ns:174>
                                                                                    <&direct_declarator ns:174>
                                                                                        <identifier:typ_category sym level: 0 namespace:174>
                                                                        <;:; sym level: 0 namespace:174>
                                                                    <&struct_decl ns:174>
                                                                        <&spec_qual_list ns:174>
                                                                            <&type_spec ns:174>
                                                                                <KW_unsigned:unsigned sym level: 0 namespace:174>
                                                                            <&type_spec ns:174>
                                                                                <KW_int:int sym level: 0 namespace:174>
                                                                        <&struct_declarator_list ns:174>
                                                                            <&struct_declarator ns:174>
                                                                                <&declarator ns:174>
                                                                                    <&direct_declarator ns:174>
                                                                                        <identifier:data_size sym level: 0 namespace:174>
                                                                        <;:; sym level: 0 namespace:174>
                                                                <right_brace:} sym level: 0 namespace:172>
                                                    <;:; sym level: 0 namespace:172>
                                            <right_brace:} sym level: 0 namespace:171>
                                <;:; sym level: 0 namespace:171>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:M_TYPE sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <KW_unsigned:unsigned sym level: 0 namespace:176>
                                    <&type_spec ns:176>
                                        <KW_long:long sym level: 0 namespace:176>
                                    <&type_spec ns:176>
                                        <KW_long:long sym level: 0 namespace:176>
                                    <&type_spec ns:176>
                                        <KW_int:int sym level: 0 namespace:176>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&direct_declarator ns:176>
                                                <identifier:key sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <KW_unsigned:unsigned sym level: 0 namespace:176>
                                    <&type_spec ns:176>
                                        <KW_int:int sym level: 0 namespace:176>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&direct_declarator ns:176>
                                                <identifier:count sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <KW__Bool:_Bool sym level: 0 namespace:176>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&direct_declarator ns:176>
                                                <identifier:complete sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <KW__Bool:_Bool sym level: 0 namespace:176>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&direct_declarator ns:176>
                                                <identifier:modifier sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <&enum_spec ns:176>
                                            <KW_enum:enum sym level: 0 namespace:176>
                                            <identifier:TP_CATEGORY sym level: 0 namespace:2>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&direct_declarator ns:176>
                                                <identifier:typ_category sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <KW_unsigned:unsigned sym level: 0 namespace:176>
                                    <&type_spec ns:176>
                                        <KW_int:int sym level: 0 namespace:176>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&direct_declarator ns:176>
                                                <identifier:data_size sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <KW_char:char sym level: 0 namespace:176>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&pointer ns:176>
                                                <*:* sym level: 0 namespace:176>
                                            <&direct_declarator ns:176>
                                                <identifier:tag sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <&typedef_name ns:176>
                                            <identifier:VEC sym level: 0 namespace:176>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&pointer ns:176>
                                                <*:* sym level: 0 namespace:176>
                                            <&direct_declarator ns:176>
                                                <identifier:members sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <&typedef_name ns:176>
                                            <identifier:size_t sym level: 0 namespace:176>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&direct_declarator ns:176>
                                                <identifier:data_align sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <&typedef_name ns:176>
                                            <identifier:size_t sym level: 0 namespace:176>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&direct_declarator ns:176>
                                                <identifier:total_data_size sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <&typedef_name ns:176>
                                            <identifier:NMSP sym level: 0 namespace:176>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&direct_declarator ns:176>
                                                <identifier:namespece sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <KW__Bool:_Bool sym level: 0 namespace:176>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&direct_declarator ns:176>
                                                <identifier:can_be_modified_lvalue sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                            <&struct_decl ns:176>
                                <&spec_qual_list ns:176>
                                    <&type_spec ns:176>
                                        <KW__Bool:_Bool sym level: 0 namespace:176>
                                <&struct_declarator_list ns:176>
                                    <&struct_declarator ns:176>
                                        <&declarator ns:176>
                                            <&direct_declarator ns:176>
                                                <identifier:have_flex_array sym level: 0 namespace:176>
                                <;:; sym level: 0 namespace:176>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:TP_SU sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:178>
                            <&struct_decl ns:178>
                                <&spec_qual_list ns:178>
                                    <&type_spec ns:178>
                                        <KW_char:char sym level: 0 namespace:178>
                                <&struct_declarator_list ns:178>
                                    <&struct_declarator ns:178>
                                        <&declarator ns:178>
                                            <&pointer ns:178>
                                                <*:* sym level: 0 namespace:178>
                                            <&direct_declarator ns:178>
                                                <identifier:member_name sym level: 0 namespace:178>
                                <;:; sym level: 0 namespace:178>
                            <&struct_decl ns:178>
                                <&spec_qual_list ns:178>
                                    <&type_spec ns:178>
                                        <&typedef_name ns:178>
                                            <identifier:NMSP sym level: 0 namespace:178>
                                <&struct_declarator_list ns:178>
                                    <&struct_declarator ns:178>
                                        <&declarator ns:178>
                                            <&direct_declarator ns:178>
                                                <identifier:name_space sym level: 0 namespace:178>
                                <;:; sym level: 0 namespace:178>
                            <&struct_decl ns:178>
                                <&spec_qual_list ns:178>
                                    <&type_spec ns:178>
                                        <&typedef_name ns:178>
                                            <identifier:size_t sym level: 0 namespace:178>
                                <&struct_declarator_list ns:178>
                                    <&struct_declarator ns:178>
                                        <&declarator ns:178>
                                            <&direct_declarator ns:178>
                                                <identifier:offset sym level: 0 namespace:178>
                                <;:; sym level: 0 namespace:178>
                            <&struct_decl ns:178>
                                <&spec_qual_list ns:178>
                                    <&type_spec ns:178>
                                        <&typedef_name ns:178>
                                            <identifier:VEC sym level: 0 namespace:178>
                                <&struct_declarator_list ns:178>
                                    <&struct_declarator ns:178>
                                        <&declarator ns:178>
                                            <&pointer ns:178>
                                                <*:* sym level: 0 namespace:178>
                                            <&direct_declarator ns:178>
                                                <identifier:type_vec sym level: 0 namespace:178>
                                <;:; sym level: 0 namespace:178>
                            <&struct_decl ns:178>
                                <&spec_qual_list ns:178>
                                    <&type_spec ns:178>
                                        <KW__Bool:_Bool sym level: 0 namespace:178>
                                <&struct_declarator_list ns:178>
                                    <&struct_declarator ns:178>
                                        <&declarator ns:178>
                                            <&direct_declarator ns:178>
                                                <identifier:bit_field sym level: 0 namespace:178>
                                <;:; sym level: 0 namespace:178>
                            <&struct_decl ns:178>
                                <&spec_qual_list ns:178>
                                    <&type_spec ns:178>
                                        <&typedef_name ns:178>
                                            <identifier:size_t sym level: 0 namespace:178>
                                <&struct_declarator_list ns:178>
                                    <&struct_declarator ns:178>
                                        <&declarator ns:178>
                                            <&direct_declarator ns:178>
                                                <identifier:bit_field_size sym level: 0 namespace:178>
                                <;:; sym level: 0 namespace:178>
                            <&struct_decl ns:178>
                                <&spec_qual_list ns:178>
                                    <&type_spec ns:178>
                                        <&typedef_name ns:178>
                                            <identifier:size_t sym level: 0 namespace:178>
                                <&struct_declarator_list ns:178>
                                    <&struct_declarator ns:178>
                                        <&declarator ns:178>
                                            <&direct_declarator ns:178>
                                                <identifier:bit_field_offset sym level: 0 namespace:178>
                                <;:; sym level: 0 namespace:178>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:TP_SU_MEMBER sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:180>
                            <&struct_decl ns:180>
                                <&spec_qual_list ns:180>
                                    <&type_spec ns:180>
                                        <KW_unsigned:unsigned sym level: 0 namespace:180>
                                    <&type_spec ns:180>
                                        <KW_long:long sym level: 0 namespace:180>
                                    <&type_spec ns:180>
                                        <KW_long:long sym level: 0 namespace:180>
                                    <&type_spec ns:180>
                                        <KW_int:int sym level: 0 namespace:180>
                                <&struct_declarator_list ns:180>
                                    <&struct_declarator ns:180>
                                        <&declarator ns:180>
                                            <&direct_declarator ns:180>
                                                <identifier:key sym level: 0 namespace:180>
                                <;:; sym level: 0 namespace:180>
                            <&struct_decl ns:180>
                                <&spec_qual_list ns:180>
                                    <&type_spec ns:180>
                                        <KW_unsigned:unsigned sym level: 0 namespace:180>
                                    <&type_spec ns:180>
                                        <KW_int:int sym level: 0 namespace:180>
                                <&struct_declarator_list ns:180>
                                    <&struct_declarator ns:180>
                                        <&declarator ns:180>
                                            <&direct_declarator ns:180>
                                                <identifier:count sym level: 0 namespace:180>
                                <;:; sym level: 0 namespace:180>
                            <&struct_decl ns:180>
                                <&spec_qual_list ns:180>
                                    <&type_spec ns:180>
                                        <KW__Bool:_Bool sym level: 0 namespace:180>
                                <&struct_declarator_list ns:180>
                                    <&struct_declarator ns:180>
                                        <&declarator ns:180>
                                            <&direct_declarator ns:180>
                                                <identifier:complete sym level: 0 namespace:180>
                                <;:; sym level: 0 namespace:180>
                            <&struct_decl ns:180>
                                <&spec_qual_list ns:180>
                                    <&type_spec ns:180>
                                        <KW__Bool:_Bool sym level: 0 namespace:180>
                                <&struct_declarator_list ns:180>
                                    <&struct_declarator ns:180>
                                        <&declarator ns:180>
                                            <&direct_declarator ns:180>
                                                <identifier:modifier sym level: 0 namespace:180>
                                <;:; sym level: 0 namespace:180>
                            <&struct_decl ns:180>
                                <&spec_qual_list ns:180>
                                    <&type_spec ns:180>
                                        <&enum_spec ns:180>
                                            <KW_enum:enum sym level: 0 namespace:180>
                                            <identifier:TP_CATEGORY sym level: 0 namespace:2>
                                <&struct_declarator_list ns:180>
                                    <&struct_declarator ns:180>
                                        <&declarator ns:180>
                                            <&direct_declarator ns:180>
                                                <identifier:typ_category sym level: 0 namespace:180>
                                <;:; sym level: 0 namespace:180>
                            <&struct_decl ns:180>
                                <&spec_qual_list ns:180>
                                    <&type_spec ns:180>
                                        <KW_unsigned:unsigned sym level: 0 namespace:180>
                                    <&type_spec ns:180>
                                        <KW_int:int sym level: 0 namespace:180>
                                <&struct_declarator_list ns:180>
                                    <&struct_declarator ns:180>
                                        <&declarator ns:180>
                                            <&direct_declarator ns:180>
                                                <identifier:data_size sym level: 0 namespace:180>
                                <;:; sym level: 0 namespace:180>
                            <&struct_decl ns:180>
                                <&spec_qual_list ns:180>
                                    <&type_spec ns:180>
                                        <KW__Bool:_Bool sym level: 0 namespace:180>
                                <&struct_declarator_list ns:180>
                                    <&struct_declarator ns:180>
                                        <&declarator ns:180>
                                            <&direct_declarator ns:180>
                                                <identifier:is_vla sym level: 0 namespace:180>
                                <;:; sym level: 0 namespace:180>
                            <&struct_decl ns:180>
                                <&spec_qual_list ns:180>
                                    <&type_spec ns:180>
                                        <KW__Bool:_Bool sym level: 0 namespace:180>
                                <&struct_declarator_list ns:180>
                                    <&struct_declarator ns:180>
                                        <&declarator ns:180>
                                            <&direct_declarator ns:180>
                                                <identifier:is_star sym level: 0 namespace:180>
                                <;:; sym level: 0 namespace:180>
                            <&struct_decl ns:180>
                                <&spec_qual_list ns:180>
                                    <&type_spec ns:180>
                                        <&struct_union_spec ns:180>
                                            <&struct_union ns:180>
                                                <KW_union:union sym level: 0 namespace:180>
                                            <left_brace:{ sym level: 0 namespace:180>
                                            <&struct_decl_list ns:181>
                                                <&struct_decl ns:181>
                                                    <&spec_qual_list ns:181>
                                                        <&type_spec ns:181>
                                                            <&typedef_name ns:181>
                                                                <identifier:size_t sym level: 0 namespace:181>
                                                    <&struct_declarator_list ns:181>
                                                        <&struct_declarator ns:181>
                                                            <&declarator ns:181>
                                                                <&direct_declarator ns:181>
                                                                    <identifier:axis_size sym level: 0 namespace:181>
                                                    <;:; sym level: 0 namespace:181>
                                                <&struct_decl ns:181>
                                                    <&spec_qual_list ns:181>
                                                        <&type_spec ns:181>
                                                            <KW_void:void sym level: 0 namespace:181>
                                                    <&struct_declarator_list ns:181>
                                                        <&struct_declarator ns:181>
                                                            <&declarator ns:181>
                                                                <&pointer ns:181>
                                                                    <*:* sym level: 0 namespace:181>
                                                                <&direct_declarator ns:181>
                                                                    <identifier:assign_expr_node sym level: 0 namespace:181>
                                                    <;:; sym level: 0 namespace:181>
                                            <right_brace:} sym level: 0 namespace:180>
                                <;:; sym level: 0 namespace:180>
                            <&struct_decl ns:180>
                                <&spec_qual_list ns:180>
                                    <&type_spec ns:180>
                                        <KW_void:void sym level: 0 namespace:180>
                                <&struct_declarator_list ns:180>
                                    <&struct_declarator ns:180>
                                        <&declarator ns:180>
                                            <&pointer ns:180>
                                                <*:* sym level: 0 namespace:180>
                                            <&direct_declarator ns:180>
                                                <identifier:axis_modify sym level: 0 namespace:180>
                                <;:; sym level: 0 namespace:180>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:TP_ARR sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:183>
                            <&struct_decl ns:183>
                                <&spec_qual_list ns:183>
                                    <&type_spec ns:183>
                                        <KW_unsigned:unsigned sym level: 0 namespace:183>
                                    <&type_spec ns:183>
                                        <KW_long:long sym level: 0 namespace:183>
                                    <&type_spec ns:183>
                                        <KW_long:long sym level: 0 namespace:183>
                                    <&type_spec ns:183>
                                        <KW_int:int sym level: 0 namespace:183>
                                <&struct_declarator_list ns:183>
                                    <&struct_declarator ns:183>
                                        <&declarator ns:183>
                                            <&direct_declarator ns:183>
                                                <identifier:key sym level: 0 namespace:183>
                                <;:; sym level: 0 namespace:183>
                            <&struct_decl ns:183>
                                <&spec_qual_list ns:183>
                                    <&type_spec ns:183>
                                        <KW_unsigned:unsigned sym level: 0 namespace:183>
                                    <&type_spec ns:183>
                                        <KW_int:int sym level: 0 namespace:183>
                                <&struct_declarator_list ns:183>
                                    <&struct_declarator ns:183>
                                        <&declarator ns:183>
                                            <&direct_declarator ns:183>
                                                <identifier:count sym level: 0 namespace:183>
                                <;:; sym level: 0 namespace:183>
                            <&struct_decl ns:183>
                                <&spec_qual_list ns:183>
                                    <&type_spec ns:183>
                                        <KW__Bool:_Bool sym level: 0 namespace:183>
                                <&struct_declarator_list ns:183>
                                    <&struct_declarator ns:183>
                                        <&declarator ns:183>
                                            <&direct_declarator ns:183>
                                                <identifier:complete sym level: 0 namespace:183>
                                <;:; sym level: 0 namespace:183>
                            <&struct_decl ns:183>
                                <&spec_qual_list ns:183>
                                    <&type_spec ns:183>
                                        <KW__Bool:_Bool sym level: 0 namespace:183>
                                <&struct_declarator_list ns:183>
                                    <&struct_declarator ns:183>
                                        <&declarator ns:183>
                                            <&direct_declarator ns:183>
                                                <identifier:modifier sym level: 0 namespace:183>
                                <;:; sym level: 0 namespace:183>
                            <&struct_decl ns:183>
                                <&spec_qual_list ns:183>
                                    <&type_spec ns:183>
                                        <&enum_spec ns:183>
                                            <KW_enum:enum sym level: 0 namespace:183>
                                            <identifier:TP_CATEGORY sym level: 0 namespace:2>
                                <&struct_declarator_list ns:183>
                                    <&struct_declarator ns:183>
                                        <&declarator ns:183>
                                            <&direct_declarator ns:183>
                                                <identifier:typ_category sym level: 0 namespace:183>
                                <;:; sym level: 0 namespace:183>
                            <&struct_decl ns:183>
                                <&spec_qual_list ns:183>
                                    <&type_spec ns:183>
                                        <KW_unsigned:unsigned sym level: 0 namespace:183>
                                    <&type_spec ns:183>
                                        <KW_int:int sym level: 0 namespace:183>
                                <&struct_declarator_list ns:183>
                                    <&struct_declarator ns:183>
                                        <&declarator ns:183>
                                            <&direct_declarator ns:183>
                                                <identifier:data_size sym level: 0 namespace:183>
                                <;:; sym level: 0 namespace:183>
                            <&struct_decl ns:183>
                                <&spec_qual_list ns:183>
                                    <&type_spec ns:183>
                                        <KW_char:char sym level: 0 namespace:183>
                                <&struct_declarator_list ns:183>
                                    <&struct_declarator ns:183>
                                        <&declarator ns:183>
                                            <&pointer ns:183>
                                                <*:* sym level: 0 namespace:183>
                                            <&direct_declarator ns:183>
                                                <identifier:tag sym level: 0 namespace:183>
                                <;:; sym level: 0 namespace:183>
                            <&struct_decl ns:183>
                                <&spec_qual_list ns:183>
                                    <&type_spec ns:183>
                                        <&typedef_name ns:183>
                                            <identifier:VEC sym level: 0 namespace:183>
                                <&struct_declarator_list ns:183>
                                    <&struct_declarator ns:183>
                                        <&declarator ns:183>
                                            <&pointer ns:183>
                                                <*:* sym level: 0 namespace:183>
                                            <&direct_declarator ns:183>
                                                <identifier:members sym level: 0 namespace:183>
                                <;:; sym level: 0 namespace:183>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:TP_ENUMERA sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:185>
                            <&struct_decl ns:185>
                                <&spec_qual_list ns:185>
                                    <&type_spec ns:185>
                                        <KW_unsigned:unsigned sym level: 0 namespace:185>
                                    <&type_spec ns:185>
                                        <KW_long:long sym level: 0 namespace:185>
                                    <&type_spec ns:185>
                                        <KW_long:long sym level: 0 namespace:185>
                                    <&type_spec ns:185>
                                        <KW_int:int sym level: 0 namespace:185>
                                <&struct_declarator_list ns:185>
                                    <&struct_declarator ns:185>
                                        <&declarator ns:185>
                                            <&direct_declarator ns:185>
                                                <identifier:key sym level: 0 namespace:185>
                                <;:; sym level: 0 namespace:185>
                            <&struct_decl ns:185>
                                <&spec_qual_list ns:185>
                                    <&type_spec ns:185>
                                        <KW_unsigned:unsigned sym level: 0 namespace:185>
                                    <&type_spec ns:185>
                                        <KW_int:int sym level: 0 namespace:185>
                                <&struct_declarator_list ns:185>
                                    <&struct_declarator ns:185>
                                        <&declarator ns:185>
                                            <&direct_declarator ns:185>
                                                <identifier:count sym level: 0 namespace:185>
                                <;:; sym level: 0 namespace:185>
                            <&struct_decl ns:185>
                                <&spec_qual_list ns:185>
                                    <&type_spec ns:185>
                                        <KW__Bool:_Bool sym level: 0 namespace:185>
                                <&struct_declarator_list ns:185>
                                    <&struct_declarator ns:185>
                                        <&declarator ns:185>
                                            <&direct_declarator ns:185>
                                                <identifier:complete sym level: 0 namespace:185>
                                <;:; sym level: 0 namespace:185>
                            <&struct_decl ns:185>
                                <&spec_qual_list ns:185>
                                    <&type_spec ns:185>
                                        <KW__Bool:_Bool sym level: 0 namespace:185>
                                <&struct_declarator_list ns:185>
                                    <&struct_declarator ns:185>
                                        <&declarator ns:185>
                                            <&direct_declarator ns:185>
                                                <identifier:modifier sym level: 0 namespace:185>
                                <;:; sym level: 0 namespace:185>
                            <&struct_decl ns:185>
                                <&spec_qual_list ns:185>
                                    <&type_spec ns:185>
                                        <&enum_spec ns:185>
                                            <KW_enum:enum sym level: 0 namespace:185>
                                            <identifier:TP_CATEGORY sym level: 0 namespace:2>
                                <&struct_declarator_list ns:185>
                                    <&struct_declarator ns:185>
                                        <&declarator ns:185>
                                            <&direct_declarator ns:185>
                                                <identifier:typ_category sym level: 0 namespace:185>
                                <;:; sym level: 0 namespace:185>
                            <&struct_decl ns:185>
                                <&spec_qual_list ns:185>
                                    <&type_spec ns:185>
                                        <KW_unsigned:unsigned sym level: 0 namespace:185>
                                    <&type_spec ns:185>
                                        <KW_int:int sym level: 0 namespace:185>
                                <&struct_declarator_list ns:185>
                                    <&struct_declarator ns:185>
                                        <&declarator ns:185>
                                            <&direct_declarator ns:185>
                                                <identifier:data_size sym level: 0 namespace:185>
                                <;:; sym level: 0 namespace:185>
                            <&struct_decl ns:185>
                                <&spec_qual_list ns:185>
                                    <&type_spec ns:185>
                                        <KW_char:char sym level: 0 namespace:185>
                                <&struct_declarator_list ns:185>
                                    <&struct_declarator ns:185>
                                        <&declarator ns:185>
                                            <&pointer ns:185>
                                                <*:* sym level: 0 namespace:185>
                                            <&direct_declarator ns:185>
                                                <identifier:func_name sym level: 0 namespace:185>
                                <;:; sym level: 0 namespace:185>
                            <&struct_decl ns:185>
                                <&spec_qual_list ns:185>
                                    <&type_spec ns:185>
                                        <&typedef_name ns:185>
                                            <identifier:VEC sym level: 0 namespace:185>
                                <&struct_declarator_list ns:185>
                                    <&struct_declarator ns:185>
                                        <&declarator ns:185>
                                            <&pointer ns:185>
                                                <*:* sym level: 0 namespace:185>
                                            <&direct_declarator ns:185>
                                                <identifier:func_parameters sym level: 0 namespace:185>
                                <;:; sym level: 0 namespace:185>
                            <&struct_decl ns:185>
                                <&spec_qual_list ns:185>
                                    <&type_spec ns:185>
                                        <KW__Bool:_Bool sym level: 0 namespace:185>
                                <&struct_declarator_list ns:185>
                                    <&struct_declarator ns:185>
                                        <&declarator ns:185>
                                            <&direct_declarator ns:185>
                                                <identifier:have_ellipsis sym level: 0 namespace:185>
                                <;:; sym level: 0 namespace:185>
                            <&struct_decl ns:185>
                                <&spec_qual_list ns:185>
                                    <&type_spec ns:185>
                                        <KW__Bool:_Bool sym level: 0 namespace:185>
                                <&struct_declarator_list ns:185>
                                    <&struct_declarator ns:185>
                                        <&declarator ns:185>
                                            <&direct_declarator ns:185>
                                                <identifier:is_old_style sym level: 0 namespace:185>
                                <;:; sym level: 0 namespace:185>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:TP_FUNC sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:187>
                            <&struct_decl ns:187>
                                <&spec_qual_list ns:187>
                                    <&type_spec ns:187>
                                        <KW_char:char sym level: 0 namespace:187>
                                <&struct_declarator_list ns:187>
                                    <&struct_declarator ns:187>
                                        <&declarator ns:187>
                                            <&pointer ns:187>
                                                <*:* sym level: 0 namespace:187>
                                            <&direct_declarator ns:187>
                                                <identifier:para_name sym level: 0 namespace:187>
                                <;:; sym level: 0 namespace:187>
                            <&struct_decl ns:187>
                                <&spec_qual_list ns:187>
                                    <&type_spec ns:187>
                                        <&typedef_name ns:187>
                                            <identifier:VEC sym level: 0 namespace:187>
                                <&struct_declarator_list ns:187>
                                    <&struct_declarator ns:187>
                                        <&declarator ns:187>
                                            <&pointer ns:187>
                                                <*:* sym level: 0 namespace:187>
                                            <&direct_declarator ns:187>
                                                <identifier:type_vec sym level: 0 namespace:187>
                                <;:; sym level: 0 namespace:187>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:TP_FUNC_PARA sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:189>
                            <&struct_decl ns:189>
                                <&spec_qual_list ns:189>
                                    <&type_spec ns:189>
                                        <KW_unsigned:unsigned sym level: 0 namespace:189>
                                    <&type_spec ns:189>
                                        <KW_long:long sym level: 0 namespace:189>
                                    <&type_spec ns:189>
                                        <KW_long:long sym level: 0 namespace:189>
                                    <&type_spec ns:189>
                                        <KW_int:int sym level: 0 namespace:189>
                                <&struct_declarator_list ns:189>
                                    <&struct_declarator ns:189>
                                        <&declarator ns:189>
                                            <&direct_declarator ns:189>
                                                <identifier:key sym level: 0 namespace:189>
                                <;:; sym level: 0 namespace:189>
                            <&struct_decl ns:189>
                                <&spec_qual_list ns:189>
                                    <&type_spec ns:189>
                                        <KW_unsigned:unsigned sym level: 0 namespace:189>
                                    <&type_spec ns:189>
                                        <KW_int:int sym level: 0 namespace:189>
                                <&struct_declarator_list ns:189>
                                    <&struct_declarator ns:189>
                                        <&declarator ns:189>
                                            <&direct_declarator ns:189>
                                                <identifier:count sym level: 0 namespace:189>
                                <;:; sym level: 0 namespace:189>
                            <&struct_decl ns:189>
                                <&spec_qual_list ns:189>
                                    <&type_spec ns:189>
                                        <KW__Bool:_Bool sym level: 0 namespace:189>
                                <&struct_declarator_list ns:189>
                                    <&struct_declarator ns:189>
                                        <&declarator ns:189>
                                            <&direct_declarator ns:189>
                                                <identifier:complete sym level: 0 namespace:189>
                                <;:; sym level: 0 namespace:189>
                            <&struct_decl ns:189>
                                <&spec_qual_list ns:189>
                                    <&type_spec ns:189>
                                        <KW__Bool:_Bool sym level: 0 namespace:189>
                                <&struct_declarator_list ns:189>
                                    <&struct_declarator ns:189>
                                        <&declarator ns:189>
                                            <&direct_declarator ns:189>
                                                <identifier:modifier sym level: 0 namespace:189>
                                <;:; sym level: 0 namespace:189>
                            <&struct_decl ns:189>
                                <&spec_qual_list ns:189>
                                    <&type_spec ns:189>
                                        <&enum_spec ns:189>
                                            <KW_enum:enum sym level: 0 namespace:189>
                                            <identifier:TP_CATEGORY sym level: 0 namespace:2>
                                <&struct_declarator_list ns:189>
                                    <&struct_declarator ns:189>
                                        <&declarator ns:189>
                                            <&direct_declarator ns:189>
                                                <identifier:typ_category sym level: 0 namespace:189>
                                <;:; sym level: 0 namespace:189>
                            <&struct_decl ns:189>
                                <&spec_qual_list ns:189>
                                    <&type_spec ns:189>
                                        <KW_unsigned:unsigned sym level: 0 namespace:189>
                                    <&type_spec ns:189>
                                        <KW_int:int sym level: 0 namespace:189>
                                <&struct_declarator_list ns:189>
                                    <&struct_declarator ns:189>
                                        <&declarator ns:189>
                                            <&direct_declarator ns:189>
                                                <identifier:data_size sym level: 0 namespace:189>
                                <;:; sym level: 0 namespace:189>
                            <&struct_decl ns:189>
                                <&spec_qual_list ns:189>
                                    <&type_spec ns:189>
                                        <&typedef_name ns:189>
                                            <identifier:VEC sym level: 0 namespace:189>
                                <&struct_declarator_list ns:189>
                                    <&struct_declarator ns:189>
                                        <&declarator ns:189>
                                            <&pointer ns:189>
                                                <*:* sym level: 0 namespace:189>
                                            <&direct_declarator ns:189>
                                                <identifier:typedef_name_type sym level: 0 namespace:189>
                                <;:; sym level: 0 namespace:189>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:TP_DEF_TYPE sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW__Bool:_Bool sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:databool sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_signed:signed sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_char:char sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:schar sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_unsigned:unsigned sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_char:char sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:uschar sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_signed:signed sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_short:short sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:sshort sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_unsigned:unsigned sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_short:short sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:usshort sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_signed:signed sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_int:int sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:sint sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_unsigned:unsigned sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_int:int sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:usint sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_signed:signed sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_long:long sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_int:int sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:slong sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_unsigned:unsigned sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_long:long sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_int:int sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:uslong sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_signed:signed sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_long:long sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_long:long sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_int:int sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:sllong sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_unsigned:unsigned sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_long:long sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_long:long sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_int:int sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:usllong sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_float:float sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:datafloat sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_double:double sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:datadouble sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_long:long sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_double:double sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:datalongdouble sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_float:float sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:floatcomplex sym level: 0 namespace:191>
                                                <[:[ sym level: 0 namespace:191>
                                                <&primary_expression ns:191>
                                                    <integer_constant:2 sym level: 0 namespace:191>
                                                <]:] sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_double:double sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:doublecomplex sym level: 0 namespace:191>
                                                <[:[ sym level: 0 namespace:191>
                                                <&primary_expression ns:191>
                                                    <integer_constant:2 sym level: 0 namespace:191>
                                                <]:] sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_long:long sym level: 0 namespace:191>
                                    <&type_spec ns:191>
                                        <KW_double:double sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&direct_declarator ns:191>
                                                <identifier:longdoublecomplex sym level: 0 namespace:191>
                                                <[:[ sym level: 0 namespace:191>
                                                <&primary_expression ns:191>
                                                    <integer_constant:2 sym level: 0 namespace:191>
                                                <]:] sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                            <&struct_decl ns:191>
                                <&spec_qual_list ns:191>
                                    <&type_spec ns:191>
                                        <KW_void:void sym level: 0 namespace:191>
                                <&struct_declarator_list ns:191>
                                    <&struct_declarator ns:191>
                                        <&declarator ns:191>
                                            <&pointer ns:191>
                                                <*:* sym level: 0 namespace:191>
                                            <&direct_declarator ns:191>
                                                <identifier:pointer sym level: 0 namespace:191>
                                <;:; sym level: 0 namespace:191>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:VALUE_DATA sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:VALUE sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:193>
                            <&struct_decl ns:193>
                                <&spec_qual_list ns:193>
                                    <&type_spec ns:193>
                                        <&enum_spec ns:193>
                                            <KW_enum:enum sym level: 0 namespace:193>
                                            <identifier:TP_CATEGORY sym level: 0 namespace:2>
                                <&struct_declarator_list ns:193>
                                    <&struct_declarator ns:193>
                                        <&declarator ns:193>
                                            <&direct_declarator ns:193>
                                                <identifier:const_expr_type sym level: 0 namespace:193>
                                <;:; sym level: 0 namespace:193>
                            <&struct_decl ns:193>
                                <&spec_qual_list ns:193>
                                    <&type_spec ns:193>
                                        <&typedef_name ns:193>
                                            <identifier:VALUE_DATA sym level: 0 namespace:193>
                                <&struct_declarator_list ns:193>
                                    <&struct_declarator ns:193>
                                        <&declarator ns:193>
                                            <&pointer ns:193>
                                                <*:* sym level: 0 namespace:193>
                                            <&direct_declarator ns:193>
                                                <identifier:const_value sym level: 0 namespace:193>
                                <;:; sym level: 0 namespace:193>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:CONST_VALUE sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:build_modify_type sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&enum_spec ns:1>
                                                    <KW_enum:enum sym level: 1 namespace:1>
                                                    <identifier:TP_STORAGE_SPEC sym level: 1 namespace:2>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:storage_spec_type sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_qual_cnt sym level: 1 namespace:1>
                                                <[:[ sym level: 1 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:4 sym level: 1 namespace:1>
                                                <]:] sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:func_spec_cnt sym level: 1 namespace:1>
                                                <[:[ sym level: 1 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:2 sym level: 1 namespace:1>
                                                <]:] sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_unsigned:unsigned sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_long:long sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:align_spec_cnt sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:build_base_type sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&enum_spec ns:1>
                                                    <KW_enum:enum sym level: 1 namespace:1>
                                                    <identifier:TP_CATEGORY sym level: 1 namespace:2>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:spec_type sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:StrToKey sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_char:char sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:str sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:TypeToKey sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:M_TYPE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:t sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:print_type sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:M_TYPE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:tmpt sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_cmp sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:a sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:b sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_item_cmp sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:a sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_void:void sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:b sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_VM sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_VLA sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_modify_lvalue sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW__Bool:_Bool sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:is_lvalue sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_size sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_align sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_get_qual sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_composite_qual sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:M_TYPE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:qual_a sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:M_TYPE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:qual_b sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_get_spec_other sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_get_actual_base_type sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_change_actual_base_type sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:M_TYPE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:tmp_type sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_get_Atomic sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_get_Atomic_TO sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW__Bool:_Bool sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:is_atomic sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_get_Pointer_TO sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW__Bool:_Bool sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:is_pointer sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_get_Array_TO sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW__Bool:_Bool sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:is_array sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_get_func_return_type sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW__Bool:_Bool sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:is_function sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_unqualifier sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW__Bool:_Bool sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:is_qual sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:lvalue_convertion sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:tmp_type_vec sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:compatible_types sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec_a sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec_b sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:composite_types sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec_a sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec_b sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW__Bool:_Bool sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:compatible_type sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:usual_arith_conversion sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:M_TYPE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:operand_a sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:M_TYPE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:operand_b sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:integer_promotion sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:M_TYPE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:integer_operand sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:float_promotion sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:M_TYPE sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:float_operand sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_get_element_size sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:current_obj_type sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_get_sub_obj_type sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:current_obj_type sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:sub_obj_size sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&pointer ns:1>
                            <*:* sym level: 0 namespace:1>
                        <&direct_declarator ns:1>
                            <identifier:Type_VEC_get_sub_obj_off_element_type sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:sub_obj_type sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:size_t sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:sub_obj_off sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:print_type_vec sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:VEC sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 1 namespace:1>
                                            <&direct_declarator ns:1>
                                                <identifier:type_vec sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_extern:extern sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:type_data_size sym level: 0 namespace:1>
                            <[:[ sym level: 0 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:30 sym level: 0 namespace:1>
                            <]:] sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:int_rank sym level: 0 namespace:1>
                            <[:[ sym level: 0 namespace:1>
                            <&additive_expr ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:30 sym level: 0 namespace:1>
                                <+:+ sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:1 sym level: 0 namespace:1>
                            <]:] sym level: 0 namespace:1>
                    <=:= sym level: 0 namespace:1>
                    <&initializer ns:1>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&initializer_list ns:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:2 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:2 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:3 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:3 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:4 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:4 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:5 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:5 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:6 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:6 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:1 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:255 sym level: 0 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:4 sym level: 0 namespace:1>
                        <right_brace:} sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_cmp sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:a sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:b sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:tmpa sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&conditional_expr ns:1>
                                        <&primary_expression ns:1>
                                            <(:( sym level: 2 namespace:1>
                                            <&logical_and_expr ns:1>
                                                <&equality_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:a sym level: 2 namespace:1>
                                                    <!=:!= sym level: 2 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <integer_constant:0 sym level: 2 namespace:1>
                                                <double_ampersand:&& sym level: 2 namespace:1>
                                                <&relational_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <integer_constant:0 sym level: 2 namespace:1>
                                                    <<:< sym level: 2 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 2 namespace:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:a sym level: 2 namespace:1>
                                                            <->:-> sym level: 2 namespace:1>
                                                            <identifier:len sym level: 2 namespace:0>
                                                        <):) sym level: 2 namespace:1>
                                            <):) sym level: 2 namespace:1>
                                        <?:? sym level: 2 namespace:1>
                                        <&primary_expression ns:1>
                                            <(:( sym level: 2 namespace:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:a sym level: 2 namespace:1>
                                                <->:-> sym level: 2 namespace:1>
                                                <identifier:data sym level: 2 namespace:0>
                                                <[:[ sym level: 2 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:0 sym level: 2 namespace:1>
                                                <]:] sym level: 2 namespace:1>
                                            <):) sym level: 2 namespace:1>
                                        <colon:: sym level: 2 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&equality_expr ns:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:tmpa sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:typ_category sym level: 3 namespace:0>
                            <==:== sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:TP_TYPE_DEF_TYPE sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:VEC sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpavec sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 4 namespace:1>
                                                        <&cast_expr ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&type_name ns:1>
                                                                <&spec_qual_list ns:1>
                                                                    <&type_spec ns:1>
                                                                        <&typedef_name ns:1>
                                                                            <identifier:TP_DEF_TYPE sym level: 4 namespace:1>
                                                                <&abstract_declarator ns:1>
                                                                    <&pointer ns:1>
                                                                        <*:* sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:tmpa sym level: 4 namespace:1>
                                                        <):) sym level: 4 namespace:1>
                                                    <->:-> sym level: 4 namespace:1>
                                                    <identifier:typedef_name_type sym level: 4 namespace:0>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&return_stmt ns:1>
                                        <KW_return:return sym level: 4 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:Type_VEC_cmp sym level: 4 namespace:1>
                                            <(:( sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpavec sym level: 4 namespace:1>
                                            <,:, sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:b sym level: 4 namespace:1>
                                            <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:tmpb sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&conditional_expr ns:1>
                                        <&primary_expression ns:1>
                                            <(:( sym level: 2 namespace:1>
                                            <&logical_and_expr ns:1>
                                                <&equality_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:b sym level: 2 namespace:1>
                                                    <!=:!= sym level: 2 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <integer_constant:0 sym level: 2 namespace:1>
                                                <double_ampersand:&& sym level: 2 namespace:1>
                                                <&relational_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <integer_constant:0 sym level: 2 namespace:1>
                                                    <<:< sym level: 2 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 2 namespace:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:b sym level: 2 namespace:1>
                                                            <->:-> sym level: 2 namespace:1>
                                                            <identifier:len sym level: 2 namespace:0>
                                                        <):) sym level: 2 namespace:1>
                                            <):) sym level: 2 namespace:1>
                                        <?:? sym level: 2 namespace:1>
                                        <&primary_expression ns:1>
                                            <(:( sym level: 2 namespace:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:b sym level: 2 namespace:1>
                                                <->:-> sym level: 2 namespace:1>
                                                <identifier:data sym level: 2 namespace:0>
                                                <[:[ sym level: 2 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:0 sym level: 2 namespace:1>
                                                <]:] sym level: 2 namespace:1>
                                            <):) sym level: 2 namespace:1>
                                        <colon:: sym level: 2 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&equality_expr ns:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:tmpb sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:typ_category sym level: 3 namespace:0>
                            <==:== sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:TP_TYPE_DEF_TYPE sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:VEC sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpbvec sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 4 namespace:1>
                                                        <&cast_expr ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&type_name ns:1>
                                                                <&spec_qual_list ns:1>
                                                                    <&type_spec ns:1>
                                                                        <&typedef_name ns:1>
                                                                            <identifier:TP_DEF_TYPE sym level: 4 namespace:1>
                                                                <&abstract_declarator ns:1>
                                                                    <&pointer ns:1>
                                                                        <*:* sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:tmpb sym level: 4 namespace:1>
                                                        <):) sym level: 4 namespace:1>
                                                    <->:-> sym level: 4 namespace:1>
                                                    <identifier:typedef_name_type sym level: 4 namespace:0>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&return_stmt ns:1>
                                        <KW_return:return sym level: 4 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:Type_VEC_cmp sym level: 4 namespace:1>
                                            <(:( sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:a sym level: 4 namespace:1>
                                            <,:, sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpbvec sym level: 4 namespace:1>
                                            <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&equality_expr ns:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:a sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:len sym level: 3 namespace:0>
                                <):) sym level: 3 namespace:1>
                            <!=:!= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:b sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:len sym level: 3 namespace:0>
                                <):) sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <&typedef_name ns:1>
                                        <identifier:size_t sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <<:< sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:a sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:len sym level: 3 namespace:0>
                                <):) sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <++:++ sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <KW__Bool:_Bool sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:cmp sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:Type_item_cmp sym level: 4 namespace:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 4 namespace:1>
                                                        <&conditional_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <(:( sym level: 4 namespace:1>
                                                                <&logical_and_expr ns:1>
                                                                    <&equality_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:a sym level: 4 namespace:1>
                                                                        <!=:!= sym level: 4 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                                    <double_ampersand:&& sym level: 4 namespace:1>
                                                                    <&relational_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:i sym level: 4 namespace:1>
                                                                        <<:< sym level: 4 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <(:( sym level: 4 namespace:1>
                                                                            <&postfix_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:a sym level: 4 namespace:1>
                                                                                <->:-> sym level: 4 namespace:1>
                                                                                <identifier:len sym level: 4 namespace:0>
                                                                            <):) sym level: 4 namespace:1>
                                                                <):) sym level: 4 namespace:1>
                                                            <?:? sym level: 4 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <(:( sym level: 4 namespace:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:a sym level: 4 namespace:1>
                                                                    <->:-> sym level: 4 namespace:1>
                                                                    <identifier:data sym level: 4 namespace:0>
                                                                    <[:[ sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <]:] sym level: 4 namespace:1>
                                                                <):) sym level: 4 namespace:1>
                                                            <colon:: sym level: 4 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <integer_constant:0 sym level: 4 namespace:1>
                                                        <):) sym level: 4 namespace:1>
                                                    <,:, sym level: 4 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 4 namespace:1>
                                                        <&conditional_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <(:( sym level: 4 namespace:1>
                                                                <&logical_and_expr ns:1>
                                                                    <&equality_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:b sym level: 4 namespace:1>
                                                                        <!=:!= sym level: 4 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                                    <double_ampersand:&& sym level: 4 namespace:1>
                                                                    <&relational_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:i sym level: 4 namespace:1>
                                                                        <<:< sym level: 4 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <(:( sym level: 4 namespace:1>
                                                                            <&postfix_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:b sym level: 4 namespace:1>
                                                                                <->:-> sym level: 4 namespace:1>
                                                                                <identifier:len sym level: 4 namespace:0>
                                                                            <):) sym level: 4 namespace:1>
                                                                <):) sym level: 4 namespace:1>
                                                            <?:? sym level: 4 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <(:( sym level: 4 namespace:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:b sym level: 4 namespace:1>
                                                                    <->:-> sym level: 4 namespace:1>
                                                                    <identifier:data sym level: 4 namespace:0>
                                                                    <[:[ sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <]:] sym level: 4 namespace:1>
                                                                <):) sym level: 4 namespace:1>
                                                            <colon:: sym level: 4 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <integer_constant:0 sym level: 4 namespace:1>
                                                        <):) sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&unary_expr ns:1>
                                            <!:! sym level: 5 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:cmp sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&return_stmt ns:1>
                                                <KW_return:return sym level: 5 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:0 sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:1 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:Type_item_cmp sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_void:void sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:a sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_void:void sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:b sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:a sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:b sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:x sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&cast_expr ns:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&type_name ns:1>
                                        <&spec_qual_list ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:M_TYPE sym level: 2 namespace:1>
                                        <&abstract_declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:a sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:y sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&cast_expr ns:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&type_name ns:1>
                                        <&spec_qual_list ns:1>
                                            <&type_spec ns:1>
                                                <&typedef_name ns:1>
                                                    <identifier:M_TYPE sym level: 2 namespace:1>
                                        <&abstract_declarator ns:1>
                                            <&pointer ns:1>
                                                <*:* sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:b sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&equality_expr ns:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:x sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:modifier sym level: 3 namespace:0>
                            <!=:!= sym level: 3 namespace:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:y sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:modifier sym level: 3 namespace:0>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                        <KW_else:else sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:x sym level: 5 namespace:1>
                                            <->:-> sym level: 5 namespace:1>
                                            <identifier:modifier sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&if_stmt ns:1>
                                                        <KW_if:if sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <&logical_and_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <(:( sym level: 7 namespace:1>
                                                                <&logical_or_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 7 namespace:1>
                                                                        <&logical_and_expr ns:1>
                                                                            <&relational_expr ns:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:x sym level: 7 namespace:1>
                                                                                    <->:-> sym level: 7 namespace:1>
                                                                                    <identifier:typ_stor sym level: 7 namespace:0>
                                                                                <<=:<= sym level: 7 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:TP_TYPE_DEF sym level: 7 namespace:1>
                                                                            <double_ampersand:&& sym level: 7 namespace:1>
                                                                            <&relational_expr ns:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:y sym level: 7 namespace:1>
                                                                                    <->:-> sym level: 7 namespace:1>
                                                                                    <identifier:typ_stor sym level: 7 namespace:0>
                                                                                <<=:<= sym level: 7 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:TP_TYPE_DEF sym level: 7 namespace:1>
                                                                        <):) sym level: 7 namespace:1>
                                                                    <||:|| sym level: 7 namespace:1>
                                                                    <&equality_expr ns:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:x sym level: 7 namespace:1>
                                                                            <->:-> sym level: 7 namespace:1>
                                                                            <identifier:typ_stor sym level: 7 namespace:0>
                                                                        <==:== sym level: 7 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:y sym level: 7 namespace:1>
                                                                            <->:-> sym level: 7 namespace:1>
                                                                            <identifier:typ_stor sym level: 7 namespace:0>
                                                                <):) sym level: 7 namespace:1>
                                                            <double_ampersand:&& sym level: 7 namespace:1>
                                                            <&equality_expr ns:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:x sym level: 7 namespace:1>
                                                                    <->:-> sym level: 7 namespace:1>
                                                                    <identifier:align_spec sym level: 7 namespace:0>
                                                                <==:== sym level: 7 namespace:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:y sym level: 7 namespace:1>
                                                                    <->:-> sym level: 7 namespace:1>
                                                                    <identifier:align_spec sym level: 7 namespace:0>
                                                            <double_ampersand:&& sym level: 7 namespace:1>
                                                            <&equality_expr ns:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:x sym level: 7 namespace:1>
                                                                    <->:-> sym level: 7 namespace:1>
                                                                    <identifier:type_qual sym level: 7 namespace:0>
                                                                <==:== sym level: 7 namespace:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:y sym level: 7 namespace:1>
                                                                    <->:-> sym level: 7 namespace:1>
                                                                    <identifier:type_qual sym level: 7 namespace:0>
                                                            <double_ampersand:&& sym level: 7 namespace:1>
                                                            <&equality_expr ns:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:x sym level: 7 namespace:1>
                                                                    <->:-> sym level: 7 namespace:1>
                                                                    <identifier:func_spec sym level: 7 namespace:0>
                                                                <==:== sym level: 7 namespace:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:y sym level: 7 namespace:1>
                                                                    <->:-> sym level: 7 namespace:1>
                                                                    <identifier:func_spec sym level: 7 namespace:0>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&return_stmt ns:1>
                                                                <KW_return:return sym level: 7 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <integer_constant:1 sym level: 7 namespace:1>
                                                                <;:; sym level: 7 namespace:1>
                                                        <KW_else:else sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&return_stmt ns:1>
                                                                <KW_return:return sym level: 7 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <integer_constant:0 sym level: 7 namespace:1>
                                                                <;:; sym level: 7 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&if_stmt ns:1>
                                                        <KW_if:if sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <&equality_expr ns:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:x sym level: 7 namespace:1>
                                                                <->:-> sym level: 7 namespace:1>
                                                                <identifier:typ_category sym level: 7 namespace:0>
                                                            <!=:!= sym level: 7 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:y sym level: 7 namespace:1>
                                                                <->:-> sym level: 7 namespace:1>
                                                                <identifier:typ_category sym level: 7 namespace:0>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&return_stmt ns:1>
                                                                <KW_return:return sym level: 7 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <integer_constant:0 sym level: 7 namespace:1>
                                                                <;:; sym level: 7 namespace:1>
                                                        <KW_else:else sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&switch_stmt ns:1>
                                                                        <KW_switch:switch sym level: 9 namespace:1>
                                                                        <(:( sym level: 9 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:x sym level: 9 namespace:1>
                                                                            <->:-> sym level: 9 namespace:1>
                                                                            <identifier:typ_category sym level: 9 namespace:0>
                                                                        <):) sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <compound_stmt ns:1>
                                                                                <left_brace:{ sym level: 10 namespace:1>
                                                                                <statement ns:1>
                                                                                    <labeled_stmt ns:230>
                                                                                        <KW_case:case sym level: 10 namespace:230>
                                                                                        <&constant_expr ns:230>
                                                                                            <&primary_expression ns:230>
                                                                                                <identifier:TP_ENUM sym level: 10 namespace:230>
                                                                                        <colon:: sym level: 10 namespace:230>
                                                                                        <statement ns:1>
                                                                                            <compound_stmt ns:1>
                                                                                                <left_brace:{ sym level: 11 namespace:1>
                                                                                                <declaration ns:1>
                                                                                                    <&declaration_spec ns:1>
                                                                                                        <&type_spec ns:1>
                                                                                                            <&typedef_name ns:1>
                                                                                                                <identifier:TP_ENUMERA sym level: 11 namespace:1>
                                                                                                    <&init_decl_list ns:1>
                                                                                                        <&init_decl ns:1>
                                                                                                            <&declarator ns:1>
                                                                                                                <&pointer ns:1>
                                                                                                                    <*:* sym level: 11 namespace:1>
                                                                                                                <&direct_declarator ns:1>
                                                                                                                    <identifier:enumx sym level: 11 namespace:1>
                                                                                                            <=:= sym level: 11 namespace:1>
                                                                                                            <&initializer ns:1>
                                                                                                                <&cast_expr ns:1>
                                                                                                                    <(:( sym level: 11 namespace:1>
                                                                                                                    <&type_name ns:1>
                                                                                                                        <&spec_qual_list ns:1>
                                                                                                                            <&type_spec ns:1>
                                                                                                                                <&typedef_name ns:1>
                                                                                                                                    <identifier:TP_ENUMERA sym level: 11 namespace:1>
                                                                                                                        <&abstract_declarator ns:1>
                                                                                                                            <&pointer ns:1>
                                                                                                                                <*:* sym level: 11 namespace:1>
                                                                                                                    <):) sym level: 11 namespace:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:x sym level: 11 namespace:1>
                                                                                                    <;:; sym level: 11 namespace:1>
                                                                                                <declaration ns:1>
                                                                                                    <&declaration_spec ns:1>
                                                                                                        <&type_spec ns:1>
                                                                                                            <&typedef_name ns:1>
                                                                                                                <identifier:TP_ENUMERA sym level: 11 namespace:1>
                                                                                                    <&init_decl_list ns:1>
                                                                                                        <&init_decl ns:1>
                                                                                                            <&declarator ns:1>
                                                                                                                <&pointer ns:1>
                                                                                                                    <*:* sym level: 11 namespace:1>
                                                                                                                <&direct_declarator ns:1>
                                                                                                                    <identifier:enumy sym level: 11 namespace:1>
                                                                                                            <=:= sym level: 11 namespace:1>
                                                                                                            <&initializer ns:1>
                                                                                                                <&cast_expr ns:1>
                                                                                                                    <(:( sym level: 11 namespace:1>
                                                                                                                    <&type_name ns:1>
                                                                                                                        <&spec_qual_list ns:1>
                                                                                                                            <&type_spec ns:1>
                                                                                                                                <&typedef_name ns:1>
                                                                                                                                    <identifier:TP_ENUMERA sym level: 11 namespace:1>
                                                                                                                        <&abstract_declarator ns:1>
                                                                                                                            <&pointer ns:1>
                                                                                                                                <*:* sym level: 11 namespace:1>
                                                                                                                    <):) sym level: 11 namespace:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:y sym level: 11 namespace:1>
                                                                                                    <;:; sym level: 11 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <&if_stmt ns:1>
                                                                                                        <KW_if:if sym level: 12 namespace:1>
                                                                                                        <(:( sym level: 12 namespace:1>
                                                                                                        <&logical_or_expr ns:1>
                                                                                                            <&equality_expr ns:1>
                                                                                                                <&postfix_expr ns:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:enumx sym level: 12 namespace:1>
                                                                                                                    <->:-> sym level: 12 namespace:1>
                                                                                                                    <identifier:tag sym level: 12 namespace:0>
                                                                                                                <==:== sym level: 12 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <integer_constant:0 sym level: 12 namespace:1>
                                                                                                            <||:|| sym level: 12 namespace:1>
                                                                                                            <&equality_expr ns:1>
                                                                                                                <&postfix_expr ns:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:enumy sym level: 12 namespace:1>
                                                                                                                    <->:-> sym level: 12 namespace:1>
                                                                                                                    <identifier:tag sym level: 12 namespace:0>
                                                                                                                <==:== sym level: 12 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <integer_constant:0 sym level: 12 namespace:1>
                                                                                                        <):) sym level: 12 namespace:1>
                                                                                                        <statement ns:1>
                                                                                                            <&return_stmt ns:1>
                                                                                                                <KW_return:return sym level: 12 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <integer_constant:0 sym level: 12 namespace:1>
                                                                                                                <;:; sym level: 12 namespace:1>
                                                                                                        <KW_else:else sym level: 12 namespace:1>
                                                                                                        <statement ns:1>
                                                                                                            <&return_stmt ns:1>
                                                                                                                <KW_return:return sym level: 12 namespace:1>
                                                                                                                <&unary_expr ns:1>
                                                                                                                    <!:! sym level: 12 namespace:1>
                                                                                                                    <&postfix_expr ns:1>
                                                                                                                        <&primary_expression ns:1>
                                                                                                                            <identifier:strcmp sym level: 12 namespace:1>
                                                                                                                        <(:( sym level: 12 namespace:1>
                                                                                                                        <&postfix_expr ns:1>
                                                                                                                            <&primary_expression ns:1>
                                                                                                                                <identifier:enumx sym level: 12 namespace:1>
                                                                                                                            <->:-> sym level: 12 namespace:1>
                                                                                                                            <identifier:tag sym level: 12 namespace:0>
                                                                                                                        <,:, sym level: 12 namespace:1>
                                                                                                                        <&postfix_expr ns:1>
                                                                                                                            <&primary_expression ns:1>
                                                                                                                                <identifier:enumy sym level: 12 namespace:1>
                                                                                                                            <->:-> sym level: 12 namespace:1>
                                                                                                                            <identifier:tag sym level: 12 namespace:0>
                                                                                                                        <):) sym level: 12 namespace:1>
                                                                                                                <;:; sym level: 12 namespace:1>
                                                                                                <right_brace:} sym level: 11 namespace:1>
                                                                                <statement ns:1>
                                                                                    <labeled_stmt ns:230>
                                                                                        <KW_case:case sym level: 10 namespace:230>
                                                                                        <&constant_expr ns:230>
                                                                                            <&primary_expression ns:230>
                                                                                                <identifier:TP_UNION_STRUCT sym level: 10 namespace:230>
                                                                                        <colon:: sym level: 10 namespace:230>
                                                                                        <statement ns:1>
                                                                                            <labeled_stmt ns:230>
                                                                                                <KW_case:case sym level: 10 namespace:230>
                                                                                                <&constant_expr ns:230>
                                                                                                    <&primary_expression ns:230>
                                                                                                        <identifier:TP_UNION sym level: 10 namespace:230>
                                                                                                <colon:: sym level: 10 namespace:230>
                                                                                                <statement ns:1>
                                                                                                    <labeled_stmt ns:230>
                                                                                                        <KW_case:case sym level: 10 namespace:230>
                                                                                                        <&constant_expr ns:230>
                                                                                                            <&primary_expression ns:230>
                                                                                                                <identifier:TP_STRUCT sym level: 10 namespace:230>
                                                                                                        <colon:: sym level: 10 namespace:230>
                                                                                                        <statement ns:1>
                                                                                                            <compound_stmt ns:1>
                                                                                                                <left_brace:{ sym level: 11 namespace:1>
                                                                                                                <declaration ns:1>
                                                                                                                    <&declaration_spec ns:1>
                                                                                                                        <&type_spec ns:1>
                                                                                                                            <&typedef_name ns:1>
                                                                                                                                <identifier:TP_SU sym level: 11 namespace:1>
                                                                                                                    <&init_decl_list ns:1>
                                                                                                                        <&init_decl ns:1>
                                                                                                                            <&declarator ns:1>
                                                                                                                                <&pointer ns:1>
                                                                                                                                    <*:* sym level: 11 namespace:1>
                                                                                                                                <&direct_declarator ns:1>
                                                                                                                                    <identifier:tmpsux sym level: 11 namespace:1>
                                                                                                                            <=:= sym level: 11 namespace:1>
                                                                                                                            <&initializer ns:1>
                                                                                                                                <&cast_expr ns:1>
                                                                                                                                    <(:( sym level: 11 namespace:1>
                                                                                                                                    <&type_name ns:1>
                                                                                                                                        <&spec_qual_list ns:1>
                                                                                                                                            <&type_spec ns:1>
                                                                                                                                                <&typedef_name ns:1>
                                                                                                                                                    <identifier:TP_SU sym level: 11 namespace:1>
                                                                                                                                        <&abstract_declarator ns:1>
                                                                                                                                            <&pointer ns:1>
                                                                                                                                                <*:* sym level: 11 namespace:1>
                                                                                                                                    <):) sym level: 11 namespace:1>
                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                        <identifier:x sym level: 11 namespace:1>
                                                                                                                    <;:; sym level: 11 namespace:1>
                                                                                                                <declaration ns:1>
                                                                                                                    <&declaration_spec ns:1>
                                                                                                                        <&type_spec ns:1>
                                                                                                                            <&typedef_name ns:1>
                                                                                                                                <identifier:TP_SU sym level: 11 namespace:1>
                                                                                                                    <&init_decl_list ns:1>
                                                                                                                        <&init_decl ns:1>
                                                                                                                            <&declarator ns:1>
                                                                                                                                <&pointer ns:1>
                                                                                                                                    <*:* sym level: 11 namespace:1>
                                                                                                                                <&direct_declarator ns:1>
                                                                                                                                    <identifier:tmpsuy sym level: 11 namespace:1>
                                                                                                                            <=:= sym level: 11 namespace:1>
                                                                                                                            <&initializer ns:1>
                                                                                                                                <&cast_expr ns:1>
                                                                                                                                    <(:( sym level: 11 namespace:1>
                                                                                                                                    <&type_name ns:1>
                                                                                                                                        <&spec_qual_list ns:1>
                                                                                                                                            <&type_spec ns:1>
                                                                                                                                                <&typedef_name ns:1>
                                                                                                                                                    <identifier:TP_SU sym level: 11 namespace:1>
                                                                                                                                        <&abstract_declarator ns:1>
                                                                                                                                            <&pointer ns:1>
                                                                                                                                                <*:* sym level: 11 namespace:1>
                                                                                                                                    <):) sym level: 11 namespace:1>
                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                        <identifier:y sym level: 11 namespace:1>
                                                                                                                    <;:; sym level: 11 namespace:1>
                                                                                                                <statement ns:1>
                                                                                                                    <&if_stmt ns:1>
                                                                                                                        <KW_if:if sym level: 12 namespace:1>
                                                                                                                        <(:( sym level: 12 namespace:1>
                                                                                                                        <&logical_or_expr ns:1>
                                                                                                                            <&equality_expr ns:1>
                                                                                                                                <&postfix_expr ns:1>
                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                        <identifier:tmpsux sym level: 12 namespace:1>
                                                                                                                                    <->:-> sym level: 12 namespace:1>
                                                                                                                                    <identifier:tag sym level: 12 namespace:0>
                                                                                                                                <==:== sym level: 12 namespace:1>
                                                                                                                                <&primary_expression ns:1>
                                                                                                                                    <integer_constant:0 sym level: 12 namespace:1>
                                                                                                                            <||:|| sym level: 12 namespace:1>
                                                                                                                            <&equality_expr ns:1>
                                                                                                                                <&postfix_expr ns:1>
                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                        <identifier:tmpsuy sym level: 12 namespace:1>
                                                                                                                                    <->:-> sym level: 12 namespace:1>
                                                                                                                                    <identifier:tag sym level: 12 namespace:0>
                                                                                                                                <==:== sym level: 12 namespace:1>
                                                                                                                                <&primary_expression ns:1>
                                                                                                                                    <integer_constant:0 sym level: 12 namespace:1>
                                                                                                                        <):) sym level: 12 namespace:1>
                                                                                                                        <statement ns:1>
                                                                                                                            <&return_stmt ns:1>
                                                                                                                                <KW_return:return sym level: 12 namespace:1>
                                                                                                                                <&primary_expression ns:1>
                                                                                                                                    <integer_constant:0 sym level: 12 namespace:1>
                                                                                                                                <;:; sym level: 12 namespace:1>
                                                                                                                        <KW_else:else sym level: 12 namespace:1>
                                                                                                                        <statement ns:1>
                                                                                                                            <&return_stmt ns:1>
                                                                                                                                <KW_return:return sym level: 12 namespace:1>
                                                                                                                                <&unary_expr ns:1>
                                                                                                                                    <!:! sym level: 12 namespace:1>
                                                                                                                                    <&postfix_expr ns:1>
                                                                                                                                        <&primary_expression ns:1>
                                                                                                                                            <identifier:strcmp sym level: 12 namespace:1>
                                                                                                                                        <(:( sym level: 12 namespace:1>
                                                                                                                                        <&postfix_expr ns:1>
                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                <identifier:tmpsux sym level: 12 namespace:1>
                                                                                                                                            <->:-> sym level: 12 namespace:1>
                                                                                                                                            <identifier:tag sym level: 12 namespace:0>
                                                                                                                                        <,:, sym level: 12 namespace:1>
                                                                                                                                        <&postfix_expr ns:1>
                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                <identifier:tmpsuy sym level: 12 namespace:1>
                                                                                                                                            <->:-> sym level: 12 namespace:1>
                                                                                                                                            <identifier:tag sym level: 12 namespace:0>
                                                                                                                                        <):) sym level: 12 namespace:1>
                                                                                                                                <;:; sym level: 12 namespace:1>
                                                                                                                <right_brace:} sym level: 11 namespace:1>
                                                                                <statement ns:1>
                                                                                    <labeled_stmt ns:230>
                                                                                        <KW_case:case sym level: 10 namespace:230>
                                                                                        <&constant_expr ns:230>
                                                                                            <&primary_expression ns:230>
                                                                                                <identifier:TP_ARRAY sym level: 10 namespace:230>
                                                                                        <colon:: sym level: 10 namespace:230>
                                                                                        <statement ns:1>
                                                                                            <compound_stmt ns:1>
                                                                                                <left_brace:{ sym level: 11 namespace:1>
                                                                                                <declaration ns:1>
                                                                                                    <&declaration_spec ns:1>
                                                                                                        <&type_spec ns:1>
                                                                                                            <&typedef_name ns:1>
                                                                                                                <identifier:TP_ARR sym level: 11 namespace:1>
                                                                                                    <&init_decl_list ns:1>
                                                                                                        <&init_decl ns:1>
                                                                                                            <&declarator ns:1>
                                                                                                                <&pointer ns:1>
                                                                                                                    <*:* sym level: 11 namespace:1>
                                                                                                                <&direct_declarator ns:1>
                                                                                                                    <identifier:tmparrx sym level: 11 namespace:1>
                                                                                                            <=:= sym level: 11 namespace:1>
                                                                                                            <&initializer ns:1>
                                                                                                                <&cast_expr ns:1>
                                                                                                                    <(:( sym level: 11 namespace:1>
                                                                                                                    <&type_name ns:1>
                                                                                                                        <&spec_qual_list ns:1>
                                                                                                                            <&type_spec ns:1>
                                                                                                                                <&typedef_name ns:1>
                                                                                                                                    <identifier:TP_ARR sym level: 11 namespace:1>
                                                                                                                        <&abstract_declarator ns:1>
                                                                                                                            <&pointer ns:1>
                                                                                                                                <*:* sym level: 11 namespace:1>
                                                                                                                    <):) sym level: 11 namespace:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:x sym level: 11 namespace:1>
                                                                                                    <;:; sym level: 11 namespace:1>
                                                                                                <declaration ns:1>
                                                                                                    <&declaration_spec ns:1>
                                                                                                        <&type_spec ns:1>
                                                                                                            <&typedef_name ns:1>
                                                                                                                <identifier:TP_ARR sym level: 11 namespace:1>
                                                                                                    <&init_decl_list ns:1>
                                                                                                        <&init_decl ns:1>
                                                                                                            <&declarator ns:1>
                                                                                                                <&pointer ns:1>
                                                                                                                    <*:* sym level: 11 namespace:1>
                                                                                                                <&direct_declarator ns:1>
                                                                                                                    <identifier:tmparry sym level: 11 namespace:1>
                                                                                                            <=:= sym level: 11 namespace:1>
                                                                                                            <&initializer ns:1>
                                                                                                                <&cast_expr ns:1>
                                                                                                                    <(:( sym level: 11 namespace:1>
                                                                                                                    <&type_name ns:1>
                                                                                                                        <&spec_qual_list ns:1>
                                                                                                                            <&type_spec ns:1>
                                                                                                                                <&typedef_name ns:1>
                                                                                                                                    <identifier:TP_ARR sym level: 11 namespace:1>
                                                                                                                        <&abstract_declarator ns:1>
                                                                                                                            <&pointer ns:1>
                                                                                                                                <*:* sym level: 11 namespace:1>
                                                                                                                    <):) sym level: 11 namespace:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:y sym level: 11 namespace:1>
                                                                                                    <;:; sym level: 11 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <&if_stmt ns:1>
                                                                                                        <KW_if:if sym level: 12 namespace:1>
                                                                                                        <(:( sym level: 12 namespace:1>
                                                                                                        <&equality_expr ns:1>
                                                                                                            <&postfix_expr ns:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:tmparrx sym level: 12 namespace:1>
                                                                                                                <->:-> sym level: 12 namespace:1>
                                                                                                                <identifier:axis_size sym level: 12 namespace:0>
                                                                                                            <!=:!= sym level: 12 namespace:1>
                                                                                                            <&postfix_expr ns:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:tmparry sym level: 12 namespace:1>
                                                                                                                <->:-> sym level: 12 namespace:1>
                                                                                                                <identifier:axis_size sym level: 12 namespace:0>
                                                                                                        <):) sym level: 12 namespace:1>
                                                                                                        <statement ns:1>
                                                                                                            <&return_stmt ns:1>
                                                                                                                <KW_return:return sym level: 12 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <integer_constant:0 sym level: 12 namespace:1>
                                                                                                                <;:; sym level: 12 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <&return_stmt ns:1>
                                                                                                        <KW_return:return sym level: 11 namespace:1>
                                                                                                        <&primary_expression ns:1>
                                                                                                            <integer_constant:1 sym level: 11 namespace:1>
                                                                                                        <;:; sym level: 11 namespace:1>
                                                                                                <right_brace:} sym level: 11 namespace:1>
                                                                                <statement ns:1>
                                                                                    <labeled_stmt ns:230>
                                                                                        <KW_case:case sym level: 10 namespace:230>
                                                                                        <&constant_expr ns:230>
                                                                                            <&primary_expression ns:230>
                                                                                                <identifier:TP_FUNCTION sym level: 10 namespace:230>
                                                                                        <colon:: sym level: 10 namespace:230>
                                                                                        <statement ns:1>
                                                                                            <compound_stmt ns:1>
                                                                                                <left_brace:{ sym level: 11 namespace:1>
                                                                                                <declaration ns:1>
                                                                                                    <&declaration_spec ns:1>
                                                                                                        <&type_spec ns:1>
                                                                                                            <&typedef_name ns:1>
                                                                                                                <identifier:TP_FUNC sym level: 11 namespace:1>
                                                                                                    <&init_decl_list ns:1>
                                                                                                        <&init_decl ns:1>
                                                                                                            <&declarator ns:1>
                                                                                                                <&pointer ns:1>
                                                                                                                    <*:* sym level: 11 namespace:1>
                                                                                                                <&direct_declarator ns:1>
                                                                                                                    <identifier:tmpfuncx sym level: 11 namespace:1>
                                                                                                            <=:= sym level: 11 namespace:1>
                                                                                                            <&initializer ns:1>
                                                                                                                <&cast_expr ns:1>
                                                                                                                    <(:( sym level: 11 namespace:1>
                                                                                                                    <&type_name ns:1>
                                                                                                                        <&spec_qual_list ns:1>
                                                                                                                            <&type_spec ns:1>
                                                                                                                                <&typedef_name ns:1>
                                                                                                                                    <identifier:TP_FUNC sym level: 11 namespace:1>
                                                                                                                        <&abstract_declarator ns:1>
                                                                                                                            <&pointer ns:1>
                                                                                                                                <*:* sym level: 11 namespace:1>
                                                                                                                    <):) sym level: 11 namespace:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:x sym level: 11 namespace:1>
                                                                                                    <;:; sym level: 11 namespace:1>
                                                                                                <declaration ns:1>
                                                                                                    <&declaration_spec ns:1>
                                                                                                        <&type_spec ns:1>
                                                                                                            <&typedef_name ns:1>
                                                                                                                <identifier:TP_FUNC sym level: 11 namespace:1>
                                                                                                    <&init_decl_list ns:1>
                                                                                                        <&init_decl ns:1>
                                                                                                            <&declarator ns:1>
                                                                                                                <&pointer ns:1>
                                                                                                                    <*:* sym level: 11 namespace:1>
                                                                                                                <&direct_declarator ns:1>
                                                                                                                    <identifier:tmpfuncy sym level: 11 namespace:1>
                                                                                                            <=:= sym level: 11 namespace:1>
                                                                                                            <&initializer ns:1>
                                                                                                                <&cast_expr ns:1>
                                                                                                                    <(:( sym level: 11 namespace:1>
                                                                                                                    <&type_name ns:1>
                                                                                                                        <&spec_qual_list ns:1>
                                                                                                                            <&type_spec ns:1>
                                                                                                                                <&typedef_name ns:1>
                                                                                                                                    <identifier:TP_FUNC sym level: 11 namespace:1>
                                                                                                                        <&abstract_declarator ns:1>
                                                                                                                            <&pointer ns:1>
                                                                                                                                <*:* sym level: 11 namespace:1>
                                                                                                                    <):) sym level: 11 namespace:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:y sym level: 11 namespace:1>
                                                                                                    <;:; sym level: 11 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <&if_stmt ns:1>
                                                                                                        <KW_if:if sym level: 12 namespace:1>
                                                                                                        <(:( sym level: 12 namespace:1>
                                                                                                        <&logical_and_expr ns:1>
                                                                                                            <&postfix_expr ns:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:tmpfuncx sym level: 12 namespace:1>
                                                                                                                <->:-> sym level: 12 namespace:1>
                                                                                                                <identifier:func_name sym level: 12 namespace:0>
                                                                                                            <double_ampersand:&& sym level: 12 namespace:1>
                                                                                                            <&postfix_expr ns:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:tmpfuncy sym level: 12 namespace:1>
                                                                                                                <->:-> sym level: 12 namespace:1>
                                                                                                                <identifier:func_name sym level: 12 namespace:0>
                                                                                                        <):) sym level: 12 namespace:1>
                                                                                                        <statement ns:1>
                                                                                                            <compound_stmt ns:1>
                                                                                                                <left_brace:{ sym level: 13 namespace:1>
                                                                                                                <statement ns:1>
                                                                                                                    <&if_stmt ns:1>
                                                                                                                        <KW_if:if sym level: 14 namespace:1>
                                                                                                                        <(:( sym level: 14 namespace:1>
                                                                                                                        <&postfix_expr ns:1>
                                                                                                                            <&primary_expression ns:1>
                                                                                                                                <identifier:strcmp sym level: 14 namespace:1>
                                                                                                                            <(:( sym level: 14 namespace:1>
                                                                                                                            <&postfix_expr ns:1>
                                                                                                                                <&primary_expression ns:1>
                                                                                                                                    <identifier:tmpfuncx sym level: 14 namespace:1>
                                                                                                                                <->:-> sym level: 14 namespace:1>
                                                                                                                                <identifier:func_name sym level: 14 namespace:0>
                                                                                                                            <,:, sym level: 14 namespace:1>
                                                                                                                            <&postfix_expr ns:1>
                                                                                                                                <&primary_expression ns:1>
                                                                                                                                    <identifier:tmpfuncy sym level: 14 namespace:1>
                                                                                                                                <->:-> sym level: 14 namespace:1>
                                                                                                                                <identifier:func_name sym level: 14 namespace:0>
                                                                                                                            <):) sym level: 14 namespace:1>
                                                                                                                        <):) sym level: 14 namespace:1>
                                                                                                                        <statement ns:1>
                                                                                                                            <&return_stmt ns:1>
                                                                                                                                <KW_return:return sym level: 14 namespace:1>
                                                                                                                                <&primary_expression ns:1>
                                                                                                                                    <integer_constant:0 sym level: 14 namespace:1>
                                                                                                                                <;:; sym level: 14 namespace:1>
                                                                                                                        <KW_else:else sym level: 14 namespace:1>
                                                                                                                        <statement ns:1>
                                                                                                                            <compound_stmt ns:1>
                                                                                                                                <left_brace:{ sym level: 15 namespace:1>
                                                                                                                                <statement ns:1>
                                                                                                                                    <&if_stmt ns:1>
                                                                                                                                        <KW_if:if sym level: 16 namespace:1>
                                                                                                                                        <(:( sym level: 16 namespace:1>
                                                                                                                                        <&equality_expr ns:1>
                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                <(:( sym level: 16 namespace:1>
                                                                                                                                                <&postfix_expr ns:1>
                                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                                        <identifier:tmpfuncx sym level: 16 namespace:1>
                                                                                                                                                    <->:-> sym level: 16 namespace:1>
                                                                                                                                                    <identifier:func_parameters sym level: 16 namespace:0>
                                                                                                                                                    <->:-> sym level: 16 namespace:1>
                                                                                                                                                    <identifier:len sym level: 16 namespace:0>
                                                                                                                                                <):) sym level: 16 namespace:1>
                                                                                                                                            <!=:!= sym level: 16 namespace:1>
                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                <(:( sym level: 16 namespace:1>
                                                                                                                                                <&postfix_expr ns:1>
                                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                                        <identifier:tmpfuncy sym level: 16 namespace:1>
                                                                                                                                                    <->:-> sym level: 16 namespace:1>
                                                                                                                                                    <identifier:func_parameters sym level: 16 namespace:0>
                                                                                                                                                    <->:-> sym level: 16 namespace:1>
                                                                                                                                                    <identifier:len sym level: 16 namespace:0>
                                                                                                                                                <):) sym level: 16 namespace:1>
                                                                                                                                        <):) sym level: 16 namespace:1>
                                                                                                                                        <statement ns:1>
                                                                                                                                            <&return_stmt ns:1>
                                                                                                                                                <KW_return:return sym level: 16 namespace:1>
                                                                                                                                                <&primary_expression ns:1>
                                                                                                                                                    <integer_constant:0 sym level: 16 namespace:1>
                                                                                                                                                <;:; sym level: 16 namespace:1>
                                                                                                                                <statement ns:1>
                                                                                                                                    <&for_stmt ns:1>
                                                                                                                                        <KW_for:for sym level: 16 namespace:1>
                                                                                                                                        <(:( sym level: 16 namespace:1>
                                                                                                                                        <declaration ns:1>
                                                                                                                                            <&declaration_spec ns:1>
                                                                                                                                                <&type_spec ns:1>
                                                                                                                                                    <&typedef_name ns:1>
                                                                                                                                                        <identifier:size_t sym level: 16 namespace:1>
                                                                                                                                            <&init_decl_list ns:1>
                                                                                                                                                <&init_decl ns:1>
                                                                                                                                                    <&declarator ns:1>
                                                                                                                                                        <&direct_declarator ns:1>
                                                                                                                                                            <identifier:i sym level: 16 namespace:1>
                                                                                                                                                    <=:= sym level: 16 namespace:1>
                                                                                                                                                    <&initializer ns:1>
                                                                                                                                                        <&primary_expression ns:1>
                                                                                                                                                            <integer_constant:0 sym level: 16 namespace:1>
                                                                                                                                            <;:; sym level: 16 namespace:1>
                                                                                                                                        <&relational_expr ns:1>
                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                <identifier:i sym level: 16 namespace:1>
                                                                                                                                            <<:< sym level: 16 namespace:1>
                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                <(:( sym level: 16 namespace:1>
                                                                                                                                                <&postfix_expr ns:1>
                                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                                        <identifier:tmpfuncx sym level: 16 namespace:1>
                                                                                                                                                    <->:-> sym level: 16 namespace:1>
                                                                                                                                                    <identifier:func_parameters sym level: 16 namespace:0>
                                                                                                                                                    <->:-> sym level: 16 namespace:1>
                                                                                                                                                    <identifier:len sym level: 16 namespace:0>
                                                                                                                                                <):) sym level: 16 namespace:1>
                                                                                                                                        <;:; sym level: 16 namespace:1>
                                                                                                                                        <&unary_expr ns:1>
                                                                                                                                            <++:++ sym level: 16 namespace:1>
                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                <identifier:i sym level: 16 namespace:1>
                                                                                                                                        <):) sym level: 16 namespace:1>
                                                                                                                                        <statement ns:1>
                                                                                                                                            <compound_stmt ns:1>
                                                                                                                                                <left_brace:{ sym level: 17 namespace:1>
                                                                                                                                                <declaration ns:1>
                                                                                                                                                    <&declaration_spec ns:1>
                                                                                                                                                        <&type_spec ns:1>
                                                                                                                                                            <&typedef_name ns:1>
                                                                                                                                                                <identifier:TP_FUNC_PARA sym level: 17 namespace:1>
                                                                                                                                                    <&init_decl_list ns:1>
                                                                                                                                                        <&init_decl ns:1>
                                                                                                                                                            <&declarator ns:1>
                                                                                                                                                                <&pointer ns:1>
                                                                                                                                                                    <*:* sym level: 17 namespace:1>
                                                                                                                                                                <&direct_declarator ns:1>
                                                                                                                                                                    <identifier:parax sym level: 17 namespace:1>
                                                                                                                                                            <=:= sym level: 17 namespace:1>
                                                                                                                                                            <&initializer ns:1>
                                                                                                                                                                <&cast_expr ns:1>
                                                                                                                                                                    <(:( sym level: 17 namespace:1>
                                                                                                                                                                    <&type_name ns:1>
                                                                                                                                                                        <&spec_qual_list ns:1>
                                                                                                                                                                            <&type_spec ns:1>
                                                                                                                                                                                <&typedef_name ns:1>
                                                                                                                                                                                    <identifier:TP_FUNC_PARA sym level: 17 namespace:1>
                                                                                                                                                                        <&abstract_declarator ns:1>
                                                                                                                                                                            <&pointer ns:1>
                                                                                                                                                                                <*:* sym level: 17 namespace:1>
                                                                                                                                                                    <):) sym level: 17 namespace:1>
                                                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                                                        <(:( sym level: 17 namespace:1>
                                                                                                                                                                        <&conditional_expr ns:1>
                                                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                                                <(:( sym level: 17 namespace:1>
                                                                                                                                                                                <&logical_and_expr ns:1>
                                                                                                                                                                                    <&equality_expr ns:1>
                                                                                                                                                                                        <&postfix_expr ns:1>
                                                                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                                                                <identifier:tmpfuncx sym level: 17 namespace:1>
                                                                                                                                                                                            <->:-> sym level: 17 namespace:1>
                                                                                                                                                                                            <identifier:func_parameters sym level: 17 namespace:0>
                                                                                                                                                                                        <!=:!= sym level: 17 namespace:1>
                                                                                                                                                                                        <&primary_expression ns:1>
                                                                                                                                                                                            <integer_constant:0 sym level: 17 namespace:1>
                                                                                                                                                                                    <double_ampersand:&& sym level: 17 namespace:1>
                                                                                                                                                                                    <&relational_expr ns:1>
                                                                                                                                                                                        <&primary_expression ns:1>
                                                                                                                                                                                            <identifier:i sym level: 17 namespace:1>
                                                                                                                                                                                        <<:< sym level: 17 namespace:1>
                                                                                                                                                                                        <&primary_expression ns:1>
                                                                                                                                                                                            <(:( sym level: 17 namespace:1>
                                                                                                                                                                                            <&postfix_expr ns:1>
                                                                                                                                                                                                <&primary_expression ns:1>
                                                                                                                                                                                                    <identifier:tmpfuncx sym level: 17 namespace:1>
                                                                                                                                                                                                <->:-> sym level: 17 namespace:1>
                                                                                                                                                                                                <identifier:func_parameters sym level: 17 namespace:0>
                                                                                                                                                                                                <->:-> sym level: 17 namespace:1>
                                                                                                                                                                                                <identifier:len sym level: 17 namespace:0>
                                                                                                                                                                                            <):) sym level: 17 namespace:1>
                                                                                                                                                                                <):) sym level: 17 namespace:1>
                                                                                                                                                                            <?:? sym level: 17 namespace:1>
                                                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                                                <(:( sym level: 17 namespace:1>
                                                                                                                                                                                <&postfix_expr ns:1>
                                                                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                                                                        <identifier:tmpfuncx sym level: 17 namespace:1>
                                                                                                                                                                                    <->:-> sym level: 17 namespace:1>
                                                                                                                                                                                    <identifier:func_parameters sym level: 17 namespace:0>
                                                                                                                                                                                    <->:-> sym level: 17 namespace:1>
                                                                                                                                                                                    <identifier:data sym level: 17 namespace:0>
                                                                                                                                                                                    <[:[ sym level: 17 namespace:1>
                                                                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                                                                        <identifier:i sym level: 17 namespace:1>
                                                                                                                                                                                    <]:] sym level: 17 namespace:1>
                                                                                                                                                                                <):) sym level: 17 namespace:1>
                                                                                                                                                                            <colon:: sym level: 17 namespace:1>
                                                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                                                <integer_constant:0 sym level: 17 namespace:1>
                                                                                                                                                                        <):) sym level: 17 namespace:1>
                                                                                                                                                    <;:; sym level: 17 namespace:1>
                                                                                                                                                <declaration ns:1>
                                                                                                                                                    <&declaration_spec ns:1>
                                                                                                                                                        <&type_spec ns:1>
                                                                                                                                                            <&typedef_name ns:1>
                                                                                                                                                                <identifier:TP_FUNC_PARA sym level: 17 namespace:1>
                                                                                                                                                    <&init_decl_list ns:1>
                                                                                                                                                        <&init_decl ns:1>
                                                                                                                                                            <&declarator ns:1>
                                                                                                                                                                <&pointer ns:1>
                                                                                                                                                                    <*:* sym level: 17 namespace:1>
                                                                                                                                                                <&direct_declarator ns:1>
                                                                                                                                                                    <identifier:paray sym level: 17 namespace:1>
                                                                                                                                                            <=:= sym level: 17 namespace:1>
                                                                                                                                                            <&initializer ns:1>
                                                                                                                                                                <&cast_expr ns:1>
                                                                                                                                                                    <(:( sym level: 17 namespace:1>
                                                                                                                                                                    <&type_name ns:1>
                                                                                                                                                                        <&spec_qual_list ns:1>
                                                                                                                                                                            <&type_spec ns:1>
                                                                                                                                                                                <&typedef_name ns:1>
                                                                                                                                                                                    <identifier:TP_FUNC_PARA sym level: 17 namespace:1>
                                                                                                                                                                        <&abstract_declarator ns:1>
                                                                                                                                                                            <&pointer ns:1>
                                                                                                                                                                                <*:* sym level: 17 namespace:1>
                                                                                                                                                                    <):) sym level: 17 namespace:1>
                                                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                                                        <(:( sym level: 17 namespace:1>
                                                                                                                                                                        <&conditional_expr ns:1>
                                                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                                                <(:( sym level: 17 namespace:1>
                                                                                                                                                                                <&logical_and_expr ns:1>
                                                                                                                                                                                    <&equality_expr ns:1>
                                                                                                                                                                                        <&postfix_expr ns:1>
                                                                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                                                                <identifier:tmpfuncy sym level: 17 namespace:1>
                                                                                                                                                                                            <->:-> sym level: 17 namespace:1>
                                                                                                                                                                                            <identifier:func_parameters sym level: 17 namespace:0>
                                                                                                                                                                                        <!=:!= sym level: 17 namespace:1>
                                                                                                                                                                                        <&primary_expression ns:1>
                                                                                                                                                                                            <integer_constant:0 sym level: 17 namespace:1>
                                                                                                                                                                                    <double_ampersand:&& sym level: 17 namespace:1>
                                                                                                                                                                                    <&relational_expr ns:1>
                                                                                                                                                                                        <&primary_expression ns:1>
                                                                                                                                                                                            <identifier:i sym level: 17 namespace:1>
                                                                                                                                                                                        <<:< sym level: 17 namespace:1>
                                                                                                                                                                                        <&primary_expression ns:1>
                                                                                                                                                                                            <(:( sym level: 17 namespace:1>
                                                                                                                                                                                            <&postfix_expr ns:1>
                                                                                                                                                                                                <&primary_expression ns:1>
                                                                                                                                                                                                    <identifier:tmpfuncy sym level: 17 namespace:1>
                                                                                                                                                                                                <->:-> sym level: 17 namespace:1>
                                                                                                                                                                                                <identifier:func_parameters sym level: 17 namespace:0>
                                                                                                                                                                                                <->:-> sym level: 17 namespace:1>
                                                                                                                                                                                                <identifier:len sym level: 17 namespace:0>
                                                                                                                                                                                            <):) sym level: 17 namespace:1>
                                                                                                                                                                                <):) sym level: 17 namespace:1>
                                                                                                                                                                            <?:? sym level: 17 namespace:1>
                                                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                                                <(:( sym level: 17 namespace:1>
                                                                                                                                                                                <&postfix_expr ns:1>
                                                                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                                                                        <identifier:tmpfuncy sym level: 17 namespace:1>
                                                                                                                                                                                    <->:-> sym level: 17 namespace:1>
                                                                                                                                                                                    <identifier:func_parameters sym level: 17 namespace:0>
                                                                                                                                                                                    <->:-> sym level: 17 namespace:1>
                                                                                                                                                                                    <identifier:data sym level: 17 namespace:0>
                                                                                                                                                                                    <[:[ sym level: 17 namespace:1>
                                                                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                                                                        <identifier:i sym level: 17 namespace:1>
                                                                                                                                                                                    <]:] sym level: 17 namespace:1>
                                                                                                                                                                                <):) sym level: 17 namespace:1>
                                                                                                                                                                            <colon:: sym level: 17 namespace:1>
                                                                                                                                                                            <&primary_expression ns:1>
                                                                                                                                                                                <integer_constant:0 sym level: 17 namespace:1>
                                                                                                                                                                        <):) sym level: 17 namespace:1>
                                                                                                                                                    <;:; sym level: 17 namespace:1>
                                                                                                                                                <statement ns:1>
                                                                                                                                                    <&if_stmt ns:1>
                                                                                                                                                        <KW_if:if sym level: 18 namespace:1>
                                                                                                                                                        <(:( sym level: 18 namespace:1>
                                                                                                                                                        <&unary_expr ns:1>
                                                                                                                                                            <!:! sym level: 18 namespace:1>
                                                                                                                                                            <&postfix_expr ns:1>
                                                                                                                                                                <&primary_expression ns:1>
                                                                                                                                                                    <identifier:Type_VEC_cmp sym level: 18 namespace:1>
                                                                                                                                                                <(:( sym level: 18 namespace:1>
                                                                                                                                                                <&postfix_expr ns:1>
                                                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                                                        <identifier:parax sym level: 18 namespace:1>
                                                                                                                                                                    <->:-> sym level: 18 namespace:1>
                                                                                                                                                                    <identifier:type_vec sym level: 18 namespace:0>
                                                                                                                                                                <,:, sym level: 18 namespace:1>
                                                                                                                                                                <&postfix_expr ns:1>
                                                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                                                        <identifier:paray sym level: 18 namespace:1>
                                                                                                                                                                    <->:-> sym level: 18 namespace:1>
                                                                                                                                                                    <identifier:type_vec sym level: 18 namespace:0>
                                                                                                                                                                <):) sym level: 18 namespace:1>
                                                                                                                                                        <):) sym level: 18 namespace:1>
                                                                                                                                                        <statement ns:1>
                                                                                                                                                            <&return_stmt ns:1>
                                                                                                                                                                <KW_return:return sym level: 18 namespace:1>
                                                                                                                                                                <&primary_expression ns:1>
                                                                                                                                                                    <integer_constant:0 sym level: 18 namespace:1>
                                                                                                                                                                <;:; sym level: 18 namespace:1>
                                                                                                                                                <right_brace:} sym level: 17 namespace:1>
                                                                                                                                <right_brace:} sym level: 15 namespace:1>
                                                                                                                <right_brace:} sym level: 13 namespace:1>
                                                                                                        <KW_else:else sym level: 12 namespace:1>
                                                                                                        <statement ns:1>
                                                                                                            <&return_stmt ns:1>
                                                                                                                <KW_return:return sym level: 12 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <integer_constant:0 sym level: 12 namespace:1>
                                                                                                                <;:; sym level: 12 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <&break_stmt ns:1>
                                                                                                        <KW_break:break sym level: 11 namespace:1>
                                                                                                        <;:; sym level: 11 namespace:1>
                                                                                                <right_brace:} sym level: 11 namespace:1>
                                                                                <statement ns:1>
                                                                                    <labeled_stmt ns:230>
                                                                                        <KW_case:case sym level: 10 namespace:230>
                                                                                        <&constant_expr ns:230>
                                                                                            <&primary_expression ns:230>
                                                                                                <identifier:TP_TYPE_DEF_TYPE sym level: 10 namespace:230>
                                                                                        <colon:: sym level: 10 namespace:230>
                                                                                        <statement ns:1>
                                                                                            <compound_stmt ns:1>
                                                                                                <left_brace:{ sym level: 11 namespace:1>
                                                                                                <declaration ns:1>
                                                                                                    <&declaration_spec ns:1>
                                                                                                        <&type_spec ns:1>
                                                                                                            <&typedef_name ns:1>
                                                                                                                <identifier:TP_DEF_TYPE sym level: 11 namespace:1>
                                                                                                    <&init_decl_list ns:1>
                                                                                                        <&init_decl ns:1>
                                                                                                            <&declarator ns:1>
                                                                                                                <&pointer ns:1>
                                                                                                                    <*:* sym level: 11 namespace:1>
                                                                                                                <&direct_declarator ns:1>
                                                                                                                    <identifier:defx sym level: 11 namespace:1>
                                                                                                            <=:= sym level: 11 namespace:1>
                                                                                                            <&initializer ns:1>
                                                                                                                <&cast_expr ns:1>
                                                                                                                    <(:( sym level: 11 namespace:1>
                                                                                                                    <&type_name ns:1>
                                                                                                                        <&spec_qual_list ns:1>
                                                                                                                            <&type_spec ns:1>
                                                                                                                                <&typedef_name ns:1>
                                                                                                                                    <identifier:TP_DEF_TYPE sym level: 11 namespace:1>
                                                                                                                        <&abstract_declarator ns:1>
                                                                                                                            <&pointer ns:1>
                                                                                                                                <*:* sym level: 11 namespace:1>
                                                                                                                    <):) sym level: 11 namespace:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:x sym level: 11 namespace:1>
                                                                                                    <;:; sym level: 11 namespace:1>
                                                                                                <declaration ns:1>
                                                                                                    <&declaration_spec ns:1>
                                                                                                        <&type_spec ns:1>
                                                                                                            <&typedef_name ns:1>
                                                                                                                <identifier:TP_DEF_TYPE sym level: 11 namespace:1>
                                                                                                    <&init_decl_list ns:1>
                                                                                                        <&init_decl ns:1>
                                                                                                            <&declarator ns:1>
                                                                                                                <&pointer ns:1>
                                                                                                                    <*:* sym level: 11 namespace:1>
                                                                                                                <&direct_declarator ns:1>
                                                                                                                    <identifier:defy sym level: 11 namespace:1>
                                                                                                            <=:= sym level: 11 namespace:1>
                                                                                                            <&initializer ns:1>
                                                                                                                <&cast_expr ns:1>
                                                                                                                    <(:( sym level: 11 namespace:1>
                                                                                                                    <&type_name ns:1>
                                                                                                                        <&spec_qual_list ns:1>
                                                                                                                            <&type_spec ns:1>
                                                                                                                                <&typedef_name ns:1>
                                                                                                                                    <identifier:TP_DEF_TYPE sym level: 11 namespace:1>
                                                                                                                        <&abstract_declarator ns:1>
                                                                                                                            <&pointer ns:1>
                                                                                                                                <*:* sym level: 11 namespace:1>
                                                                                                                    <):) sym level: 11 namespace:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:y sym level: 11 namespace:1>
                                                                                                    <;:; sym level: 11 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <&if_stmt ns:1>
                                                                                                        <KW_if:if sym level: 12 namespace:1>
                                                                                                        <(:( sym level: 12 namespace:1>
                                                                                                        <&unary_expr ns:1>
                                                                                                            <!:! sym level: 12 namespace:1>
                                                                                                            <&postfix_expr ns:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:Type_VEC_cmp sym level: 12 namespace:1>
                                                                                                                <(:( sym level: 12 namespace:1>
                                                                                                                <&postfix_expr ns:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:defx sym level: 12 namespace:1>
                                                                                                                    <->:-> sym level: 12 namespace:1>
                                                                                                                    <identifier:typedef_name_type sym level: 12 namespace:0>
                                                                                                                <,:, sym level: 12 namespace:1>
                                                                                                                <&postfix_expr ns:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:defy sym level: 12 namespace:1>
                                                                                                                    <->:-> sym level: 12 namespace:1>
                                                                                                                    <identifier:typedef_name_type sym level: 12 namespace:0>
                                                                                                                <):) sym level: 12 namespace:1>
                                                                                                        <):) sym level: 12 namespace:1>
                                                                                                        <statement ns:1>
                                                                                                            <&return_stmt ns:1>
                                                                                                                <KW_return:return sym level: 12 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <integer_constant:0 sym level: 12 namespace:1>
                                                                                                                <;:; sym level: 12 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <&break_stmt ns:1>
                                                                                                        <KW_break:break sym level: 11 namespace:1>
                                                                                                        <;:; sym level: 11 namespace:1>
                                                                                                <right_brace:} sym level: 11 namespace:1>
                                                                                <statement ns:1>
                                                                                    <labeled_stmt ns:230>
                                                                                        <KW_case:case sym level: 10 namespace:230>
                                                                                        <&constant_expr ns:230>
                                                                                            <&primary_expression ns:230>
                                                                                                <identifier:TP_SPEC_ATOMIC sym level: 10 namespace:230>
                                                                                        <colon:: sym level: 10 namespace:230>
                                                                                        <statement ns:1>
                                                                                            <&return_stmt ns:1>
                                                                                                <KW_return:return sym level: 10 namespace:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <integer_constant:0 sym level: 10 namespace:1>
                                                                                                <;:; sym level: 10 namespace:1>
                                                                                <statement ns:1>
                                                                                    <labeled_stmt ns:230>
                                                                                        <KW_default:default sym level: 10 namespace:230>
                                                                                        <colon:: sym level: 10 namespace:230>
                                                                                        <statement ns:1>
                                                                                            <&return_stmt ns:1>
                                                                                                <KW_return:return sym level: 10 namespace:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <integer_constant:1 sym level: 10 namespace:1>
                                                                                                <;:; sym level: 10 namespace:1>
                                                                                <right_brace:} sym level: 10 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:1 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_VM sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&return_stmt ns:1>
                                        <KW_return:return sym level: 4 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <&typedef_name ns:1>
                                        <identifier:size_t sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <<:< sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:type_vec sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:len sym level: 3 namespace:0>
                                <):) sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <++:++ sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:M_TYPE sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpt sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&conditional_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&logical_and_expr ns:1>
                                                                <&equality_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:type_vec sym level: 4 namespace:1>
                                                                    <!=:!= sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <integer_constant:0 sym level: 4 namespace:1>
                                                                <double_ampersand:&& sym level: 4 namespace:1>
                                                                <&relational_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <<:< sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 4 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:type_vec sym level: 4 namespace:1>
                                                                            <->:-> sym level: 4 namespace:1>
                                                                            <identifier:len sym level: 4 namespace:0>
                                                                        <):) sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <?:? sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:type_vec sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:data sym level: 4 namespace:0>
                                                                <[:[ sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:i sym level: 4 namespace:1>
                                                                <]:] sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <colon:: sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&logical_and_expr ns:1>
                                            <&equality_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpt sym level: 5 namespace:1>
                                                    <->:-> sym level: 5 namespace:1>
                                                    <identifier:typ_category sym level: 5 namespace:0>
                                                <==:== sym level: 5 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_ARRAY sym level: 5 namespace:1>
                                            <double_ampersand:&& sym level: 5 namespace:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 5 namespace:1>
                                                    <&cast_expr ns:1>
                                                        <(:( sym level: 5 namespace:1>
                                                        <&type_name ns:1>
                                                            <&spec_qual_list ns:1>
                                                                <&type_spec ns:1>
                                                                    <&typedef_name ns:1>
                                                                        <identifier:TP_ARR sym level: 5 namespace:1>
                                                            <&abstract_declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 5 namespace:1>
                                                        <):) sym level: 5 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:tmpt sym level: 5 namespace:1>
                                                    <):) sym level: 5 namespace:1>
                                                <->:-> sym level: 5 namespace:1>
                                                <identifier:is_vla sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&return_stmt ns:1>
                                                        <KW_return:return sym level: 6 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:1 sym level: 6 namespace:1>
                                                        <;:; sym level: 6 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:0 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_VLA sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&return_stmt ns:1>
                                        <KW_return:return sym level: 4 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:tmpt sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:Type_VEC_get_actual_base_type sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&equality_expr ns:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:tmpt sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:typ_category sym level: 3 namespace:0>
                            <!=:!= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:TP_ARRAY sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:VEC sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:tmpv sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:Type_VEC_get_Array_TO sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                                    <,:, sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:1 sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <KW_int:int sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&additive_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 3 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpv sym level: 3 namespace:1>
                                                    <->:-> sym level: 3 namespace:1>
                                                    <identifier:len sym level: 3 namespace:0>
                                                <):) sym level: 3 namespace:1>
                                            <-:- sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:1 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <>=:>= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:0 sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <--:-- sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:M_TYPE sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpt sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&conditional_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&logical_and_expr ns:1>
                                                                <&equality_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:tmpv sym level: 4 namespace:1>
                                                                    <!=:!= sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <integer_constant:0 sym level: 4 namespace:1>
                                                                <double_ampersand:&& sym level: 4 namespace:1>
                                                                <&relational_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <<:< sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 4 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:tmpv sym level: 4 namespace:1>
                                                                            <->:-> sym level: 4 namespace:1>
                                                                            <identifier:len sym level: 4 namespace:0>
                                                                        <):) sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <?:? sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:tmpv sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:data sym level: 4 namespace:0>
                                                                <[:[ sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:i sym level: 4 namespace:1>
                                                                <]:] sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <colon:: sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 5 namespace:1>
                                            <->:-> sym level: 5 namespace:1>
                                            <identifier:modifier sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&continue_stmt ns:1>
                                                <KW_continue:continue sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&logical_and_expr ns:1>
                                            <&equality_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpt sym level: 5 namespace:1>
                                                    <->:-> sym level: 5 namespace:1>
                                                    <identifier:typ_category sym level: 5 namespace:0>
                                                <==:== sym level: 5 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_ARRAY sym level: 5 namespace:1>
                                            <double_ampersand:&& sym level: 5 namespace:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 5 namespace:1>
                                                    <&cast_expr ns:1>
                                                        <(:( sym level: 5 namespace:1>
                                                        <&type_name ns:1>
                                                            <&spec_qual_list ns:1>
                                                                <&type_spec ns:1>
                                                                    <&typedef_name ns:1>
                                                                        <identifier:TP_ARR sym level: 5 namespace:1>
                                                            <&abstract_declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 5 namespace:1>
                                                        <):) sym level: 5 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:tmpt sym level: 5 namespace:1>
                                                    <):) sym level: 5 namespace:1>
                                                <->:-> sym level: 5 namespace:1>
                                                <identifier:is_vla sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&return_stmt ns:1>
                                                        <KW_return:return sym level: 6 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:1 sym level: 6 namespace:1>
                                                        <;:; sym level: 6 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&equality_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:tmpt sym level: 5 namespace:1>
                                                <->:-> sym level: 5 namespace:1>
                                                <identifier:typ_category sym level: 5 namespace:0>
                                            <!=:!= sym level: 5 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_ARRAY sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&if_stmt ns:1>
                                                        <KW_if:if sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:tmpt sym level: 7 namespace:1>
                                                            <->:-> sym level: 7 namespace:1>
                                                            <identifier:complete sym level: 7 namespace:0>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&return_stmt ns:1>
                                                                <KW_return:return sym level: 7 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <integer_constant:0 sym level: 7 namespace:1>
                                                                <;:; sym level: 7 namespace:1>
                                                        <KW_else:else sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&return_stmt ns:1>
                                                                <KW_return:return sym level: 7 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <integer_constant:1 sym level: 7 namespace:1>
                                                                <;:; sym level: 7 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:0 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_modify_lvalue sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW__Bool:_Bool sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:is_lvalue sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:is_lvalue sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:tmpt sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:Type_VEC_get_actual_base_type sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_and_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 3 namespace:1>
                            <double_ampersand:&& sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&logical_or_expr ns:1>
                                    <&equality_expr ns:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 3 namespace:1>
                                            <->:-> sym level: 3 namespace:1>
                                            <identifier:typ_category sym level: 3 namespace:0>
                                        <==:== sym level: 3 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:TP_ARRAY sym level: 3 namespace:1>
                                    <||:|| sym level: 3 namespace:1>
                                    <&equality_expr ns:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 3 namespace:1>
                                            <->:-> sym level: 3 namespace:1>
                                            <identifier:typ_category sym level: 3 namespace:0>
                                        <==:== sym level: 3 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:TP_FUNCTION sym level: 3 namespace:1>
                                <):) sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_and_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 3 namespace:1>
                            <double_ampersand:&& sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&logical_or_expr ns:1>
                                    <&equality_expr ns:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 3 namespace:1>
                                            <->:-> sym level: 3 namespace:1>
                                            <identifier:typ_category sym level: 3 namespace:0>
                                        <==:== sym level: 3 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:TP_STRUCT sym level: 3 namespace:1>
                                    <||:|| sym level: 3 namespace:1>
                                    <&equality_expr ns:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 3 namespace:1>
                                            <->:-> sym level: 3 namespace:1>
                                            <identifier:typ_category sym level: 3 namespace:0>
                                        <==:== sym level: 3 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:TP_UNION sym level: 3 namespace:1>
                                <):) sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&equality_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 5 namespace:1>
                                                    <&cast_expr ns:1>
                                                        <(:( sym level: 5 namespace:1>
                                                        <&type_name ns:1>
                                                            <&spec_qual_list ns:1>
                                                                <&type_spec ns:1>
                                                                    <&typedef_name ns:1>
                                                                        <identifier:TP_SU sym level: 5 namespace:1>
                                                            <&abstract_declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 5 namespace:1>
                                                        <):) sym level: 5 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:tmpt sym level: 5 namespace:1>
                                                    <):) sym level: 5 namespace:1>
                                                <->:-> sym level: 5 namespace:1>
                                                <identifier:can_be_modified_lvalue sym level: 5 namespace:0>
                                            <==:== sym level: 5 namespace:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:0 sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&return_stmt ns:1>
                                                <KW_return:return sym level: 5 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:0 sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_and_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 3 namespace:1>
                            <double_ampersand:&& sym level: 3 namespace:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:tmpt sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:complete sym level: 3 namespace:0>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&assignment_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:Type_VEC_get_qual sym level: 2 namespace:1>
                                <(:( sym level: 2 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 2 namespace:1>
                                <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_and_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 3 namespace:1>
                            <double_ampersand:&& sym level: 3 namespace:1>
                            <&relational_expr ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:tmpt sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:type_qual sym level: 3 namespace:0>
                                <>=:>= sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:8 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:1 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:Type_size sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:type_vec sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:size_t sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:res sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <&typedef_name ns:1>
                                        <identifier:size_t sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <<:< sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:type_vec sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:len sym level: 3 namespace:0>
                                <):) sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <++:++ sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:M_TYPE sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpt sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&conditional_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&logical_and_expr ns:1>
                                                                <&equality_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:type_vec sym level: 4 namespace:1>
                                                                    <!=:!= sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <integer_constant:0 sym level: 4 namespace:1>
                                                                <double_ampersand:&& sym level: 4 namespace:1>
                                                                <&relational_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <<:< sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 4 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:type_vec sym level: 4 namespace:1>
                                                                            <->:-> sym level: 4 namespace:1>
                                                                            <identifier:len sym level: 4 namespace:0>
                                                                        <):) sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <?:? sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:type_vec sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:data sym level: 4 namespace:0>
                                                                <[:[ sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:i sym level: 4 namespace:1>
                                                                <]:] sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <colon:: sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 5 namespace:1>
                                            <->:-> sym level: 5 namespace:1>
                                            <identifier:modifier sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&continue_stmt ns:1>
                                                <KW_continue:continue sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&logical_or_expr ns:1>
                                            <&equality_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpt sym level: 5 namespace:1>
                                                    <->:-> sym level: 5 namespace:1>
                                                    <identifier:typ_category sym level: 5 namespace:0>
                                                <==:== sym level: 5 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_SPEC_NONE sym level: 5 namespace:1>
                                            <||:|| sym level: 5 namespace:1>
                                            <&equality_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpt sym level: 5 namespace:1>
                                                    <->:-> sym level: 5 namespace:1>
                                                    <identifier:typ_category sym level: 5 namespace:0>
                                                <==:== sym level: 5 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_VOID sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <expr_stmt ns:1>
                                                <&assignment_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res sym level: 5 namespace:1>
                                                    <=:= sym level: 5 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <integer_constant:0 sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&if_stmt ns:1>
                                                <KW_if:if sym level: 6 namespace:1>
                                                <(:( sym level: 6 namespace:1>
                                                <&logical_or_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 6 namespace:1>
                                                        <&logical_and_expr ns:1>
                                                            <&relational_expr ns:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:tmpt sym level: 6 namespace:1>
                                                                    <->:-> sym level: 6 namespace:1>
                                                                    <identifier:typ_category sym level: 6 namespace:0>
                                                                <>=:>= sym level: 6 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:TP_SCHAR sym level: 6 namespace:1>
                                                            <double_ampersand:&& sym level: 6 namespace:1>
                                                            <&relational_expr ns:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:tmpt sym level: 6 namespace:1>
                                                                    <->:-> sym level: 6 namespace:1>
                                                                    <identifier:typ_category sym level: 6 namespace:0>
                                                                <<=:<= sym level: 6 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:TP_LONG_DOUBLE_COMPLEX sym level: 6 namespace:1>
                                                        <):) sym level: 6 namespace:1>
                                                    <||:|| sym level: 6 namespace:1>
                                                    <&equality_expr ns:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:tmpt sym level: 6 namespace:1>
                                                            <->:-> sym level: 6 namespace:1>
                                                            <identifier:typ_category sym level: 6 namespace:0>
                                                        <==:== sym level: 6 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:TP_POINT sym level: 6 namespace:1>
                                                <):) sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <compound_stmt ns:1>
                                                        <left_brace:{ sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <expr_stmt ns:1>
                                                                <&assignment_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:res sym level: 7 namespace:1>
                                                                    <=:= sym level: 7 namespace:1>
                                                                    <&postfix_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:type_data_size sym level: 7 namespace:1>
                                                                        <[:[ sym level: 7 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:tmpt sym level: 7 namespace:1>
                                                                            <->:-> sym level: 7 namespace:1>
                                                                            <identifier:typ_category sym level: 7 namespace:0>
                                                                        <]:] sym level: 7 namespace:1>
                                                                <;:; sym level: 7 namespace:1>
                                                        <right_brace:} sym level: 7 namespace:1>
                                                <KW_else:else sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&if_stmt ns:1>
                                                        <KW_if:if sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <&logical_or_expr ns:1>
                                                            <&equality_expr ns:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:tmpt sym level: 7 namespace:1>
                                                                    <->:-> sym level: 7 namespace:1>
                                                                    <identifier:typ_category sym level: 7 namespace:0>
                                                                <==:== sym level: 7 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:TP_UNION_STRUCT sym level: 7 namespace:1>
                                                            <||:|| sym level: 7 namespace:1>
                                                            <&equality_expr ns:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:tmpt sym level: 7 namespace:1>
                                                                    <->:-> sym level: 7 namespace:1>
                                                                    <identifier:typ_category sym level: 7 namespace:0>
                                                                <==:== sym level: 7 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:TP_UNION sym level: 7 namespace:1>
                                                            <||:|| sym level: 7 namespace:1>
                                                            <&equality_expr ns:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:tmpt sym level: 7 namespace:1>
                                                                    <->:-> sym level: 7 namespace:1>
                                                                    <identifier:typ_category sym level: 7 namespace:0>
                                                                <==:== sym level: 7 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:TP_STRUCT sym level: 7 namespace:1>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <declaration ns:1>
                                                                    <&declaration_spec ns:1>
                                                                        <&type_spec ns:1>
                                                                            <&typedef_name ns:1>
                                                                                <identifier:TP_SU sym level: 8 namespace:1>
                                                                    <&init_decl_list ns:1>
                                                                        <&init_decl ns:1>
                                                                            <&declarator ns:1>
                                                                                <&pointer ns:1>
                                                                                    <*:* sym level: 8 namespace:1>
                                                                                <&direct_declarator ns:1>
                                                                                    <identifier:tmpt_su sym level: 8 namespace:1>
                                                                            <=:= sym level: 8 namespace:1>
                                                                            <&initializer ns:1>
                                                                                <&cast_expr ns:1>
                                                                                    <(:( sym level: 8 namespace:1>
                                                                                    <&type_name ns:1>
                                                                                        <&spec_qual_list ns:1>
                                                                                            <&type_spec ns:1>
                                                                                                <&typedef_name ns:1>
                                                                                                    <identifier:TP_SU sym level: 8 namespace:1>
                                                                                        <&abstract_declarator ns:1>
                                                                                            <&pointer ns:1>
                                                                                                <*:* sym level: 8 namespace:1>
                                                                                    <):) sym level: 8 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:tmpt sym level: 8 namespace:1>
                                                                    <;:; sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <expr_stmt ns:1>
                                                                        <&assignment_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:res sym level: 8 namespace:1>
                                                                            <=:= sym level: 8 namespace:1>
                                                                            <&postfix_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:tmpt_su sym level: 8 namespace:1>
                                                                                <->:-> sym level: 8 namespace:1>
                                                                                <identifier:total_data_size sym level: 8 namespace:0>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                        <KW_else:else sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&if_stmt ns:1>
                                                                <KW_if:if sym level: 8 namespace:1>
                                                                <(:( sym level: 8 namespace:1>
                                                                <&equality_expr ns:1>
                                                                    <&postfix_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:tmpt sym level: 8 namespace:1>
                                                                        <->:-> sym level: 8 namespace:1>
                                                                        <identifier:typ_category sym level: 8 namespace:0>
                                                                    <==:== sym level: 8 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:TP_ARRAY sym level: 8 namespace:1>
                                                                <):) sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <compound_stmt ns:1>
                                                                        <left_brace:{ sym level: 9 namespace:1>
                                                                        <declaration ns:1>
                                                                            <&declaration_spec ns:1>
                                                                                <&type_spec ns:1>
                                                                                    <&typedef_name ns:1>
                                                                                        <identifier:TP_ARR sym level: 9 namespace:1>
                                                                            <&init_decl_list ns:1>
                                                                                <&init_decl ns:1>
                                                                                    <&declarator ns:1>
                                                                                        <&pointer ns:1>
                                                                                            <*:* sym level: 9 namespace:1>
                                                                                        <&direct_declarator ns:1>
                                                                                            <identifier:tmpt_arr sym level: 9 namespace:1>
                                                                                    <=:= sym level: 9 namespace:1>
                                                                                    <&initializer ns:1>
                                                                                        <&cast_expr ns:1>
                                                                                            <(:( sym level: 9 namespace:1>
                                                                                            <&type_name ns:1>
                                                                                                <&spec_qual_list ns:1>
                                                                                                    <&type_spec ns:1>
                                                                                                        <&typedef_name ns:1>
                                                                                                            <identifier:TP_ARR sym level: 9 namespace:1>
                                                                                                <&abstract_declarator ns:1>
                                                                                                    <&pointer ns:1>
                                                                                                        <*:* sym level: 9 namespace:1>
                                                                                            <):) sym level: 9 namespace:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:tmpt sym level: 9 namespace:1>
                                                                            <;:; sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <expr_stmt ns:1>
                                                                                <&assignment_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:res sym level: 9 namespace:1>
                                                                                    <=:*= sym level: 9 namespace:1>
                                                                                    <&multi_expr ns:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <identifier:res sym level: 9 namespace:1>
                                                                                        <*:*= sym level: 9 namespace:1>
                                                                                        <&postfix_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:tmpt_arr sym level: 9 namespace:1>
                                                                                            <->:-> sym level: 9 namespace:1>
                                                                                            <identifier:axis_size sym level: 9 namespace:0>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <right_brace:} sym level: 9 namespace:1>
                                                                <KW_else:else sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&if_stmt ns:1>
                                                                        <KW_if:if sym level: 9 namespace:1>
                                                                        <(:( sym level: 9 namespace:1>
                                                                        <&equality_expr ns:1>
                                                                            <&postfix_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:tmpt sym level: 9 namespace:1>
                                                                                <->:-> sym level: 9 namespace:1>
                                                                                <identifier:typ_category sym level: 9 namespace:0>
                                                                            <==:== sym level: 9 namespace:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:TP_ENUM sym level: 9 namespace:1>
                                                                        <):) sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <compound_stmt ns:1>
                                                                                <left_brace:{ sym level: 10 namespace:1>
                                                                                <statement ns:1>
                                                                                    <expr_stmt ns:1>
                                                                                        <&assignment_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:res sym level: 10 namespace:1>
                                                                                            <=:= sym level: 10 namespace:1>
                                                                                            <&postfix_expr ns:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <identifier:type_data_size sym level: 10 namespace:1>
                                                                                                <[:[ sym level: 10 namespace:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <identifier:TP_SINT sym level: 10 namespace:1>
                                                                                                <]:] sym level: 10 namespace:1>
                                                                                        <;:; sym level: 10 namespace:1>
                                                                                <right_brace:} sym level: 10 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:res sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:Type_align sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:size_t sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:res sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:size_t sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:spec_res sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:tmpt sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:Type_VEC_get_spec_other sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_and_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 3 namespace:1>
                            <double_ampersand:&& sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:tmpt sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:align_spec sym level: 3 namespace:0>
                                <!=:!= sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <expr_stmt ns:1>
                                <&assignment_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:spec_res sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:tmpt sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:align_spec sym level: 3 namespace:0>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&assignment_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:Type_VEC_get_actual_base_type sym level: 2 namespace:1>
                                <(:( sym level: 2 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 2 namespace:1>
                                <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&equality_expr ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:tmpt sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:typ_category sym level: 3 namespace:0>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:TP_SPEC_NONE sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:tmpt sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:typ_category sym level: 3 namespace:0>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:TP_VOID sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <expr_stmt ns:1>
                                <&assignment_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:res sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                        <KW_else:else sym level: 3 namespace:1>
                        <statement ns:1>
                            <&if_stmt ns:1>
                                <KW_if:if sym level: 4 namespace:1>
                                <(:( sym level: 4 namespace:1>
                                <&logical_or_expr ns:1>
                                    <&primary_expression ns:1>
                                        <(:( sym level: 4 namespace:1>
                                        <&logical_and_expr ns:1>
                                            <&relational_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpt sym level: 4 namespace:1>
                                                    <->:-> sym level: 4 namespace:1>
                                                    <identifier:typ_category sym level: 4 namespace:0>
                                                <>=:>= sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_SCHAR sym level: 4 namespace:1>
                                            <double_ampersand:&& sym level: 4 namespace:1>
                                            <&relational_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpt sym level: 4 namespace:1>
                                                    <->:-> sym level: 4 namespace:1>
                                                    <identifier:typ_category sym level: 4 namespace:0>
                                                <<=:<= sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_LONG_DOUBLE_COMPLEX sym level: 4 namespace:1>
                                        <):) sym level: 4 namespace:1>
                                    <||:|| sym level: 4 namespace:1>
                                    <&equality_expr ns:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 4 namespace:1>
                                            <->:-> sym level: 4 namespace:1>
                                            <identifier:typ_category sym level: 4 namespace:0>
                                        <==:== sym level: 4 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:TP_POINT sym level: 4 namespace:1>
                                <):) sym level: 4 namespace:1>
                                <statement ns:1>
                                    <compound_stmt ns:1>
                                        <left_brace:{ sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <expr_stmt ns:1>
                                                <&assignment_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res sym level: 5 namespace:1>
                                                    <=:= sym level: 5 namespace:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:type_data_size sym level: 5 namespace:1>
                                                        <[:[ sym level: 5 namespace:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:tmpt sym level: 5 namespace:1>
                                                            <->:-> sym level: 5 namespace:1>
                                                            <identifier:typ_category sym level: 5 namespace:0>
                                                        <]:] sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <right_brace:} sym level: 5 namespace:1>
                                <KW_else:else sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&logical_or_expr ns:1>
                                            <&equality_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpt sym level: 5 namespace:1>
                                                    <->:-> sym level: 5 namespace:1>
                                                    <identifier:typ_category sym level: 5 namespace:0>
                                                <==:== sym level: 5 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_UNION_STRUCT sym level: 5 namespace:1>
                                            <||:|| sym level: 5 namespace:1>
                                            <&equality_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpt sym level: 5 namespace:1>
                                                    <->:-> sym level: 5 namespace:1>
                                                    <identifier:typ_category sym level: 5 namespace:0>
                                                <==:== sym level: 5 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_UNION sym level: 5 namespace:1>
                                            <||:|| sym level: 5 namespace:1>
                                            <&equality_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpt sym level: 5 namespace:1>
                                                    <->:-> sym level: 5 namespace:1>
                                                    <identifier:typ_category sym level: 5 namespace:0>
                                                <==:== sym level: 5 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_STRUCT sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <declaration ns:1>
                                                    <&declaration_spec ns:1>
                                                        <&type_spec ns:1>
                                                            <&typedef_name ns:1>
                                                                <identifier:TP_SU sym level: 6 namespace:1>
                                                    <&init_decl_list ns:1>
                                                        <&init_decl ns:1>
                                                            <&declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 6 namespace:1>
                                                                <&direct_declarator ns:1>
                                                                    <identifier:tmpt_su sym level: 6 namespace:1>
                                                            <=:= sym level: 6 namespace:1>
                                                            <&initializer ns:1>
                                                                <&cast_expr ns:1>
                                                                    <(:( sym level: 6 namespace:1>
                                                                    <&type_name ns:1>
                                                                        <&spec_qual_list ns:1>
                                                                            <&type_spec ns:1>
                                                                                <&typedef_name ns:1>
                                                                                    <identifier:TP_SU sym level: 6 namespace:1>
                                                                        <&abstract_declarator ns:1>
                                                                            <&pointer ns:1>
                                                                                <*:* sym level: 6 namespace:1>
                                                                    <):) sym level: 6 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:tmpt sym level: 6 namespace:1>
                                                    <;:; sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <expr_stmt ns:1>
                                                        <&assignment_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:res sym level: 6 namespace:1>
                                                            <=:= sym level: 6 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:tmpt_su sym level: 6 namespace:1>
                                                                <->:-> sym level: 6 namespace:1>
                                                                <identifier:data_align sym level: 6 namespace:0>
                                                        <;:; sym level: 6 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&if_stmt ns:1>
                                                <KW_if:if sym level: 6 namespace:1>
                                                <(:( sym level: 6 namespace:1>
                                                <&equality_expr ns:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:tmpt sym level: 6 namespace:1>
                                                        <->:-> sym level: 6 namespace:1>
                                                        <identifier:typ_category sym level: 6 namespace:0>
                                                    <==:== sym level: 6 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:TP_ENUM sym level: 6 namespace:1>
                                                <):) sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <compound_stmt ns:1>
                                                        <left_brace:{ sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <expr_stmt ns:1>
                                                                <&assignment_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:res sym level: 7 namespace:1>
                                                                    <=:= sym level: 7 namespace:1>
                                                                    <&postfix_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:type_data_size sym level: 7 namespace:1>
                                                                        <[:[ sym level: 7 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:TP_SINT sym level: 7 namespace:1>
                                                                        <]:] sym level: 7 namespace:1>
                                                                <;:; sym level: 7 namespace:1>
                                                        <right_brace:} sym level: 7 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:res sym level: 3 namespace:1>
                            <<:< sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:spec_res sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <expr_stmt ns:1>
                                <&assignment_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:res sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:spec_res sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:res sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_get_spec_other sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:tmpt sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&conditional_expr ns:1>
                                        <&primary_expression ns:1>
                                            <(:( sym level: 2 namespace:1>
                                            <&logical_and_expr ns:1>
                                                <&equality_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:type_vec sym level: 2 namespace:1>
                                                    <!=:!= sym level: 2 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <integer_constant:0 sym level: 2 namespace:1>
                                                <double_ampersand:&& sym level: 2 namespace:1>
                                                <&relational_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <integer_constant:0 sym level: 2 namespace:1>
                                                    <<:< sym level: 2 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 2 namespace:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:type_vec sym level: 2 namespace:1>
                                                            <->:-> sym level: 2 namespace:1>
                                                            <identifier:len sym level: 2 namespace:0>
                                                        <):) sym level: 2 namespace:1>
                                            <):) sym level: 2 namespace:1>
                                        <?:? sym level: 2 namespace:1>
                                        <&primary_expression ns:1>
                                            <(:( sym level: 2 namespace:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:type_vec sym level: 2 namespace:1>
                                                <->:-> sym level: 2 namespace:1>
                                                <identifier:data sym level: 2 namespace:0>
                                                <[:[ sym level: 2 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:0 sym level: 2 namespace:1>
                                                <]:] sym level: 2 namespace:1>
                                            <):) sym level: 2 namespace:1>
                                        <colon:: sym level: 2 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_and_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 3 namespace:1>
                            <double_ampersand:&& sym level: 3 namespace:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:tmpt sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:modifier sym level: 3 namespace:0>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&goto_stmt ns:1>
                                <KW_goto:goto sym level: 3 namespace:1>
                                <identifier:final sym level: 3 namespace:236>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:type_vec sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:len sym level: 3 namespace:0>
                                <):) sym level: 3 namespace:1>
                            <>=:>= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:2 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 4 namespace:1>
                                                <&conditional_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 4 namespace:1>
                                                        <&logical_and_expr ns:1>
                                                            <&equality_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:type_vec sym level: 4 namespace:1>
                                                                <!=:!= sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <integer_constant:0 sym level: 4 namespace:1>
                                                            <double_ampersand:&& sym level: 4 namespace:1>
                                                            <&relational_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <integer_constant:1 sym level: 4 namespace:1>
                                                                <<:< sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <(:( sym level: 4 namespace:1>
                                                                    <&postfix_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:type_vec sym level: 4 namespace:1>
                                                                        <->:-> sym level: 4 namespace:1>
                                                                        <identifier:len sym level: 4 namespace:0>
                                                                    <):) sym level: 4 namespace:1>
                                                        <):) sym level: 4 namespace:1>
                                                    <?:? sym level: 4 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 4 namespace:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:type_vec sym level: 4 namespace:1>
                                                            <->:-> sym level: 4 namespace:1>
                                                            <identifier:data sym level: 4 namespace:0>
                                                            <[:[ sym level: 4 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <integer_constant:1 sym level: 4 namespace:1>
                                                            <]:] sym level: 4 namespace:1>
                                                        <):) sym level: 4 namespace:1>
                                                    <colon:: sym level: 4 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <integer_constant:0 sym level: 4 namespace:1>
                                                <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 5 namespace:1>
                                            <->:-> sym level: 5 namespace:1>
                                            <identifier:modifier sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&goto_stmt ns:1>
                                                <KW_goto:goto sym level: 5 namespace:1>
                                                <identifier:final sym level: 5 namespace:236>
                                                <;:; sym level: 5 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:0 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <labeled_stmt ns:236>
                        <identifier:final sym level: 2 namespace:236>
                        <colon:: sym level: 2 namespace:236>
                        <statement ns:1>
                            <&if_stmt ns:1>
                                <KW_if:if sym level: 3 namespace:1>
                                <(:( sym level: 3 namespace:1>
                                <&unary_expr ns:1>
                                    <!:! sym level: 3 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:tmpt sym level: 3 namespace:1>
                                <):) sym level: 3 namespace:1>
                                <statement ns:1>
                                    <&return_stmt ns:1>
                                        <KW_return:return sym level: 3 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 3 namespace:1>
                                        <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:tmpt sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:align_spec sym level: 3 namespace:0>
                            <||:|| sym level: 3 namespace:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:tmpt sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:func_spec sym level: 3 namespace:0>
                            <||:|| sym level: 3 namespace:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:tmpt sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:typ_stor sym level: 3 namespace:0>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:tmpt sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:0 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_get_qual sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:tmpt sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&conditional_expr ns:1>
                                        <&logical_and_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:type_vec sym level: 2 namespace:1>
                                            <double_ampersand:&& sym level: 2 namespace:1>
                                            <&relational_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:type_vec sym level: 2 namespace:1>
                                                    <->:-> sym level: 2 namespace:1>
                                                    <identifier:len sym level: 2 namespace:0>
                                                <>:> sym level: 2 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:0 sym level: 2 namespace:1>
                                        <?:? sym level: 2 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:type_vec sym level: 2 namespace:1>
                                            <->:-> sym level: 2 namespace:1>
                                            <identifier:data sym level: 2 namespace:0>
                                            <[:[ sym level: 2 namespace:1>
                                            <&additive_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:type_vec sym level: 2 namespace:1>
                                                    <->:-> sym level: 2 namespace:1>
                                                    <identifier:len sym level: 2 namespace:0>
                                                <-:- sym level: 2 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:1 sym level: 2 namespace:1>
                                            <]:] sym level: 2 namespace:1>
                                        <colon:: sym level: 2 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 3 namespace:1>
                            <->:-> sym level: 3 namespace:1>
                            <identifier:modifier sym level: 3 namespace:0>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 5 namespace:1>
                                            <->:-> sym level: 5 namespace:1>
                                            <identifier:type_qual sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&return_stmt ns:1>
                                                <KW_return:return sym level: 5 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:tmpt sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:0 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:Type_composite_qual sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:M_TYPE sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:qual_a sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:M_TYPE sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:qual_b sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_and_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:qual_a sym level: 3 namespace:1>
                            <double_ampersand:&& sym level: 3 namespace:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:qual_b sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:qual_a sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:qual_b sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:qual_b sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:qual_a sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:qual_a sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:modifier sym level: 3 namespace:0>
                            <||:|| sym level: 3 namespace:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:qual_b sym level: 3 namespace:1>
                                    <->:-> sym level: 3 namespace:1>
                                    <identifier:modifier sym level: 3 namespace:0>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&equality_expr ns:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:qual_a sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:typ_stor sym level: 3 namespace:0>
                            <!=:!= sym level: 3 namespace:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:qual_b sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:typ_stor sym level: 3 namespace:0>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <KW_int:int sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:type_qual_cnt sym level: 2 namespace:1>
                                    <[:[ sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:4 sym level: 2 namespace:1>
                                    <]:] sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <KW_int:int sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:func_spec_cnt sym level: 2 namespace:1>
                                    <[:[ sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:2 sym level: 2 namespace:1>
                                    <]:] sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <&typedef_name ns:1>
                                        <identifier:size_t sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <<:< sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:4 sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <++:++ sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:type_qual_cnt sym level: 4 namespace:1>
                                                <[:[ sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:i sym level: 4 namespace:1>
                                                <]:] sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&and_expression ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&and_expression ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:qual_a sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:type_qual sym level: 4 namespace:0>
                                                            <):) sym level: 4 namespace:1>
                                                        <ampersand:& sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0x01 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                                <ampersand:& sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&and_expression ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:qual_b sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:type_qual sym level: 4 namespace:0>
                                                            <):) sym level: 4 namespace:1>
                                                        <ampersand:& sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0x01 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 4 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:qual_a sym level: 4 namespace:1>
                                                    <->:-> sym level: 4 namespace:1>
                                                    <identifier:type_qual sym level: 4 namespace:0>
                                                <):) sym level: 4 namespace:1>
                                            <=:>>= sym level: 4 namespace:1>
                                            <&shift_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:qual_a sym level: 4 namespace:1>
                                                        <->:-> sym level: 4 namespace:1>
                                                        <identifier:type_qual sym level: 4 namespace:0>
                                                    <):) sym level: 4 namespace:1>
                                                <>>:>>= sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:1 sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 4 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:qual_b sym level: 4 namespace:1>
                                                    <->:-> sym level: 4 namespace:1>
                                                    <identifier:type_qual sym level: 4 namespace:0>
                                                <):) sym level: 4 namespace:1>
                                            <=:>>= sym level: 4 namespace:1>
                                            <&shift_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:qual_b sym level: 4 namespace:1>
                                                        <->:-> sym level: 4 namespace:1>
                                                        <identifier:type_qual sym level: 4 namespace:0>
                                                    <):) sym level: 4 namespace:1>
                                                <>>:>>= sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:1 sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <&typedef_name ns:1>
                                        <identifier:size_t sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <<:< sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:2 sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <++:++ sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:func_spec_cnt sym level: 4 namespace:1>
                                                <[:[ sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:i sym level: 4 namespace:1>
                                                <]:] sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&and_expression ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&and_expression ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:qual_a sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:func_spec sym level: 4 namespace:0>
                                                            <):) sym level: 4 namespace:1>
                                                        <ampersand:& sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0x01 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                                <ampersand:& sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&and_expression ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:qual_b sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:func_spec sym level: 4 namespace:0>
                                                            <):) sym level: 4 namespace:1>
                                                        <ampersand:& sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0x01 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 4 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:qual_a sym level: 4 namespace:1>
                                                    <->:-> sym level: 4 namespace:1>
                                                    <identifier:func_spec sym level: 4 namespace:0>
                                                <):) sym level: 4 namespace:1>
                                            <=:>>= sym level: 4 namespace:1>
                                            <&shift_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:qual_a sym level: 4 namespace:1>
                                                        <->:-> sym level: 4 namespace:1>
                                                        <identifier:func_spec sym level: 4 namespace:0>
                                                    <):) sym level: 4 namespace:1>
                                                <>>:>>= sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:1 sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 4 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:qual_b sym level: 4 namespace:1>
                                                    <->:-> sym level: 4 namespace:1>
                                                    <identifier:func_spec sym level: 4 namespace:0>
                                                <):) sym level: 4 namespace:1>
                                            <=:>>= sym level: 4 namespace:1>
                                            <&shift_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:qual_b sym level: 4 namespace:1>
                                                        <->:-> sym level: 4 namespace:1>
                                                        <identifier:func_spec sym level: 4 namespace:0>
                                                    <):) sym level: 4 namespace:1>
                                                <>>:>>= sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:1 sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <KW_int:int sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:align_spec_cnt sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&conditional_expr ns:1>
                                        <&primary_expression ns:1>
                                            <(:( sym level: 2 namespace:1>
                                            <&relational_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 2 namespace:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:qual_a sym level: 2 namespace:1>
                                                        <->:-> sym level: 2 namespace:1>
                                                        <identifier:align_spec sym level: 2 namespace:0>
                                                    <):) sym level: 2 namespace:1>
                                                <>:> sym level: 2 namespace:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 2 namespace:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:qual_b sym level: 2 namespace:1>
                                                        <->:-> sym level: 2 namespace:1>
                                                        <identifier:align_spec sym level: 2 namespace:0>
                                                    <):) sym level: 2 namespace:1>
                                            <):) sym level: 2 namespace:1>
                                        <?:? sym level: 2 namespace:1>
                                        <&primary_expression ns:1>
                                            <(:( sym level: 2 namespace:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:qual_a sym level: 2 namespace:1>
                                                <->:-> sym level: 2 namespace:1>
                                                <identifier:align_spec sym level: 2 namespace:0>
                                            <):) sym level: 2 namespace:1>
                                        <colon:: sym level: 2 namespace:1>
                                        <&primary_expression ns:1>
                                            <(:( sym level: 2 namespace:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:qual_b sym level: 2 namespace:1>
                                                <->:-> sym level: 2 namespace:1>
                                                <identifier:align_spec sym level: 2 namespace:0>
                                            <):) sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:res_type sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:build_modify_type sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:qual_a sym level: 2 namespace:1>
                                        <->:-> sym level: 2 namespace:1>
                                        <identifier:typ_stor sym level: 2 namespace:0>
                                    <,:, sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:type_qual_cnt sym level: 2 namespace:1>
                                    <,:, sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:func_spec_cnt sym level: 2 namespace:1>
                                    <,:, sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:align_spec_cnt sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:res_type sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_get_actual_base_type sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <KW_int:int sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&additive_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 3 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:type_vec sym level: 3 namespace:1>
                                                    <->:-> sym level: 3 namespace:1>
                                                    <identifier:len sym level: 3 namespace:0>
                                                <):) sym level: 3 namespace:1>
                                            <-:- sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:1 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <>=:>= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:0 sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <--:-- sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:M_TYPE sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpt sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&conditional_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&logical_and_expr ns:1>
                                                                <&equality_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:type_vec sym level: 4 namespace:1>
                                                                    <!=:!= sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <integer_constant:0 sym level: 4 namespace:1>
                                                                <double_ampersand:&& sym level: 4 namespace:1>
                                                                <&relational_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <<:< sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 4 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:type_vec sym level: 4 namespace:1>
                                                                            <->:-> sym level: 4 namespace:1>
                                                                            <identifier:len sym level: 4 namespace:0>
                                                                        <):) sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <?:? sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:type_vec sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:data sym level: 4 namespace:0>
                                                                <[:[ sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:i sym level: 4 namespace:1>
                                                                <]:] sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <colon:: sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 5 namespace:1>
                                            <->:-> sym level: 5 namespace:1>
                                            <identifier:modifier sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&continue_stmt ns:1>
                                                        <KW_continue:continue sym level: 6 namespace:1>
                                                        <;:; sym level: 6 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&if_stmt ns:1>
                                                        <KW_if:if sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <&equality_expr ns:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:tmpt sym level: 7 namespace:1>
                                                                <->:-> sym level: 7 namespace:1>
                                                                <identifier:typ_category sym level: 7 namespace:0>
                                                            <==:== sym level: 7 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:TP_SPEC_ATOMIC sym level: 7 namespace:1>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&continue_stmt ns:1>
                                                                        <KW_continue:continue sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                        <KW_else:else sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&return_stmt ns:1>
                                                                        <KW_return:return sym level: 8 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:tmpt sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:0 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_change_actual_base_type sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:M_TYPE sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:tmp_type sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:tmp_type sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <KW_int:int sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&additive_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 3 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:type_vec sym level: 3 namespace:1>
                                                    <->:-> sym level: 3 namespace:1>
                                                    <identifier:len sym level: 3 namespace:0>
                                                <):) sym level: 3 namespace:1>
                                            <-:- sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:1 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <>=:>= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:0 sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <--:-- sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:M_TYPE sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpt sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&conditional_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&logical_and_expr ns:1>
                                                                <&equality_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:type_vec sym level: 4 namespace:1>
                                                                    <!=:!= sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <integer_constant:0 sym level: 4 namespace:1>
                                                                <double_ampersand:&& sym level: 4 namespace:1>
                                                                <&relational_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <<:< sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 4 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:type_vec sym level: 4 namespace:1>
                                                                            <->:-> sym level: 4 namespace:1>
                                                                            <identifier:len sym level: 4 namespace:0>
                                                                        <):) sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <?:? sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:type_vec sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:data sym level: 4 namespace:0>
                                                                <[:[ sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:i sym level: 4 namespace:1>
                                                                <]:] sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <colon:: sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 5 namespace:1>
                                            <->:-> sym level: 5 namespace:1>
                                            <identifier:modifier sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&continue_stmt ns:1>
                                                <KW_continue:continue sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&if_stmt ns:1>
                                                        <KW_if:if sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <&equality_expr ns:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:tmpt sym level: 7 namespace:1>
                                                                <->:-> sym level: 7 namespace:1>
                                                                <identifier:typ_category sym level: 7 namespace:0>
                                                            <==:== sym level: 7 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:TP_SPEC_ATOMIC sym level: 7 namespace:1>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&continue_stmt ns:1>
                                                                        <KW_continue:continue sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                        <KW_else:else sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <expr_stmt ns:1>
                                                                        <&assignment_expr ns:1>
                                                                            <&postfix_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:type_vec sym level: 8 namespace:1>
                                                                                <->:-> sym level: 8 namespace:1>
                                                                                <identifier:data sym level: 8 namespace:0>
                                                                                <[:[ sym level: 8 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:i sym level: 8 namespace:1>
                                                                                <]:] sym level: 8 namespace:1>
                                                                            <=:= sym level: 8 namespace:1>
                                                                            <&cast_expr ns:1>
                                                                                <(:( sym level: 8 namespace:1>
                                                                                <&type_name ns:1>
                                                                                    <&spec_qual_list ns:1>
                                                                                        <&type_spec ns:1>
                                                                                            <KW_void:void sym level: 8 namespace:1>
                                                                                    <&abstract_declarator ns:1>
                                                                                        <&pointer ns:1>
                                                                                            <*:* sym level: 8 namespace:1>
                                                                                <):) sym level: 8 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:tmp_type sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&return_stmt ns:1>
                                                                        <KW_return:return sym level: 8 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <integer_constant:1 sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:0 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_get_Atomic sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <KW_int:int sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&additive_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 3 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:type_vec sym level: 3 namespace:1>
                                                    <->:-> sym level: 3 namespace:1>
                                                    <identifier:len sym level: 3 namespace:0>
                                                <):) sym level: 3 namespace:1>
                                            <-:- sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:1 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <>=:>= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:0 sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <--:-- sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:M_TYPE sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpt sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&conditional_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&logical_and_expr ns:1>
                                                                <&equality_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:type_vec sym level: 4 namespace:1>
                                                                    <!=:!= sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <integer_constant:0 sym level: 4 namespace:1>
                                                                <double_ampersand:&& sym level: 4 namespace:1>
                                                                <&relational_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <<:< sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 4 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:type_vec sym level: 4 namespace:1>
                                                                            <->:-> sym level: 4 namespace:1>
                                                                            <identifier:len sym level: 4 namespace:0>
                                                                        <):) sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <?:? sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:type_vec sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:data sym level: 4 namespace:0>
                                                                <[:[ sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:i sym level: 4 namespace:1>
                                                                <]:] sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <colon:: sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 5 namespace:1>
                                            <->:-> sym level: 5 namespace:1>
                                            <identifier:modifier sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&continue_stmt ns:1>
                                                <KW_continue:continue sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&if_stmt ns:1>
                                                        <KW_if:if sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <&equality_expr ns:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:tmpt sym level: 7 namespace:1>
                                                                <->:-> sym level: 7 namespace:1>
                                                                <identifier:typ_category sym level: 7 namespace:0>
                                                            <==:== sym level: 7 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:TP_SPEC_ATOMIC sym level: 7 namespace:1>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&return_stmt ns:1>
                                                                        <KW_return:return sym level: 8 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:tmpt sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                        <KW_else:else sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&return_stmt ns:1>
                                                                <KW_return:return sym level: 7 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <integer_constant:0 sym level: 7 namespace:1>
                                                                <;:; sym level: 7 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:0 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_get_Atomic_TO sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW__Bool:_Bool sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:is_atomic sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&return_stmt ns:1>
                                        <KW_return:return sym level: 4 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:VEC sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:res_vec sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:VECcpy sym level: 2 namespace:1>
                            <(:( sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:type_vec sym level: 2 namespace:1>
                            <,:, sym level: 2 namespace:1>
                            <&unary_expr ns:1>
                                <ampersand:& sym level: 2 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:res_vec sym level: 2 namespace:1>
                            <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:res_vec sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:is_atomic sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:res_vec sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <KW_int:int sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&additive_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 3 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res_vec sym level: 3 namespace:1>
                                                    <->:-> sym level: 3 namespace:1>
                                                    <identifier:len sym level: 3 namespace:0>
                                                <):) sym level: 3 namespace:1>
                                            <-:- sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:1 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <>=:>= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:0 sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <--:-- sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:M_TYPE sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpt sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&conditional_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&logical_and_expr ns:1>
                                                                <&equality_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:res_vec sym level: 4 namespace:1>
                                                                    <!=:!= sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <integer_constant:0 sym level: 4 namespace:1>
                                                                <double_ampersand:&& sym level: 4 namespace:1>
                                                                <&relational_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <<:< sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 4 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:res_vec sym level: 4 namespace:1>
                                                                            <->:-> sym level: 4 namespace:1>
                                                                            <identifier:len sym level: 4 namespace:0>
                                                                        <):) sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <?:? sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:res_vec sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:data sym level: 4 namespace:0>
                                                                <[:[ sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:i sym level: 4 namespace:1>
                                                                <]:] sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <colon:: sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 5 namespace:1>
                                            <->:-> sym level: 5 namespace:1>
                                            <identifier:modifier sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&continue_stmt ns:1>
                                                <KW_continue:continue sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&if_stmt ns:1>
                                                        <KW_if:if sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <&equality_expr ns:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:tmpt sym level: 7 namespace:1>
                                                                <->:-> sym level: 7 namespace:1>
                                                                <identifier:typ_category sym level: 7 namespace:0>
                                                            <==:== sym level: 7 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:TP_SPEC_ATOMIC sym level: 7 namespace:1>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <expr_stmt ns:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:VECremove sym level: 8 namespace:1>
                                                                            <(:( sym level: 8 namespace:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:res_vec sym level: 8 namespace:1>
                                                                            <,:, sym level: 8 namespace:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:i sym level: 8 namespace:1>
                                                                            <,:, sym level: 8 namespace:1>
                                                                            <&primary_expression ns:1>
                                                                                <(:( sym level: 8 namespace:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:res_vec sym level: 8 namespace:1>
                                                                                    <->:-> sym level: 8 namespace:1>
                                                                                    <identifier:len sym level: 8 namespace:0>
                                                                                <):) sym level: 8 namespace:1>
                                                                            <):) sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&break_stmt ns:1>
                                                                        <KW_break:break sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                        <KW_else:else sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <expr_stmt ns:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:DelVEC sym level: 8 namespace:1>
                                                                            <(:( sym level: 8 namespace:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:res_vec sym level: 8 namespace:1>
                                                                            <):) sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&return_stmt ns:1>
                                                                        <KW_return:return sym level: 8 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <integer_constant:0 sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:res_vec sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_get_Pointer_TO sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW__Bool:_Bool sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:is_pointer sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:VEC sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:res_vec sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:VECcpy sym level: 2 namespace:1>
                            <(:( sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:type_vec sym level: 2 namespace:1>
                            <,:, sym level: 2 namespace:1>
                            <&unary_expr ns:1>
                                <ampersand:& sym level: 2 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:res_vec sym level: 2 namespace:1>
                            <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:res_vec sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:is_pointer sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:res_vec sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <KW_int:int sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&additive_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 3 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res_vec sym level: 3 namespace:1>
                                                    <->:-> sym level: 3 namespace:1>
                                                    <identifier:len sym level: 3 namespace:0>
                                                <):) sym level: 3 namespace:1>
                                            <-:- sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:1 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <>=:>= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:0 sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <--:-- sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:M_TYPE sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpt sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&conditional_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&logical_and_expr ns:1>
                                                                <&equality_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:res_vec sym level: 4 namespace:1>
                                                                    <!=:!= sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <integer_constant:0 sym level: 4 namespace:1>
                                                                <double_ampersand:&& sym level: 4 namespace:1>
                                                                <&relational_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <<:< sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 4 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:res_vec sym level: 4 namespace:1>
                                                                            <->:-> sym level: 4 namespace:1>
                                                                            <identifier:len sym level: 4 namespace:0>
                                                                        <):) sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <?:? sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:res_vec sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:data sym level: 4 namespace:0>
                                                                <[:[ sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:i sym level: 4 namespace:1>
                                                                <]:] sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <colon:: sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 5 namespace:1>
                                            <->:-> sym level: 5 namespace:1>
                                            <identifier:modifier sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&continue_stmt ns:1>
                                                <KW_continue:continue sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&if_stmt ns:1>
                                                        <KW_if:if sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <&equality_expr ns:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:tmpt sym level: 7 namespace:1>
                                                                <->:-> sym level: 7 namespace:1>
                                                                <identifier:typ_category sym level: 7 namespace:0>
                                                            <==:== sym level: 7 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:TP_SPEC_ATOMIC sym level: 7 namespace:1>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&continue_stmt ns:1>
                                                                        <KW_continue:continue sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                        <KW_else:else sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&if_stmt ns:1>
                                                                <KW_if:if sym level: 8 namespace:1>
                                                                <(:( sym level: 8 namespace:1>
                                                                <&equality_expr ns:1>
                                                                    <&postfix_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:tmpt sym level: 8 namespace:1>
                                                                        <->:-> sym level: 8 namespace:1>
                                                                        <identifier:typ_category sym level: 8 namespace:0>
                                                                    <==:== sym level: 8 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:TP_POINT sym level: 8 namespace:1>
                                                                <):) sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <compound_stmt ns:1>
                                                                        <left_brace:{ sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <expr_stmt ns:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:VECremove sym level: 9 namespace:1>
                                                                                    <(:( sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:res_vec sym level: 9 namespace:1>
                                                                                    <,:, sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:i sym level: 9 namespace:1>
                                                                                    <,:, sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <(:( sym level: 9 namespace:1>
                                                                                        <&postfix_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:res_vec sym level: 9 namespace:1>
                                                                                            <->:-> sym level: 9 namespace:1>
                                                                                            <identifier:len sym level: 9 namespace:0>
                                                                                        <):) sym level: 9 namespace:1>
                                                                                    <):) sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <&break_stmt ns:1>
                                                                                <KW_break:break sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <right_brace:} sym level: 9 namespace:1>
                                                                <KW_else:else sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <compound_stmt ns:1>
                                                                        <left_brace:{ sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <expr_stmt ns:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:DelVEC sym level: 9 namespace:1>
                                                                                    <(:( sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:res_vec sym level: 9 namespace:1>
                                                                                    <):) sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <&return_stmt ns:1>
                                                                                <KW_return:return sym level: 9 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <integer_constant:0 sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <right_brace:} sym level: 9 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:res_vec sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_get_Array_TO sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW__Bool:_Bool sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:is_array sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:VEC sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:res_vec sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:VECcpy sym level: 2 namespace:1>
                            <(:( sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:type_vec sym level: 2 namespace:1>
                            <,:, sym level: 2 namespace:1>
                            <&unary_expr ns:1>
                                <ampersand:& sym level: 2 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:res_vec sym level: 2 namespace:1>
                            <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:res_vec sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:is_array sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:res_vec sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <KW_int:int sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&additive_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 3 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res_vec sym level: 3 namespace:1>
                                                    <->:-> sym level: 3 namespace:1>
                                                    <identifier:len sym level: 3 namespace:0>
                                                <):) sym level: 3 namespace:1>
                                            <-:- sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:1 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <>=:>= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:0 sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <--:-- sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:M_TYPE sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpt sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&conditional_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&logical_and_expr ns:1>
                                                                <&equality_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:res_vec sym level: 4 namespace:1>
                                                                    <!=:!= sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <integer_constant:0 sym level: 4 namespace:1>
                                                                <double_ampersand:&& sym level: 4 namespace:1>
                                                                <&relational_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <<:< sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 4 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:res_vec sym level: 4 namespace:1>
                                                                            <->:-> sym level: 4 namespace:1>
                                                                            <identifier:len sym level: 4 namespace:0>
                                                                        <):) sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <?:? sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:res_vec sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:data sym level: 4 namespace:0>
                                                                <[:[ sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:i sym level: 4 namespace:1>
                                                                <]:] sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <colon:: sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 5 namespace:1>
                                            <->:-> sym level: 5 namespace:1>
                                            <identifier:modifier sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&continue_stmt ns:1>
                                                <KW_continue:continue sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&if_stmt ns:1>
                                                        <KW_if:if sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <&equality_expr ns:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:tmpt sym level: 7 namespace:1>
                                                                <->:-> sym level: 7 namespace:1>
                                                                <identifier:typ_category sym level: 7 namespace:0>
                                                            <==:== sym level: 7 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:TP_SPEC_ATOMIC sym level: 7 namespace:1>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&continue_stmt ns:1>
                                                                        <KW_continue:continue sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                        <KW_else:else sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&if_stmt ns:1>
                                                                <KW_if:if sym level: 8 namespace:1>
                                                                <(:( sym level: 8 namespace:1>
                                                                <&equality_expr ns:1>
                                                                    <&postfix_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:tmpt sym level: 8 namespace:1>
                                                                        <->:-> sym level: 8 namespace:1>
                                                                        <identifier:typ_category sym level: 8 namespace:0>
                                                                    <==:== sym level: 8 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:TP_ARRAY sym level: 8 namespace:1>
                                                                <):) sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <compound_stmt ns:1>
                                                                        <left_brace:{ sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <expr_stmt ns:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:VECremove sym level: 9 namespace:1>
                                                                                    <(:( sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:res_vec sym level: 9 namespace:1>
                                                                                    <,:, sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:i sym level: 9 namespace:1>
                                                                                    <,:, sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <(:( sym level: 9 namespace:1>
                                                                                        <&postfix_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:res_vec sym level: 9 namespace:1>
                                                                                            <->:-> sym level: 9 namespace:1>
                                                                                            <identifier:len sym level: 9 namespace:0>
                                                                                        <):) sym level: 9 namespace:1>
                                                                                    <):) sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <&break_stmt ns:1>
                                                                                <KW_break:break sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <right_brace:} sym level: 9 namespace:1>
                                                                <KW_else:else sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <compound_stmt ns:1>
                                                                        <left_brace:{ sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <expr_stmt ns:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:DelVEC sym level: 9 namespace:1>
                                                                                    <(:( sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:res_vec sym level: 9 namespace:1>
                                                                                    <):) sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <&return_stmt ns:1>
                                                                                <KW_return:return sym level: 9 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <integer_constant:0 sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <right_brace:} sym level: 9 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:res_vec sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_get_func_return_type sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW__Bool:_Bool sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:is_function sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:VEC sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:res_vec sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:VECcpy sym level: 2 namespace:1>
                            <(:( sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:type_vec sym level: 2 namespace:1>
                            <,:, sym level: 2 namespace:1>
                            <&unary_expr ns:1>
                                <ampersand:& sym level: 2 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:res_vec sym level: 2 namespace:1>
                            <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:res_vec sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:is_function sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:res_vec sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <KW_int:int sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&additive_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 3 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res_vec sym level: 3 namespace:1>
                                                    <->:-> sym level: 3 namespace:1>
                                                    <identifier:len sym level: 3 namespace:0>
                                                <):) sym level: 3 namespace:1>
                                            <-:- sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:1 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <>=:>= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:0 sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <--:-- sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:M_TYPE sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpt sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&conditional_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&logical_and_expr ns:1>
                                                                <&equality_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:res_vec sym level: 4 namespace:1>
                                                                    <!=:!= sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <integer_constant:0 sym level: 4 namespace:1>
                                                                <double_ampersand:&& sym level: 4 namespace:1>
                                                                <&relational_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <<:< sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 4 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:res_vec sym level: 4 namespace:1>
                                                                            <->:-> sym level: 4 namespace:1>
                                                                            <identifier:len sym level: 4 namespace:0>
                                                                        <):) sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <?:? sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 4 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:res_vec sym level: 4 namespace:1>
                                                                <->:-> sym level: 4 namespace:1>
                                                                <identifier:data sym level: 4 namespace:0>
                                                                <[:[ sym level: 4 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:i sym level: 4 namespace:1>
                                                                <]:] sym level: 4 namespace:1>
                                                            <):) sym level: 4 namespace:1>
                                                        <colon:: sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:tmpt sym level: 5 namespace:1>
                                            <->:-> sym level: 5 namespace:1>
                                            <identifier:modifier sym level: 5 namespace:0>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&continue_stmt ns:1>
                                                <KW_continue:continue sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&if_stmt ns:1>
                                                        <KW_if:if sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <&equality_expr ns:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:tmpt sym level: 7 namespace:1>
                                                                <->:-> sym level: 7 namespace:1>
                                                                <identifier:typ_category sym level: 7 namespace:0>
                                                            <==:== sym level: 7 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:TP_SPEC_ATOMIC sym level: 7 namespace:1>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&continue_stmt ns:1>
                                                                        <KW_continue:continue sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                        <KW_else:else sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&if_stmt ns:1>
                                                                <KW_if:if sym level: 8 namespace:1>
                                                                <(:( sym level: 8 namespace:1>
                                                                <&equality_expr ns:1>
                                                                    <&postfix_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:tmpt sym level: 8 namespace:1>
                                                                        <->:-> sym level: 8 namespace:1>
                                                                        <identifier:typ_category sym level: 8 namespace:0>
                                                                    <==:== sym level: 8 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:TP_FUNCTION sym level: 8 namespace:1>
                                                                <):) sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <compound_stmt ns:1>
                                                                        <left_brace:{ sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <expr_stmt ns:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:VECremove sym level: 9 namespace:1>
                                                                                    <(:( sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:res_vec sym level: 9 namespace:1>
                                                                                    <,:, sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:i sym level: 9 namespace:1>
                                                                                    <,:, sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <(:( sym level: 9 namespace:1>
                                                                                        <&postfix_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:res_vec sym level: 9 namespace:1>
                                                                                            <->:-> sym level: 9 namespace:1>
                                                                                            <identifier:len sym level: 9 namespace:0>
                                                                                        <):) sym level: 9 namespace:1>
                                                                                    <):) sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <&break_stmt ns:1>
                                                                                <KW_break:break sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <right_brace:} sym level: 9 namespace:1>
                                                                <KW_else:else sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <compound_stmt ns:1>
                                                                        <left_brace:{ sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <expr_stmt ns:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:DelVEC sym level: 9 namespace:1>
                                                                                    <(:( sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:res_vec sym level: 9 namespace:1>
                                                                                    <):) sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <&return_stmt ns:1>
                                                                                <KW_return:return sym level: 9 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <integer_constant:0 sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <right_brace:} sym level: 9 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:res_vec sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_unqualifier sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW__Bool:_Bool sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:is_qual sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:VEC sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:res_vec sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:VECcpy sym level: 2 namespace:1>
                            <(:( sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:type_vec sym level: 2 namespace:1>
                            <,:, sym level: 2 namespace:1>
                            <&unary_expr ns:1>
                                <ampersand:& sym level: 2 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:res_vec sym level: 2 namespace:1>
                            <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:is_qual sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:res_vec sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:res_vec sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:tmpt sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&conditional_expr ns:1>
                                        <&logical_and_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:res_vec sym level: 2 namespace:1>
                                            <double_ampersand:&& sym level: 2 namespace:1>
                                            <&relational_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res_vec sym level: 2 namespace:1>
                                                    <->:-> sym level: 2 namespace:1>
                                                    <identifier:len sym level: 2 namespace:0>
                                                <>:> sym level: 2 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:0 sym level: 2 namespace:1>
                                        <?:? sym level: 2 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:res_vec sym level: 2 namespace:1>
                                            <->:-> sym level: 2 namespace:1>
                                            <identifier:data sym level: 2 namespace:0>
                                            <[:[ sym level: 2 namespace:1>
                                            <&additive_expr ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res_vec sym level: 2 namespace:1>
                                                    <->:-> sym level: 2 namespace:1>
                                                    <identifier:len sym level: 2 namespace:0>
                                                <-:- sym level: 2 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:1 sym level: 2 namespace:1>
                                            <]:] sym level: 2 namespace:1>
                                        <colon:: sym level: 2 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:tmpt sym level: 3 namespace:1>
                            <->:-> sym level: 3 namespace:1>
                            <identifier:modifier sym level: 3 namespace:0>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:VECpopback sym level: 4 namespace:1>
                                            <(:( sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:res_vec sym level: 4 namespace:1>
                                            <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:res_vec sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:lvalue_convertion sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:tmp_type_vec sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:tmp_type_vec sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:tmp_type_vec sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:len sym level: 3 namespace:0>
                                    <):) sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:VEC sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:res sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:Type_VEC_unqualifier sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:tmp_type_vec sym level: 2 namespace:1>
                                    <,:, sym level: 2 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:Type_VEC_get_qual sym level: 2 namespace:1>
                                        <(:( sym level: 2 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:tmp_type_vec sym level: 2 namespace:1>
                                        <):) sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:res sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:VEC sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:oldres sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <identifier:res sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&assignment_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:res sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:Type_VEC_get_Atomic_TO sym level: 2 namespace:1>
                                <(:( sym level: 2 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:res sym level: 2 namespace:1>
                                <,:, sym level: 2 namespace:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:Type_VEC_get_Atomic sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:res sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                                <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&equality_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:oldres sym level: 3 namespace:1>
                            <!=:!= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:res sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <expr_stmt ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:DelVEC sym level: 3 namespace:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:oldres sym level: 3 namespace:1>
                                    <):) sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:tmpt sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:Type_VEC_get_actual_base_type sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:res sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&equality_expr ns:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:tmpt sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:typ_category sym level: 3 namespace:0>
                            <==:== sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:TP_ARRAY sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:oldres sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:res sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:res sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:Type_VEC_get_Array_TO sym level: 4 namespace:1>
                                                <(:( sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:res sym level: 4 namespace:1>
                                                <,:, sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:1 sym level: 4 namespace:1>
                                                <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&equality_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:oldres sym level: 5 namespace:1>
                                            <!=:!= sym level: 5 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:res sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <expr_stmt ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:DelVEC sym level: 5 namespace:1>
                                                    <(:( sym level: 5 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:oldres sym level: 5 namespace:1>
                                                    <):) sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:M_TYPE sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:pointer sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:build_base_type sym level: 4 namespace:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:TP_POINT sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:VECinsert sym level: 4 namespace:1>
                                            <(:( sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:res sym level: 4 namespace:1>
                                            <,:, sym level: 4 namespace:1>
                                            <&cast_expr ns:1>
                                                <(:( sym level: 4 namespace:1>
                                                <&type_name ns:1>
                                                    <&spec_qual_list ns:1>
                                                        <&type_spec ns:1>
                                                            <KW_void:void sym level: 4 namespace:1>
                                                    <&abstract_declarator ns:1>
                                                        <&pointer ns:1>
                                                            <*:* sym level: 4 namespace:1>
                                                <):) sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:pointer sym level: 4 namespace:1>
                                            <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                        <KW_else:else sym level: 3 namespace:1>
                        <statement ns:1>
                            <&if_stmt ns:1>
                                <KW_if:if sym level: 4 namespace:1>
                                <(:( sym level: 4 namespace:1>
                                <&equality_expr ns:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:tmpt sym level: 4 namespace:1>
                                        <->:-> sym level: 4 namespace:1>
                                        <identifier:typ_category sym level: 4 namespace:0>
                                    <==:== sym level: 4 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:TP_FUNCTION sym level: 4 namespace:1>
                                <):) sym level: 4 namespace:1>
                                <statement ns:1>
                                    <compound_stmt ns:1>
                                        <left_brace:{ sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <expr_stmt ns:1>
                                                <&assignment_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:oldres sym level: 5 namespace:1>
                                                    <=:= sym level: 5 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <expr_stmt ns:1>
                                                <&assignment_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res sym level: 5 namespace:1>
                                                    <=:= sym level: 5 namespace:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:Type_VEC_get_func_return_type sym level: 5 namespace:1>
                                                        <(:( sym level: 5 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:res sym level: 5 namespace:1>
                                                        <,:, sym level: 5 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:1 sym level: 5 namespace:1>
                                                        <):) sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&if_stmt ns:1>
                                                <KW_if:if sym level: 6 namespace:1>
                                                <(:( sym level: 6 namespace:1>
                                                <&equality_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:oldres sym level: 6 namespace:1>
                                                    <!=:!= sym level: 6 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res sym level: 6 namespace:1>
                                                <):) sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <expr_stmt ns:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:DelVEC sym level: 6 namespace:1>
                                                            <(:( sym level: 6 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:oldres sym level: 6 namespace:1>
                                                            <):) sym level: 6 namespace:1>
                                                        <;:; sym level: 6 namespace:1>
                                        <declaration ns:1>
                                            <&declaration_spec ns:1>
                                                <&type_spec ns:1>
                                                    <&typedef_name ns:1>
                                                        <identifier:M_TYPE sym level: 5 namespace:1>
                                            <&init_decl_list ns:1>
                                                <&init_decl ns:1>
                                                    <&declarator ns:1>
                                                        <&pointer ns:1>
                                                            <*:* sym level: 5 namespace:1>
                                                        <&direct_declarator ns:1>
                                                            <identifier:pointer sym level: 5 namespace:1>
                                                    <=:= sym level: 5 namespace:1>
                                                    <&initializer ns:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:build_base_type sym level: 5 namespace:1>
                                                            <(:( sym level: 5 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:TP_POINT sym level: 5 namespace:1>
                                                            <):) sym level: 5 namespace:1>
                                            <;:; sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <expr_stmt ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:VECinsert sym level: 5 namespace:1>
                                                    <(:( sym level: 5 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res sym level: 5 namespace:1>
                                                    <,:, sym level: 5 namespace:1>
                                                    <&cast_expr ns:1>
                                                        <(:( sym level: 5 namespace:1>
                                                        <&type_name ns:1>
                                                            <&spec_qual_list ns:1>
                                                                <&type_spec ns:1>
                                                                    <KW_void:void sym level: 5 namespace:1>
                                                            <&abstract_declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 5 namespace:1>
                                                        <):) sym level: 5 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:pointer sym level: 5 namespace:1>
                                                    <):) sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <right_brace:} sym level: 5 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:res sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:compatible_types sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec_a sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec_b sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:1 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:composite_types sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec_a sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec_b sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW__Bool:_Bool sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:compatible_type sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:VEC sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:tmpv sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:VECcpy sym level: 2 namespace:1>
                            <(:( sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:type_vec_a sym level: 2 namespace:1>
                            <,:, sym level: 2 namespace:1>
                            <&unary_expr ns:1>
                                <ampersand:& sym level: 2 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:tmpv sym level: 2 namespace:1>
                            <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:tmpv sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:M_TYPE sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:usual_arith_conversion sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:M_TYPE sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:operand_a sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:M_TYPE sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:operand_b sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:operand_a sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:operand_b sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&enum_spec ns:1>
                                <KW_enum:enum sym level: 2 namespace:1>
                                <identifier:TP_CATEGORY sym level: 2 namespace:2>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:type_a sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <(:( sym level: 2 namespace:1>
                                        <&unary_expr ns:1>
                                            <*:* sym level: 2 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:operand_a sym level: 2 namespace:1>
                                        <):) sym level: 2 namespace:1>
                                    <->:-> sym level: 2 namespace:1>
                                    <identifier:typ_category sym level: 2 namespace:0>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:type_b sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <(:( sym level: 2 namespace:1>
                                        <&unary_expr ns:1>
                                            <*:* sym level: 2 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:operand_b sym level: 2 namespace:1>
                                        <):) sym level: 2 namespace:1>
                                    <->:-> sym level: 2 namespace:1>
                                    <identifier:typ_category sym level: 2 namespace:0>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&unary_expr ns:1>
                                    <!:! sym level: 3 namespace:1>
                                    <&primary_expression ns:1>
                                        <(:( sym level: 3 namespace:1>
                                        <&logical_or_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 3 namespace:1>
                                                <&logical_and_expr ns:1>
                                                    <&relational_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:type_a sym level: 3 namespace:1>
                                                        <>=:>= sym level: 3 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:TP_SCHAR sym level: 3 namespace:1>
                                                    <double_ampersand:&& sym level: 3 namespace:1>
                                                    <&relational_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:type_a sym level: 3 namespace:1>
                                                        <<=:<= sym level: 3 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:TP_LONG_DOUBLE_COMPLEX sym level: 3 namespace:1>
                                                <):) sym level: 3 namespace:1>
                                            <||:|| sym level: 3 namespace:1>
                                            <&equality_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:type_a sym level: 3 namespace:1>
                                                <==:== sym level: 3 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_NULL_POINTER_CONSTANT sym level: 3 namespace:1>
                                        <):) sym level: 3 namespace:1>
                                <):) sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&unary_expr ns:1>
                                    <!:! sym level: 3 namespace:1>
                                    <&primary_expression ns:1>
                                        <(:( sym level: 3 namespace:1>
                                        <&logical_or_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 3 namespace:1>
                                                <&logical_and_expr ns:1>
                                                    <&relational_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:type_b sym level: 3 namespace:1>
                                                        <>=:>= sym level: 3 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:TP_SCHAR sym level: 3 namespace:1>
                                                    <double_ampersand:&& sym level: 3 namespace:1>
                                                    <&relational_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:type_b sym level: 3 namespace:1>
                                                        <<=:<= sym level: 3 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:TP_LONG_DOUBLE_COMPLEX sym level: 3 namespace:1>
                                                <):) sym level: 3 namespace:1>
                                            <||:|| sym level: 3 namespace:1>
                                            <&equality_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:type_b sym level: 3 namespace:1>
                                                <==:== sym level: 3 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_NULL_POINTER_CONSTANT sym level: 3 namespace:1>
                                        <):) sym level: 3 namespace:1>
                                <):) sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:type_a sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:TP_LONG_DOUBLE sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:type_b sym level: 3 namespace:1>
                                <==:== sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:TP_LONG_DOUBLE sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&return_stmt ns:1>
                                        <KW_return:return sym level: 4 namespace:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:build_base_type sym level: 4 namespace:1>
                                            <(:( sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_LONG_DOUBLE sym level: 4 namespace:1>
                                            <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                        <KW_else:else sym level: 3 namespace:1>
                        <statement ns:1>
                            <&if_stmt ns:1>
                                <KW_if:if sym level: 4 namespace:1>
                                <(:( sym level: 4 namespace:1>
                                <&logical_or_expr ns:1>
                                    <&equality_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_a sym level: 4 namespace:1>
                                        <==:== sym level: 4 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:TP_DOUBLE sym level: 4 namespace:1>
                                    <||:|| sym level: 4 namespace:1>
                                    <&equality_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_b sym level: 4 namespace:1>
                                        <==:== sym level: 4 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:TP_DOUBLE sym level: 4 namespace:1>
                                <):) sym level: 4 namespace:1>
                                <statement ns:1>
                                    <compound_stmt ns:1>
                                        <left_brace:{ sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&return_stmt ns:1>
                                                <KW_return:return sym level: 5 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:build_base_type sym level: 5 namespace:1>
                                                    <(:( sym level: 5 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:TP_DOUBLE sym level: 5 namespace:1>
                                                    <):) sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <right_brace:} sym level: 5 namespace:1>
                                <KW_else:else sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&logical_or_expr ns:1>
                                            <&equality_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:type_a sym level: 5 namespace:1>
                                                <==:== sym level: 5 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_FLOAT sym level: 5 namespace:1>
                                            <||:|| sym level: 5 namespace:1>
                                            <&equality_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:type_b sym level: 5 namespace:1>
                                                <==:== sym level: 5 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_FLOAT sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&return_stmt ns:1>
                                                        <KW_return:return sym level: 6 namespace:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:build_base_type sym level: 6 namespace:1>
                                                            <(:( sym level: 6 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:TP_FLOAT sym level: 6 namespace:1>
                                                            <):) sym level: 6 namespace:1>
                                                        <;:; sym level: 6 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_and_expr ns:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&logical_or_expr ns:1>
                                    <&primary_expression ns:1>
                                        <(:( sym level: 3 namespace:1>
                                        <&logical_and_expr ns:1>
                                            <&relational_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:type_a sym level: 3 namespace:1>
                                                <>=:>= sym level: 3 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_SCHAR sym level: 3 namespace:1>
                                            <double_ampersand:&& sym level: 3 namespace:1>
                                            <&relational_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:type_a sym level: 3 namespace:1>
                                                <<=:<= sym level: 3 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_USLONGLONG sym level: 3 namespace:1>
                                        <):) sym level: 3 namespace:1>
                                    <||:|| sym level: 3 namespace:1>
                                    <&equality_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_a sym level: 3 namespace:1>
                                        <==:== sym level: 3 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:TP_BOOL sym level: 3 namespace:1>
                                    <||:|| sym level: 3 namespace:1>
                                    <&equality_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_a sym level: 3 namespace:1>
                                        <==:== sym level: 3 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:TP_NULL_POINTER_CONSTANT sym level: 3 namespace:1>
                                <):) sym level: 3 namespace:1>
                            <double_ampersand:&& sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <(:( sym level: 3 namespace:1>
                                <&logical_or_expr ns:1>
                                    <&primary_expression ns:1>
                                        <(:( sym level: 3 namespace:1>
                                        <&logical_and_expr ns:1>
                                            <&relational_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:type_b sym level: 3 namespace:1>
                                                <>=:>= sym level: 3 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_SCHAR sym level: 3 namespace:1>
                                            <double_ampersand:&& sym level: 3 namespace:1>
                                            <&relational_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:type_b sym level: 3 namespace:1>
                                                <<=:<= sym level: 3 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:TP_USLONGLONG sym level: 3 namespace:1>
                                        <):) sym level: 3 namespace:1>
                                    <||:|| sym level: 3 namespace:1>
                                    <&equality_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_b sym level: 3 namespace:1>
                                        <==:== sym level: 3 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:TP_BOOL sym level: 3 namespace:1>
                                    <||:|| sym level: 3 namespace:1>
                                    <&equality_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:type_b sym level: 3 namespace:1>
                                        <==:== sym level: 3 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:TP_NULL_POINTER_CONSTANT sym level: 3 namespace:1>
                                <):) sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:integer_promotion sym level: 4 namespace:1>
                                            <(:( sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:operand_a sym level: 4 namespace:1>
                                            <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:integer_promotion sym level: 4 namespace:1>
                                            <(:( sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:operand_b sym level: 4 namespace:1>
                                            <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:type_a sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&unary_expr ns:1>
                                                        <*:* sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:operand_a sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                                <->:-> sym level: 4 namespace:1>
                                                <identifier:typ_category sym level: 4 namespace:0>
                                        <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:type_b sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&unary_expr ns:1>
                                                        <*:* sym level: 4 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:operand_b sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                                <->:-> sym level: 4 namespace:1>
                                                <identifier:typ_category sym level: 4 namespace:0>
                                        <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&equality_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:type_a sym level: 5 namespace:1>
                                            <==:== sym level: 5 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:type_b sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&return_stmt ns:1>
                                                <KW_return:return sym level: 5 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:build_base_type sym level: 5 namespace:1>
                                                    <(:( sym level: 5 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:type_a sym level: 5 namespace:1>
                                                    <):) sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&if_stmt ns:1>
                                                <KW_if:if sym level: 6 namespace:1>
                                                <(:( sym level: 6 namespace:1>
                                                <&equality_expr ns:1>
                                                    <&multi_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:type_a sym level: 6 namespace:1>
                                                        <%:% sym level: 6 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:2 sym level: 6 namespace:1>
                                                    <==:== sym level: 6 namespace:1>
                                                    <&multi_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:type_b sym level: 6 namespace:1>
                                                        <%:% sym level: 6 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:2 sym level: 6 namespace:1>
                                                <):) sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <compound_stmt ns:1>
                                                        <left_brace:{ sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&if_stmt ns:1>
                                                                <KW_if:if sym level: 8 namespace:1>
                                                                <(:( sym level: 8 namespace:1>
                                                                <&relational_expr ns:1>
                                                                    <&postfix_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:int_rank sym level: 8 namespace:1>
                                                                        <[:[ sym level: 8 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:type_a sym level: 8 namespace:1>
                                                                        <]:] sym level: 8 namespace:1>
                                                                    <<:< sym level: 8 namespace:1>
                                                                    <&postfix_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:int_rank sym level: 8 namespace:1>
                                                                        <[:[ sym level: 8 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:type_b sym level: 8 namespace:1>
                                                                        <]:] sym level: 8 namespace:1>
                                                                <):) sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <compound_stmt ns:1>
                                                                        <left_brace:{ sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <expr_stmt ns:1>
                                                                                <&assignment_expr ns:1>
                                                                                    <&unary_expr ns:1>
                                                                                        <*:* sym level: 9 namespace:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <identifier:operand_a sym level: 9 namespace:1>
                                                                                    <=:= sym level: 9 namespace:1>
                                                                                    <&postfix_expr ns:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <identifier:build_base_type sym level: 9 namespace:1>
                                                                                        <(:( sym level: 9 namespace:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <identifier:type_b sym level: 9 namespace:1>
                                                                                        <):) sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <&return_stmt ns:1>
                                                                                <KW_return:return sym level: 9 namespace:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:build_base_type sym level: 9 namespace:1>
                                                                                    <(:( sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:type_b sym level: 9 namespace:1>
                                                                                    <):) sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <right_brace:} sym level: 9 namespace:1>
                                                                <KW_else:else sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&if_stmt ns:1>
                                                                        <KW_if:if sym level: 9 namespace:1>
                                                                        <(:( sym level: 9 namespace:1>
                                                                        <&relational_expr ns:1>
                                                                            <&postfix_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:int_rank sym level: 9 namespace:1>
                                                                                <[:[ sym level: 9 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:type_a sym level: 9 namespace:1>
                                                                                <]:] sym level: 9 namespace:1>
                                                                            <>:> sym level: 9 namespace:1>
                                                                            <&postfix_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:int_rank sym level: 9 namespace:1>
                                                                                <[:[ sym level: 9 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:type_b sym level: 9 namespace:1>
                                                                                <]:] sym level: 9 namespace:1>
                                                                        <):) sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <compound_stmt ns:1>
                                                                                <left_brace:{ sym level: 10 namespace:1>
                                                                                <statement ns:1>
                                                                                    <expr_stmt ns:1>
                                                                                        <&assignment_expr ns:1>
                                                                                            <&unary_expr ns:1>
                                                                                                <*:* sym level: 10 namespace:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <identifier:operand_b sym level: 10 namespace:1>
                                                                                            <=:= sym level: 10 namespace:1>
                                                                                            <&postfix_expr ns:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <identifier:build_base_type sym level: 10 namespace:1>
                                                                                                <(:( sym level: 10 namespace:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <identifier:type_a sym level: 10 namespace:1>
                                                                                                <):) sym level: 10 namespace:1>
                                                                                        <;:; sym level: 10 namespace:1>
                                                                                <statement ns:1>
                                                                                    <&return_stmt ns:1>
                                                                                        <KW_return:return sym level: 10 namespace:1>
                                                                                        <&postfix_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:build_base_type sym level: 10 namespace:1>
                                                                                            <(:( sym level: 10 namespace:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:type_a sym level: 10 namespace:1>
                                                                                            <):) sym level: 10 namespace:1>
                                                                                        <;:; sym level: 10 namespace:1>
                                                                                <right_brace:} sym level: 10 namespace:1>
                                                        <right_brace:} sym level: 7 namespace:1>
                                                <KW_else:else sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <compound_stmt ns:1>
                                                        <left_brace:{ sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&if_stmt ns:1>
                                                                <KW_if:if sym level: 8 namespace:1>
                                                                <(:( sym level: 8 namespace:1>
                                                                <&logical_and_expr ns:1>
                                                                    <&relational_expr ns:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:int_rank sym level: 8 namespace:1>
                                                                            <[:[ sym level: 8 namespace:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:type_a sym level: 8 namespace:1>
                                                                            <]:] sym level: 8 namespace:1>
                                                                        <<=:<= sym level: 8 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:int_rank sym level: 8 namespace:1>
                                                                            <[:[ sym level: 8 namespace:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:type_b sym level: 8 namespace:1>
                                                                            <]:] sym level: 8 namespace:1>
                                                                    <double_ampersand:&& sym level: 8 namespace:1>
                                                                    <&equality_expr ns:1>
                                                                        <&multi_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:type_b sym level: 8 namespace:1>
                                                                            <%:% sym level: 8 namespace:1>
                                                                            <&primary_expression ns:1>
                                                                                <integer_constant:2 sym level: 8 namespace:1>
                                                                        <==:== sym level: 8 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <integer_constant:1 sym level: 8 namespace:1>
                                                                <):) sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <compound_stmt ns:1>
                                                                        <left_brace:{ sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <expr_stmt ns:1>
                                                                                <&assignment_expr ns:1>
                                                                                    <&unary_expr ns:1>
                                                                                        <*:* sym level: 9 namespace:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <identifier:operand_a sym level: 9 namespace:1>
                                                                                    <=:= sym level: 9 namespace:1>
                                                                                    <&postfix_expr ns:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <identifier:build_base_type sym level: 9 namespace:1>
                                                                                        <(:( sym level: 9 namespace:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <identifier:type_b sym level: 9 namespace:1>
                                                                                        <):) sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <&return_stmt ns:1>
                                                                                <KW_return:return sym level: 9 namespace:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:build_base_type sym level: 9 namespace:1>
                                                                                    <(:( sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:type_b sym level: 9 namespace:1>
                                                                                    <):) sym level: 9 namespace:1>
                                                                                <;:; sym level: 9 namespace:1>
                                                                        <right_brace:} sym level: 9 namespace:1>
                                                                <KW_else:else sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <&if_stmt ns:1>
                                                                        <KW_if:if sym level: 9 namespace:1>
                                                                        <(:( sym level: 9 namespace:1>
                                                                        <&logical_and_expr ns:1>
                                                                            <&relational_expr ns:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:int_rank sym level: 9 namespace:1>
                                                                                    <[:[ sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:type_a sym level: 9 namespace:1>
                                                                                    <]:] sym level: 9 namespace:1>
                                                                                <>=:>= sym level: 9 namespace:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:int_rank sym level: 9 namespace:1>
                                                                                    <[:[ sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:type_b sym level: 9 namespace:1>
                                                                                    <]:] sym level: 9 namespace:1>
                                                                            <double_ampersand:&& sym level: 9 namespace:1>
                                                                            <&equality_expr ns:1>
                                                                                <&multi_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:type_a sym level: 9 namespace:1>
                                                                                    <%:% sym level: 9 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <integer_constant:2 sym level: 9 namespace:1>
                                                                                <==:== sym level: 9 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <integer_constant:1 sym level: 9 namespace:1>
                                                                        <):) sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <compound_stmt ns:1>
                                                                                <left_brace:{ sym level: 10 namespace:1>
                                                                                <statement ns:1>
                                                                                    <expr_stmt ns:1>
                                                                                        <&assignment_expr ns:1>
                                                                                            <&unary_expr ns:1>
                                                                                                <*:* sym level: 10 namespace:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <identifier:operand_b sym level: 10 namespace:1>
                                                                                            <=:= sym level: 10 namespace:1>
                                                                                            <&postfix_expr ns:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <identifier:build_base_type sym level: 10 namespace:1>
                                                                                                <(:( sym level: 10 namespace:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <identifier:type_a sym level: 10 namespace:1>
                                                                                                <):) sym level: 10 namespace:1>
                                                                                        <;:; sym level: 10 namespace:1>
                                                                                <statement ns:1>
                                                                                    <&return_stmt ns:1>
                                                                                        <KW_return:return sym level: 10 namespace:1>
                                                                                        <&postfix_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:build_base_type sym level: 10 namespace:1>
                                                                                            <(:( sym level: 10 namespace:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:type_a sym level: 10 namespace:1>
                                                                                            <):) sym level: 10 namespace:1>
                                                                                        <;:; sym level: 10 namespace:1>
                                                                                <right_brace:} sym level: 10 namespace:1>
                                                                        <KW_else:else sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <&if_stmt ns:1>
                                                                                <KW_if:if sym level: 10 namespace:1>
                                                                                <(:( sym level: 10 namespace:1>
                                                                                <&logical_and_expr ns:1>
                                                                                    <&relational_expr ns:1>
                                                                                        <&postfix_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:int_rank sym level: 10 namespace:1>
                                                                                            <[:[ sym level: 10 namespace:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:type_a sym level: 10 namespace:1>
                                                                                            <]:] sym level: 10 namespace:1>
                                                                                        <<:< sym level: 10 namespace:1>
                                                                                        <&postfix_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:int_rank sym level: 10 namespace:1>
                                                                                            <[:[ sym level: 10 namespace:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:type_b sym level: 10 namespace:1>
                                                                                            <]:] sym level: 10 namespace:1>
                                                                                    <double_ampersand:&& sym level: 10 namespace:1>
                                                                                    <&relational_expr ns:1>
                                                                                        <&postfix_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:type_data_size sym level: 10 namespace:1>
                                                                                            <[:[ sym level: 10 namespace:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:type_b sym level: 10 namespace:1>
                                                                                            <]:] sym level: 10 namespace:1>
                                                                                        <>:> sym level: 10 namespace:1>
                                                                                        <&postfix_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:type_data_size sym level: 10 namespace:1>
                                                                                            <[:[ sym level: 10 namespace:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:type_a sym level: 10 namespace:1>
                                                                                            <]:] sym level: 10 namespace:1>
                                                                                <):) sym level: 10 namespace:1>
                                                                                <statement ns:1>
                                                                                    <compound_stmt ns:1>
                                                                                        <left_brace:{ sym level: 11 namespace:1>
                                                                                        <statement ns:1>
                                                                                            <expr_stmt ns:1>
                                                                                                <&assignment_expr ns:1>
                                                                                                    <&unary_expr ns:1>
                                                                                                        <*:* sym level: 11 namespace:1>
                                                                                                        <&primary_expression ns:1>
                                                                                                            <identifier:operand_a sym level: 11 namespace:1>
                                                                                                    <=:= sym level: 11 namespace:1>
                                                                                                    <&postfix_expr ns:1>
                                                                                                        <&primary_expression ns:1>
                                                                                                            <identifier:build_base_type sym level: 11 namespace:1>
                                                                                                        <(:( sym level: 11 namespace:1>
                                                                                                        <&primary_expression ns:1>
                                                                                                            <identifier:type_b sym level: 11 namespace:1>
                                                                                                        <):) sym level: 11 namespace:1>
                                                                                                <;:; sym level: 11 namespace:1>
                                                                                        <statement ns:1>
                                                                                            <&return_stmt ns:1>
                                                                                                <KW_return:return sym level: 11 namespace:1>
                                                                                                <&postfix_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:build_base_type sym level: 11 namespace:1>
                                                                                                    <(:( sym level: 11 namespace:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:type_b sym level: 11 namespace:1>
                                                                                                    <):) sym level: 11 namespace:1>
                                                                                                <;:; sym level: 11 namespace:1>
                                                                                        <right_brace:} sym level: 11 namespace:1>
                                                                                <KW_else:else sym level: 10 namespace:1>
                                                                                <statement ns:1>
                                                                                    <&if_stmt ns:1>
                                                                                        <KW_if:if sym level: 11 namespace:1>
                                                                                        <(:( sym level: 11 namespace:1>
                                                                                        <&logical_and_expr ns:1>
                                                                                            <&relational_expr ns:1>
                                                                                                <&postfix_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:int_rank sym level: 11 namespace:1>
                                                                                                    <[:[ sym level: 11 namespace:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:type_a sym level: 11 namespace:1>
                                                                                                    <]:] sym level: 11 namespace:1>
                                                                                                <>:> sym level: 11 namespace:1>
                                                                                                <&postfix_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:int_rank sym level: 11 namespace:1>
                                                                                                    <[:[ sym level: 11 namespace:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:type_b sym level: 11 namespace:1>
                                                                                                    <]:] sym level: 11 namespace:1>
                                                                                            <double_ampersand:&& sym level: 11 namespace:1>
                                                                                            <&relational_expr ns:1>
                                                                                                <&postfix_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:type_data_size sym level: 11 namespace:1>
                                                                                                    <[:[ sym level: 11 namespace:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:type_b sym level: 11 namespace:1>
                                                                                                    <]:] sym level: 11 namespace:1>
                                                                                                <<:< sym level: 11 namespace:1>
                                                                                                <&postfix_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:type_data_size sym level: 11 namespace:1>
                                                                                                    <[:[ sym level: 11 namespace:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:type_a sym level: 11 namespace:1>
                                                                                                    <]:] sym level: 11 namespace:1>
                                                                                        <):) sym level: 11 namespace:1>
                                                                                        <statement ns:1>
                                                                                            <compound_stmt ns:1>
                                                                                                <left_brace:{ sym level: 12 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <expr_stmt ns:1>
                                                                                                        <&assignment_expr ns:1>
                                                                                                            <&unary_expr ns:1>
                                                                                                                <*:* sym level: 12 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:operand_b sym level: 12 namespace:1>
                                                                                                            <=:= sym level: 12 namespace:1>
                                                                                                            <&postfix_expr ns:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:build_base_type sym level: 12 namespace:1>
                                                                                                                <(:( sym level: 12 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:type_a sym level: 12 namespace:1>
                                                                                                                <):) sym level: 12 namespace:1>
                                                                                                        <;:; sym level: 12 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <&return_stmt ns:1>
                                                                                                        <KW_return:return sym level: 12 namespace:1>
                                                                                                        <&postfix_expr ns:1>
                                                                                                            <&primary_expression ns:1>
                                                                                                                <identifier:build_base_type sym level: 12 namespace:1>
                                                                                                            <(:( sym level: 12 namespace:1>
                                                                                                            <&primary_expression ns:1>
                                                                                                                <identifier:type_a sym level: 12 namespace:1>
                                                                                                            <):) sym level: 12 namespace:1>
                                                                                                        <;:; sym level: 12 namespace:1>
                                                                                                <right_brace:} sym level: 12 namespace:1>
                                                                                        <KW_else:else sym level: 11 namespace:1>
                                                                                        <statement ns:1>
                                                                                            <compound_stmt ns:1>
                                                                                                <left_brace:{ sym level: 12 namespace:1>
                                                                                                <declaration ns:1>
                                                                                                    <&declaration_spec ns:1>
                                                                                                        <&type_spec ns:1>
                                                                                                            <&enum_spec ns:1>
                                                                                                                <KW_enum:enum sym level: 12 namespace:1>
                                                                                                                <identifier:TP_CATEGORY sym level: 12 namespace:2>
                                                                                                    <&init_decl_list ns:1>
                                                                                                        <&init_decl ns:1>
                                                                                                            <&declarator ns:1>
                                                                                                                <&direct_declarator ns:1>
                                                                                                                    <identifier:return_type sym level: 12 namespace:1>
                                                                                                            <=:= sym level: 12 namespace:1>
                                                                                                            <&initializer ns:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:TP_SPEC_NONE sym level: 12 namespace:1>
                                                                                                    <;:; sym level: 12 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <&if_stmt ns:1>
                                                                                                        <KW_if:if sym level: 13 namespace:1>
                                                                                                        <(:( sym level: 13 namespace:1>
                                                                                                        <&equality_expr ns:1>
                                                                                                            <&multi_expr ns:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:type_a sym level: 13 namespace:1>
                                                                                                                <%:% sym level: 13 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <integer_constant:2 sym level: 13 namespace:1>
                                                                                                            <==:== sym level: 13 namespace:1>
                                                                                                            <&primary_expression ns:1>
                                                                                                                <integer_constant:0 sym level: 13 namespace:1>
                                                                                                        <):) sym level: 13 namespace:1>
                                                                                                        <statement ns:1>
                                                                                                            <compound_stmt ns:1>
                                                                                                                <left_brace:{ sym level: 14 namespace:1>
                                                                                                                <statement ns:1>
                                                                                                                    <expr_stmt ns:1>
                                                                                                                        <&assignment_expr ns:1>
                                                                                                                            <&primary_expression ns:1>
                                                                                                                                <identifier:return_type sym level: 14 namespace:1>
                                                                                                                            <=:= sym level: 14 namespace:1>
                                                                                                                            <&additive_expr ns:1>
                                                                                                                                <&primary_expression ns:1>
                                                                                                                                    <identifier:type_a sym level: 14 namespace:1>
                                                                                                                                <+:+ sym level: 14 namespace:1>
                                                                                                                                <&primary_expression ns:1>
                                                                                                                                    <integer_constant:1 sym level: 14 namespace:1>
                                                                                                                        <;:; sym level: 14 namespace:1>
                                                                                                                <right_brace:} sym level: 14 namespace:1>
                                                                                                        <KW_else:else sym level: 13 namespace:1>
                                                                                                        <statement ns:1>
                                                                                                            <&if_stmt ns:1>
                                                                                                                <KW_if:if sym level: 14 namespace:1>
                                                                                                                <(:( sym level: 14 namespace:1>
                                                                                                                <&equality_expr ns:1>
                                                                                                                    <&multi_expr ns:1>
                                                                                                                        <&primary_expression ns:1>
                                                                                                                            <identifier:type_b sym level: 14 namespace:1>
                                                                                                                        <%:% sym level: 14 namespace:1>
                                                                                                                        <&primary_expression ns:1>
                                                                                                                            <integer_constant:2 sym level: 14 namespace:1>
                                                                                                                    <==:== sym level: 14 namespace:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <integer_constant:0 sym level: 14 namespace:1>
                                                                                                                <):) sym level: 14 namespace:1>
                                                                                                                <statement ns:1>
                                                                                                                    <compound_stmt ns:1>
                                                                                                                        <left_brace:{ sym level: 15 namespace:1>
                                                                                                                        <statement ns:1>
                                                                                                                            <expr_stmt ns:1>
                                                                                                                                <&assignment_expr ns:1>
                                                                                                                                    <&primary_expression ns:1>
                                                                                                                                        <identifier:return_type sym level: 15 namespace:1>
                                                                                                                                    <=:= sym level: 15 namespace:1>
                                                                                                                                    <&additive_expr ns:1>
                                                                                                                                        <&primary_expression ns:1>
                                                                                                                                            <identifier:type_b sym level: 15 namespace:1>
                                                                                                                                        <+:+ sym level: 15 namespace:1>
                                                                                                                                        <&primary_expression ns:1>
                                                                                                                                            <integer_constant:1 sym level: 15 namespace:1>
                                                                                                                                <;:; sym level: 15 namespace:1>
                                                                                                                        <right_brace:} sym level: 15 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <expr_stmt ns:1>
                                                                                                        <&assignment_expr ns:1>
                                                                                                            <&unary_expr ns:1>
                                                                                                                <*:* sym level: 12 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:operand_b sym level: 12 namespace:1>
                                                                                                            <=:= sym level: 12 namespace:1>
                                                                                                            <&postfix_expr ns:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:build_base_type sym level: 12 namespace:1>
                                                                                                                <(:( sym level: 12 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:return_type sym level: 12 namespace:1>
                                                                                                                <):) sym level: 12 namespace:1>
                                                                                                        <;:; sym level: 12 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <expr_stmt ns:1>
                                                                                                        <&assignment_expr ns:1>
                                                                                                            <&unary_expr ns:1>
                                                                                                                <*:* sym level: 12 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:operand_a sym level: 12 namespace:1>
                                                                                                            <=:= sym level: 12 namespace:1>
                                                                                                            <&postfix_expr ns:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:build_base_type sym level: 12 namespace:1>
                                                                                                                <(:( sym level: 12 namespace:1>
                                                                                                                <&primary_expression ns:1>
                                                                                                                    <identifier:return_type sym level: 12 namespace:1>
                                                                                                                <):) sym level: 12 namespace:1>
                                                                                                        <;:; sym level: 12 namespace:1>
                                                                                                <statement ns:1>
                                                                                                    <&return_stmt ns:1>
                                                                                                        <KW_return:return sym level: 12 namespace:1>
                                                                                                        <&postfix_expr ns:1>
                                                                                                            <&primary_expression ns:1>
                                                                                                                <identifier:build_base_type sym level: 12 namespace:1>
                                                                                                            <(:( sym level: 12 namespace:1>
                                                                                                            <&primary_expression ns:1>
                                                                                                                <identifier:return_type sym level: 12 namespace:1>
                                                                                                            <):) sym level: 12 namespace:1>
                                                                                                        <;:; sym level: 12 namespace:1>
                                                                                                <right_brace:} sym level: 12 namespace:1>
                                                        <right_brace:} sym level: 7 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                        <KW_else:else sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&return_stmt ns:1>
                                        <KW_return:return sym level: 4 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:0 sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:0 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:integer_promotion sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:M_TYPE sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:integer_operand sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:operand sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&unary_expr ns:1>
                                    <*:* sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:integer_operand sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:integer_operand sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:operand sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&logical_or_expr ns:1>
                                        <&primary_expression ns:1>
                                            <(:( sym level: 3 namespace:1>
                                            <&logical_and_expr ns:1>
                                                <&relational_expr ns:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:operand sym level: 3 namespace:1>
                                                        <->:-> sym level: 3 namespace:1>
                                                        <identifier:typ_category sym level: 3 namespace:0>
                                                    <>=:>= sym level: 3 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:TP_SCHAR sym level: 3 namespace:1>
                                                <double_ampersand:&& sym level: 3 namespace:1>
                                                <&relational_expr ns:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:operand sym level: 3 namespace:1>
                                                        <->:-> sym level: 3 namespace:1>
                                                        <identifier:typ_category sym level: 3 namespace:0>
                                                    <<=:<= sym level: 3 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:TP_USLONGLONG sym level: 3 namespace:1>
                                            <):) sym level: 3 namespace:1>
                                        <||:|| sym level: 3 namespace:1>
                                        <&equality_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:operand sym level: 3 namespace:1>
                                                <->:-> sym level: 3 namespace:1>
                                                <identifier:typ_category sym level: 3 namespace:0>
                                            <==:== sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_BOOL sym level: 3 namespace:1>
                                        <||:|| sym level: 3 namespace:1>
                                        <&equality_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:operand sym level: 3 namespace:1>
                                                <->:-> sym level: 3 namespace:1>
                                                <identifier:typ_category sym level: 3 namespace:0>
                                            <==:== sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_NULL_POINTER_CONSTANT sym level: 3 namespace:1>
                                    <):) sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <KW_int:int sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:rank sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:int_rank sym level: 2 namespace:1>
                                    <[:[ sym level: 2 namespace:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:operand sym level: 2 namespace:1>
                                        <->:-> sym level: 2 namespace:1>
                                        <identifier:typ_category sym level: 2 namespace:0>
                                    <]:] sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:rank sym level: 3 namespace:1>
                            <>=:>= sym level: 3 namespace:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:int_rank sym level: 3 namespace:1>
                                <[:[ sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:TP_SINT sym level: 3 namespace:1>
                                <]:] sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:new_o sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:build_base_type sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:TP_SINT sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&assignment_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:integer_operand sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&unary_expr ns:1>
                                <ampersand:& sym level: 2 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:new_o sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:1 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW__Bool:_Bool sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:float_promotion sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:M_TYPE sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:float_operand sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:operand sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&unary_expr ns:1>
                                    <*:* sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:float_operand sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&logical_or_expr ns:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:float_operand sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:operand sym level: 3 namespace:1>
                            <||:|| sym level: 3 namespace:1>
                            <&unary_expr ns:1>
                                <!:! sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&logical_and_expr ns:1>
                                        <&relational_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:operand sym level: 3 namespace:1>
                                                <->:-> sym level: 3 namespace:1>
                                                <identifier:typ_category sym level: 3 namespace:0>
                                            <>=:>= sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_FLOAT sym level: 3 namespace:1>
                                        <double_ampersand:&& sym level: 3 namespace:1>
                                        <&relational_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:operand sym level: 3 namespace:1>
                                                <->:-> sym level: 3 namespace:1>
                                                <identifier:typ_category sym level: 3 namespace:0>
                                            <<=:<= sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_LONG_DOUBLE sym level: 3 namespace:1>
                                    <):) sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&equality_expr ns:1>
                            <&postfix_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:operand sym level: 3 namespace:1>
                                <->:-> sym level: 3 namespace:1>
                                <identifier:typ_category sym level: 3 namespace:0>
                            <!=:!= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:TP_FLOAT sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:1 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:new_o sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:build_base_type sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:TP_FLOAT sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&assignment_expr ns:1>
                            <&unary_expr ns:1>
                                <*:* sym level: 2 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:float_operand sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:new_o sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:1 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:size_t sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_get_element_size sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:current_obj_type sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:size_t sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:element_size sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:base_type sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:Type_VEC_get_actual_base_type sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:current_obj_type sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&primary_expression ns:1>
                            <(:( sym level: 3 namespace:1>
                            <&logical_or_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&logical_and_expr ns:1>
                                        <&relational_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:base_type sym level: 3 namespace:1>
                                                <->:-> sym level: 3 namespace:1>
                                                <identifier:typ_category sym level: 3 namespace:0>
                                            <>=:>= sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_SCHAR sym level: 3 namespace:1>
                                        <double_ampersand:&& sym level: 3 namespace:1>
                                        <&relational_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:base_type sym level: 3 namespace:1>
                                                <->:-> sym level: 3 namespace:1>
                                                <identifier:typ_category sym level: 3 namespace:0>
                                            <<=:<= sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_POINT sym level: 3 namespace:1>
                                    <):) sym level: 3 namespace:1>
                                <||:|| sym level: 3 namespace:1>
                                <&equality_expr ns:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:base_type sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:typ_category sym level: 3 namespace:0>
                                    <==:== sym level: 3 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:TP_NULL_POINTER_CONSTANT sym level: 3 namespace:1>
                            <):) sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&assignment_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:element_size sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:1 sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                        <KW_else:else sym level: 3 namespace:1>
                        <statement ns:1>
                            <&if_stmt ns:1>
                                <KW_if:if sym level: 4 namespace:1>
                                <(:( sym level: 4 namespace:1>
                                <&equality_expr ns:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:base_type sym level: 4 namespace:1>
                                        <->:-> sym level: 4 namespace:1>
                                        <identifier:typ_category sym level: 4 namespace:0>
                                    <==:== sym level: 4 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:TP_ARRAY sym level: 4 namespace:1>
                                <):) sym level: 4 namespace:1>
                                <statement ns:1>
                                    <compound_stmt ns:1>
                                        <left_brace:{ sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&if_stmt ns:1>
                                                <KW_if:if sym level: 6 namespace:1>
                                                <(:( sym level: 6 namespace:1>
                                                <&unary_expr ns:1>
                                                    <!:! sym level: 6 namespace:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <(:( sym level: 6 namespace:1>
                                                            <&cast_expr ns:1>
                                                                <(:( sym level: 6 namespace:1>
                                                                <&type_name ns:1>
                                                                    <&spec_qual_list ns:1>
                                                                        <&type_spec ns:1>
                                                                            <&typedef_name ns:1>
                                                                                <identifier:TP_ARR sym level: 6 namespace:1>
                                                                    <&abstract_declarator ns:1>
                                                                        <&pointer ns:1>
                                                                            <*:* sym level: 6 namespace:1>
                                                                <):) sym level: 6 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:base_type sym level: 6 namespace:1>
                                                            <):) sym level: 6 namespace:1>
                                                        <->:-> sym level: 6 namespace:1>
                                                        <identifier:is_vla sym level: 6 namespace:0>
                                                <):) sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <compound_stmt ns:1>
                                                        <left_brace:{ sym level: 7 namespace:1>
                                                        <declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <&typedef_name ns:1>
                                                                        <identifier:VEC sym level: 7 namespace:1>
                                                            <&init_decl_list ns:1>
                                                                <&init_decl ns:1>
                                                                    <&declarator ns:1>
                                                                        <&pointer ns:1>
                                                                            <*:* sym level: 7 namespace:1>
                                                                        <&direct_declarator ns:1>
                                                                            <identifier:sub_obj_type sym level: 7 namespace:1>
                                                                    <=:= sym level: 7 namespace:1>
                                                                    <&initializer ns:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:Type_VEC_get_Array_TO sym level: 7 namespace:1>
                                                                            <(:( sym level: 7 namespace:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:current_obj_type sym level: 7 namespace:1>
                                                                            <,:, sym level: 7 namespace:1>
                                                                            <&primary_expression ns:1>
                                                                                <integer_constant:1 sym level: 7 namespace:1>
                                                                            <):) sym level: 7 namespace:1>
                                                            <;:; sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <expr_stmt ns:1>
                                                                <&assignment_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:element_size sym level: 7 namespace:1>
                                                                    <=:= sym level: 7 namespace:1>
                                                                    <&multi_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <(:( sym level: 7 namespace:1>
                                                                            <&postfix_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <(:( sym level: 7 namespace:1>
                                                                                    <&cast_expr ns:1>
                                                                                        <(:( sym level: 7 namespace:1>
                                                                                        <&type_name ns:1>
                                                                                            <&spec_qual_list ns:1>
                                                                                                <&type_spec ns:1>
                                                                                                    <&typedef_name ns:1>
                                                                                                        <identifier:TP_ARR sym level: 7 namespace:1>
                                                                                            <&abstract_declarator ns:1>
                                                                                                <&pointer ns:1>
                                                                                                    <*:* sym level: 7 namespace:1>
                                                                                        <):) sym level: 7 namespace:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <identifier:base_type sym level: 7 namespace:1>
                                                                                    <):) sym level: 7 namespace:1>
                                                                                <->:-> sym level: 7 namespace:1>
                                                                                <identifier:axis_size sym level: 7 namespace:0>
                                                                            <):) sym level: 7 namespace:1>
                                                                        <*:* sym level: 7 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:Type_VEC_get_element_size sym level: 7 namespace:1>
                                                                            <(:( sym level: 7 namespace:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:sub_obj_type sym level: 7 namespace:1>
                                                                            <):) sym level: 7 namespace:1>
                                                                <;:; sym level: 7 namespace:1>
                                                        <right_brace:} sym level: 7 namespace:1>
                                        <right_brace:} sym level: 5 namespace:1>
                                <KW_else:else sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&equality_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:base_type sym level: 5 namespace:1>
                                                <->:-> sym level: 5 namespace:1>
                                                <identifier:typ_category sym level: 5 namespace:0>
                                            <==:== sym level: 5 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_STRUCT sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <declaration ns:1>
                                                    <&declaration_spec ns:1>
                                                        <&type_spec ns:1>
                                                            <&typedef_name ns:1>
                                                                <identifier:VEC sym level: 6 namespace:1>
                                                    <&init_decl_list ns:1>
                                                        <&init_decl ns:1>
                                                            <&declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 6 namespace:1>
                                                                <&direct_declarator ns:1>
                                                                    <identifier:struct_member_list sym level: 6 namespace:1>
                                                            <=:= sym level: 6 namespace:1>
                                                            <&initializer ns:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 6 namespace:1>
                                                                        <&cast_expr ns:1>
                                                                            <(:( sym level: 6 namespace:1>
                                                                            <&type_name ns:1>
                                                                                <&spec_qual_list ns:1>
                                                                                    <&type_spec ns:1>
                                                                                        <&typedef_name ns:1>
                                                                                            <identifier:TP_SU sym level: 6 namespace:1>
                                                                                <&abstract_declarator ns:1>
                                                                                    <&pointer ns:1>
                                                                                        <*:* sym level: 6 namespace:1>
                                                                            <):) sym level: 6 namespace:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:base_type sym level: 6 namespace:1>
                                                                        <):) sym level: 6 namespace:1>
                                                                    <->:-> sym level: 6 namespace:1>
                                                                    <identifier:members sym level: 6 namespace:0>
                                                    <;:; sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&for_stmt ns:1>
                                                        <KW_for:for sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <&typedef_name ns:1>
                                                                        <identifier:size_t sym level: 7 namespace:1>
                                                            <&init_decl_list ns:1>
                                                                <&init_decl ns:1>
                                                                    <&declarator ns:1>
                                                                        <&direct_declarator ns:1>
                                                                            <identifier:i sym level: 7 namespace:1>
                                                                    <=:= sym level: 7 namespace:1>
                                                                    <&initializer ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <integer_constant:0 sym level: 7 namespace:1>
                                                            <;:; sym level: 7 namespace:1>
                                                        <&relational_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:i sym level: 7 namespace:1>
                                                            <<:< sym level: 7 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <(:( sym level: 7 namespace:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:struct_member_list sym level: 7 namespace:1>
                                                                    <->:-> sym level: 7 namespace:1>
                                                                    <identifier:len sym level: 7 namespace:0>
                                                                <):) sym level: 7 namespace:1>
                                                        <;:; sym level: 7 namespace:1>
                                                        <&unary_expr ns:1>
                                                            <++:++ sym level: 7 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:i sym level: 7 namespace:1>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <declaration ns:1>
                                                                    <&declaration_spec ns:1>
                                                                        <&type_spec ns:1>
                                                                            <&typedef_name ns:1>
                                                                                <identifier:TP_SU_MEMBER sym level: 8 namespace:1>
                                                                    <&init_decl_list ns:1>
                                                                        <&init_decl ns:1>
                                                                            <&declarator ns:1>
                                                                                <&pointer ns:1>
                                                                                    <*:* sym level: 8 namespace:1>
                                                                                <&direct_declarator ns:1>
                                                                                    <identifier:sub_obj sym level: 8 namespace:1>
                                                                            <=:= sym level: 8 namespace:1>
                                                                            <&initializer ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <(:( sym level: 8 namespace:1>
                                                                                    <&conditional_expr ns:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <(:( sym level: 8 namespace:1>
                                                                                            <&logical_and_expr ns:1>
                                                                                                <&equality_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:struct_member_list sym level: 8 namespace:1>
                                                                                                    <!=:!= sym level: 8 namespace:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <integer_constant:0 sym level: 8 namespace:1>
                                                                                                <double_ampersand:&& sym level: 8 namespace:1>
                                                                                                <&relational_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:i sym level: 8 namespace:1>
                                                                                                    <<:< sym level: 8 namespace:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <(:( sym level: 8 namespace:1>
                                                                                                        <&postfix_expr ns:1>
                                                                                                            <&primary_expression ns:1>
                                                                                                                <identifier:struct_member_list sym level: 8 namespace:1>
                                                                                                            <->:-> sym level: 8 namespace:1>
                                                                                                            <identifier:len sym level: 8 namespace:0>
                                                                                                        <):) sym level: 8 namespace:1>
                                                                                            <):) sym level: 8 namespace:1>
                                                                                        <?:? sym level: 8 namespace:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <(:( sym level: 8 namespace:1>
                                                                                            <&postfix_expr ns:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <identifier:struct_member_list sym level: 8 namespace:1>
                                                                                                <->:-> sym level: 8 namespace:1>
                                                                                                <identifier:data sym level: 8 namespace:0>
                                                                                                <[:[ sym level: 8 namespace:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <identifier:i sym level: 8 namespace:1>
                                                                                                <]:] sym level: 8 namespace:1>
                                                                                            <):) sym level: 8 namespace:1>
                                                                                        <colon:: sym level: 8 namespace:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <integer_constant:0 sym level: 8 namespace:1>
                                                                                    <):) sym level: 8 namespace:1>
                                                                    <;:; sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <expr_stmt ns:1>
                                                                        <&assignment_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:element_size sym level: 8 namespace:1>
                                                                            <=:+= sym level: 8 namespace:1>
                                                                            <&additive_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:element_size sym level: 8 namespace:1>
                                                                                <+:+= sym level: 8 namespace:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:Type_VEC_get_element_size sym level: 8 namespace:1>
                                                                                    <(:( sym level: 8 namespace:1>
                                                                                    <&postfix_expr ns:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <identifier:sub_obj sym level: 8 namespace:1>
                                                                                        <->:-> sym level: 8 namespace:1>
                                                                                        <identifier:type_vec sym level: 8 namespace:0>
                                                                                    <):) sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&if_stmt ns:1>
                                                <KW_if:if sym level: 6 namespace:1>
                                                <(:( sym level: 6 namespace:1>
                                                <&equality_expr ns:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:base_type sym level: 6 namespace:1>
                                                        <->:-> sym level: 6 namespace:1>
                                                        <identifier:typ_category sym level: 6 namespace:0>
                                                    <==:== sym level: 6 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:TP_UNION sym level: 6 namespace:1>
                                                <):) sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <compound_stmt ns:1>
                                                        <left_brace:{ sym level: 7 namespace:1>
                                                        <declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <&typedef_name ns:1>
                                                                        <identifier:VEC sym level: 7 namespace:1>
                                                            <&init_decl_list ns:1>
                                                                <&init_decl ns:1>
                                                                    <&declarator ns:1>
                                                                        <&pointer ns:1>
                                                                            <*:* sym level: 7 namespace:1>
                                                                        <&direct_declarator ns:1>
                                                                            <identifier:struct_member_list sym level: 7 namespace:1>
                                                                    <=:= sym level: 7 namespace:1>
                                                                    <&initializer ns:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <(:( sym level: 7 namespace:1>
                                                                                <&cast_expr ns:1>
                                                                                    <(:( sym level: 7 namespace:1>
                                                                                    <&type_name ns:1>
                                                                                        <&spec_qual_list ns:1>
                                                                                            <&type_spec ns:1>
                                                                                                <&typedef_name ns:1>
                                                                                                    <identifier:TP_SU sym level: 7 namespace:1>
                                                                                        <&abstract_declarator ns:1>
                                                                                            <&pointer ns:1>
                                                                                                <*:* sym level: 7 namespace:1>
                                                                                    <):) sym level: 7 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:base_type sym level: 7 namespace:1>
                                                                                <):) sym level: 7 namespace:1>
                                                                            <->:-> sym level: 7 namespace:1>
                                                                            <identifier:members sym level: 7 namespace:0>
                                                            <;:; sym level: 7 namespace:1>
                                                        <declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <&typedef_name ns:1>
                                                                        <identifier:TP_SU_MEMBER sym level: 7 namespace:1>
                                                            <&init_decl_list ns:1>
                                                                <&init_decl ns:1>
                                                                    <&declarator ns:1>
                                                                        <&pointer ns:1>
                                                                            <*:* sym level: 7 namespace:1>
                                                                        <&direct_declarator ns:1>
                                                                            <identifier:sub_obj sym level: 7 namespace:1>
                                                                    <=:= sym level: 7 namespace:1>
                                                                    <&initializer ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <(:( sym level: 7 namespace:1>
                                                                            <&conditional_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <(:( sym level: 7 namespace:1>
                                                                                    <&logical_and_expr ns:1>
                                                                                        <&equality_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:struct_member_list sym level: 7 namespace:1>
                                                                                            <!=:!= sym level: 7 namespace:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <integer_constant:0 sym level: 7 namespace:1>
                                                                                        <double_ampersand:&& sym level: 7 namespace:1>
                                                                                        <&relational_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <integer_constant:0 sym level: 7 namespace:1>
                                                                                            <<:< sym level: 7 namespace:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <(:( sym level: 7 namespace:1>
                                                                                                <&postfix_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:struct_member_list sym level: 7 namespace:1>
                                                                                                    <->:-> sym level: 7 namespace:1>
                                                                                                    <identifier:len sym level: 7 namespace:0>
                                                                                                <):) sym level: 7 namespace:1>
                                                                                    <):) sym level: 7 namespace:1>
                                                                                <?:? sym level: 7 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <(:( sym level: 7 namespace:1>
                                                                                    <&postfix_expr ns:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <identifier:struct_member_list sym level: 7 namespace:1>
                                                                                        <->:-> sym level: 7 namespace:1>
                                                                                        <identifier:data sym level: 7 namespace:0>
                                                                                        <[:[ sym level: 7 namespace:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <integer_constant:0 sym level: 7 namespace:1>
                                                                                        <]:] sym level: 7 namespace:1>
                                                                                    <):) sym level: 7 namespace:1>
                                                                                <colon:: sym level: 7 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <integer_constant:0 sym level: 7 namespace:1>
                                                                            <):) sym level: 7 namespace:1>
                                                            <;:; sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <expr_stmt ns:1>
                                                                <&assignment_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:element_size sym level: 7 namespace:1>
                                                                    <=:+= sym level: 7 namespace:1>
                                                                    <&additive_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:element_size sym level: 7 namespace:1>
                                                                        <+:+= sym level: 7 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:Type_VEC_get_element_size sym level: 7 namespace:1>
                                                                            <(:( sym level: 7 namespace:1>
                                                                            <&postfix_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:sub_obj sym level: 7 namespace:1>
                                                                                <->:-> sym level: 7 namespace:1>
                                                                                <identifier:type_vec sym level: 7 namespace:0>
                                                                            <):) sym level: 7 namespace:1>
                                                                <;:; sym level: 7 namespace:1>
                                                        <right_brace:} sym level: 7 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:element_size sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_get_sub_obj_type sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:current_obj_type sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:size_t sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:sub_obj_size sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:current_obj_type sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:VEC sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:res_vec sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:actual_type sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:Type_VEC_get_actual_base_type sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:current_obj_type sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&primary_expression ns:1>
                            <(:( sym level: 3 namespace:1>
                            <&logical_or_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&logical_and_expr ns:1>
                                        <&relational_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:actual_type sym level: 3 namespace:1>
                                                <->:-> sym level: 3 namespace:1>
                                                <identifier:typ_category sym level: 3 namespace:0>
                                            <>=:>= sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_SCHAR sym level: 3 namespace:1>
                                        <double_ampersand:&& sym level: 3 namespace:1>
                                        <&relational_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:actual_type sym level: 3 namespace:1>
                                                <->:-> sym level: 3 namespace:1>
                                                <identifier:typ_category sym level: 3 namespace:0>
                                            <<=:<= sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_POINT sym level: 3 namespace:1>
                                    <):) sym level: 3 namespace:1>
                                <||:|| sym level: 3 namespace:1>
                                <&equality_expr ns:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:actual_type sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:typ_category sym level: 3 namespace:0>
                                    <==:== sym level: 3 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:TP_NULL_POINTER_CONSTANT sym level: 3 namespace:1>
                            <):) sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:VECcpy sym level: 4 namespace:1>
                                            <(:( sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:current_obj_type sym level: 4 namespace:1>
                                            <,:, sym level: 4 namespace:1>
                                            <&unary_expr ns:1>
                                                <ampersand:& sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:res_vec sym level: 4 namespace:1>
                                            <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                        <KW_else:else sym level: 3 namespace:1>
                        <statement ns:1>
                            <&if_stmt ns:1>
                                <KW_if:if sym level: 4 namespace:1>
                                <(:( sym level: 4 namespace:1>
                                <&equality_expr ns:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:actual_type sym level: 4 namespace:1>
                                        <->:-> sym level: 4 namespace:1>
                                        <identifier:typ_category sym level: 4 namespace:0>
                                    <==:== sym level: 4 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:TP_ENUM sym level: 4 namespace:1>
                                <):) sym level: 4 namespace:1>
                                <statement ns:1>
                                    <compound_stmt ns:1>
                                        <left_brace:{ sym level: 5 namespace:1>
                                        <declaration ns:1>
                                            <&declaration_spec ns:1>
                                                <&type_spec ns:1>
                                                    <&typedef_name ns:1>
                                                        <identifier:M_TYPE sym level: 5 namespace:1>
                                            <&init_decl_list ns:1>
                                                <&init_decl ns:1>
                                                    <&declarator ns:1>
                                                        <&pointer ns:1>
                                                            <*:* sym level: 5 namespace:1>
                                                        <&direct_declarator ns:1>
                                                            <identifier:tmpt sym level: 5 namespace:1>
                                                    <=:= sym level: 5 namespace:1>
                                                    <&initializer ns:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:build_base_type sym level: 5 namespace:1>
                                                            <(:( sym level: 5 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:TP_SINT sym level: 5 namespace:1>
                                                            <):) sym level: 5 namespace:1>
                                            <;:; sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <expr_stmt ns:1>
                                                <&assignment_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res_vec sym level: 5 namespace:1>
                                                    <=:= sym level: 5 namespace:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:InitVEC sym level: 5 namespace:1>
                                                        <(:( sym level: 5 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:3 sym level: 5 namespace:1>
                                                        <):) sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <expr_stmt ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:VECinsert sym level: 5 namespace:1>
                                                    <(:( sym level: 5 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res_vec sym level: 5 namespace:1>
                                                    <,:, sym level: 5 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpt sym level: 5 namespace:1>
                                                    <):) sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <right_brace:} sym level: 5 namespace:1>
                                <KW_else:else sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&equality_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:actual_type sym level: 5 namespace:1>
                                                <->:-> sym level: 5 namespace:1>
                                                <identifier:typ_category sym level: 5 namespace:0>
                                            <==:== sym level: 5 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_ARRAY sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <expr_stmt ns:1>
                                                        <&assignment_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:res_vec sym level: 6 namespace:1>
                                                            <=:= sym level: 6 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:Type_VEC_get_Array_TO sym level: 6 namespace:1>
                                                                <(:( sym level: 6 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:current_obj_type sym level: 6 namespace:1>
                                                                <,:, sym level: 6 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <integer_constant:1 sym level: 6 namespace:1>
                                                                <):) sym level: 6 namespace:1>
                                                        <;:; sym level: 6 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&if_stmt ns:1>
                                                <KW_if:if sym level: 6 namespace:1>
                                                <(:( sym level: 6 namespace:1>
                                                <&logical_or_expr ns:1>
                                                    <&equality_expr ns:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:actual_type sym level: 6 namespace:1>
                                                            <->:-> sym level: 6 namespace:1>
                                                            <identifier:typ_category sym level: 6 namespace:0>
                                                        <==:== sym level: 6 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:TP_STRUCT sym level: 6 namespace:1>
                                                    <||:|| sym level: 6 namespace:1>
                                                    <&equality_expr ns:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:actual_type sym level: 6 namespace:1>
                                                            <->:-> sym level: 6 namespace:1>
                                                            <identifier:typ_category sym level: 6 namespace:0>
                                                        <==:== sym level: 6 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:TP_UNION sym level: 6 namespace:1>
                                                <):) sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <compound_stmt ns:1>
                                                        <left_brace:{ sym level: 7 namespace:1>
                                                        <declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <&typedef_name ns:1>
                                                                        <identifier:VEC sym level: 7 namespace:1>
                                                            <&init_decl_list ns:1>
                                                                <&init_decl ns:1>
                                                                    <&declarator ns:1>
                                                                        <&pointer ns:1>
                                                                            <*:* sym level: 7 namespace:1>
                                                                        <&direct_declarator ns:1>
                                                                            <identifier:struct_member_list sym level: 7 namespace:1>
                                                                    <=:= sym level: 7 namespace:1>
                                                                    <&initializer ns:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <(:( sym level: 7 namespace:1>
                                                                                <&cast_expr ns:1>
                                                                                    <(:( sym level: 7 namespace:1>
                                                                                    <&type_name ns:1>
                                                                                        <&spec_qual_list ns:1>
                                                                                            <&type_spec ns:1>
                                                                                                <&typedef_name ns:1>
                                                                                                    <identifier:TP_SU sym level: 7 namespace:1>
                                                                                        <&abstract_declarator ns:1>
                                                                                            <&pointer ns:1>
                                                                                                <*:* sym level: 7 namespace:1>
                                                                                    <):) sym level: 7 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:actual_type sym level: 7 namespace:1>
                                                                                <):) sym level: 7 namespace:1>
                                                                            <->:-> sym level: 7 namespace:1>
                                                                            <identifier:members sym level: 7 namespace:0>
                                                            <;:; sym level: 7 namespace:1>
                                                        <declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <&typedef_name ns:1>
                                                                        <identifier:TP_SU_MEMBER sym level: 7 namespace:1>
                                                            <&init_decl_list ns:1>
                                                                <&init_decl ns:1>
                                                                    <&declarator ns:1>
                                                                        <&pointer ns:1>
                                                                            <*:* sym level: 7 namespace:1>
                                                                        <&direct_declarator ns:1>
                                                                            <identifier:sub_obj sym level: 7 namespace:1>
                                                                    <=:= sym level: 7 namespace:1>
                                                                    <&initializer ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <(:( sym level: 7 namespace:1>
                                                                            <&conditional_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <(:( sym level: 7 namespace:1>
                                                                                    <&logical_and_expr ns:1>
                                                                                        <&equality_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:struct_member_list sym level: 7 namespace:1>
                                                                                            <!=:!= sym level: 7 namespace:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <integer_constant:0 sym level: 7 namespace:1>
                                                                                        <double_ampersand:&& sym level: 7 namespace:1>
                                                                                        <&relational_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:sub_obj_size sym level: 7 namespace:1>
                                                                                            <<:< sym level: 7 namespace:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <(:( sym level: 7 namespace:1>
                                                                                                <&postfix_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:struct_member_list sym level: 7 namespace:1>
                                                                                                    <->:-> sym level: 7 namespace:1>
                                                                                                    <identifier:len sym level: 7 namespace:0>
                                                                                                <):) sym level: 7 namespace:1>
                                                                                    <):) sym level: 7 namespace:1>
                                                                                <?:? sym level: 7 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <(:( sym level: 7 namespace:1>
                                                                                    <&postfix_expr ns:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <identifier:struct_member_list sym level: 7 namespace:1>
                                                                                        <->:-> sym level: 7 namespace:1>
                                                                                        <identifier:data sym level: 7 namespace:0>
                                                                                        <[:[ sym level: 7 namespace:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <identifier:sub_obj_size sym level: 7 namespace:1>
                                                                                        <]:] sym level: 7 namespace:1>
                                                                                    <):) sym level: 7 namespace:1>
                                                                                <colon:: sym level: 7 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <integer_constant:0 sym level: 7 namespace:1>
                                                                            <):) sym level: 7 namespace:1>
                                                            <;:; sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <expr_stmt ns:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:VECcpy sym level: 7 namespace:1>
                                                                    <(:( sym level: 7 namespace:1>
                                                                    <&postfix_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:sub_obj sym level: 7 namespace:1>
                                                                        <->:-> sym level: 7 namespace:1>
                                                                        <identifier:type_vec sym level: 7 namespace:0>
                                                                    <,:, sym level: 7 namespace:1>
                                                                    <&unary_expr ns:1>
                                                                        <ampersand:& sym level: 7 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:res_vec sym level: 7 namespace:1>
                                                                    <):) sym level: 7 namespace:1>
                                                                <;:; sym level: 7 namespace:1>
                                                        <right_brace:} sym level: 7 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:res_vec sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:VEC sym level: 1 namespace:1>
            <&declarator ns:1>
                <&pointer ns:1>
                    <*:* sym level: 1 namespace:1>
                <&direct_declarator ns:1>
                    <identifier:Type_VEC_get_sub_obj_off_element_type sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:sub_obj_type sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:size_t sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:sub_obj_off sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&unary_expr ns:1>
                            <!:! sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:sub_obj_type sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 3 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 3 namespace:1>
                                <;:; sym level: 3 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:VEC sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:res_vec sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:M_TYPE sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:actual_type sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&postfix_expr ns:1>
                                    <&primary_expression ns:1>
                                        <identifier:Type_VEC_get_actual_base_type sym level: 2 namespace:1>
                                    <(:( sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:sub_obj_type sym level: 2 namespace:1>
                                    <):) sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&primary_expression ns:1>
                            <(:( sym level: 3 namespace:1>
                            <&logical_or_expr ns:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 3 namespace:1>
                                    <&logical_and_expr ns:1>
                                        <&relational_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:actual_type sym level: 3 namespace:1>
                                                <->:-> sym level: 3 namespace:1>
                                                <identifier:typ_category sym level: 3 namespace:0>
                                            <>=:>= sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_SCHAR sym level: 3 namespace:1>
                                        <double_ampersand:&& sym level: 3 namespace:1>
                                        <&relational_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:actual_type sym level: 3 namespace:1>
                                                <->:-> sym level: 3 namespace:1>
                                                <identifier:typ_category sym level: 3 namespace:0>
                                            <<=:<= sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_POINT sym level: 3 namespace:1>
                                    <):) sym level: 3 namespace:1>
                                <||:|| sym level: 3 namespace:1>
                                <&equality_expr ns:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:actual_type sym level: 3 namespace:1>
                                        <->:-> sym level: 3 namespace:1>
                                        <identifier:typ_category sym level: 3 namespace:0>
                                    <==:== sym level: 3 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:TP_NULL_POINTER_CONSTANT sym level: 3 namespace:1>
                            <):) sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <expr_stmt ns:1>
                                        <&postfix_expr ns:1>
                                            <&primary_expression ns:1>
                                                <identifier:VECcpy sym level: 4 namespace:1>
                                            <(:( sym level: 4 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:sub_obj_type sym level: 4 namespace:1>
                                            <,:, sym level: 4 namespace:1>
                                            <&unary_expr ns:1>
                                                <ampersand:& sym level: 4 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:res_vec sym level: 4 namespace:1>
                                            <):) sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                        <KW_else:else sym level: 3 namespace:1>
                        <statement ns:1>
                            <&if_stmt ns:1>
                                <KW_if:if sym level: 4 namespace:1>
                                <(:( sym level: 4 namespace:1>
                                <&equality_expr ns:1>
                                    <&postfix_expr ns:1>
                                        <&primary_expression ns:1>
                                            <identifier:actual_type sym level: 4 namespace:1>
                                        <->:-> sym level: 4 namespace:1>
                                        <identifier:typ_category sym level: 4 namespace:0>
                                    <==:== sym level: 4 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:TP_ENUM sym level: 4 namespace:1>
                                <):) sym level: 4 namespace:1>
                                <statement ns:1>
                                    <compound_stmt ns:1>
                                        <left_brace:{ sym level: 5 namespace:1>
                                        <declaration ns:1>
                                            <&declaration_spec ns:1>
                                                <&type_spec ns:1>
                                                    <&typedef_name ns:1>
                                                        <identifier:M_TYPE sym level: 5 namespace:1>
                                            <&init_decl_list ns:1>
                                                <&init_decl ns:1>
                                                    <&declarator ns:1>
                                                        <&pointer ns:1>
                                                            <*:* sym level: 5 namespace:1>
                                                        <&direct_declarator ns:1>
                                                            <identifier:tmpt sym level: 5 namespace:1>
                                                    <=:= sym level: 5 namespace:1>
                                                    <&initializer ns:1>
                                                        <&postfix_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:build_base_type sym level: 5 namespace:1>
                                                            <(:( sym level: 5 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:TP_SINT sym level: 5 namespace:1>
                                                            <):) sym level: 5 namespace:1>
                                            <;:; sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <expr_stmt ns:1>
                                                <&assignment_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res_vec sym level: 5 namespace:1>
                                                    <=:= sym level: 5 namespace:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:InitVEC sym level: 5 namespace:1>
                                                        <(:( sym level: 5 namespace:1>
                                                        <&primary_expression ns:1>
                                                            <integer_constant:3 sym level: 5 namespace:1>
                                                        <):) sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <expr_stmt ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:VECinsert sym level: 5 namespace:1>
                                                    <(:( sym level: 5 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:res_vec sym level: 5 namespace:1>
                                                    <,:, sym level: 5 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpt sym level: 5 namespace:1>
                                                    <):) sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                        <right_brace:} sym level: 5 namespace:1>
                                <KW_else:else sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&equality_expr ns:1>
                                            <&postfix_expr ns:1>
                                                <&primary_expression ns:1>
                                                    <identifier:actual_type sym level: 5 namespace:1>
                                                <->:-> sym level: 5 namespace:1>
                                                <identifier:typ_category sym level: 5 namespace:0>
                                            <==:== sym level: 5 namespace:1>
                                            <&primary_expression ns:1>
                                                <identifier:TP_ARRAY sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <compound_stmt ns:1>
                                                <left_brace:{ sym level: 6 namespace:1>
                                                <declaration ns:1>
                                                    <&declaration_spec ns:1>
                                                        <&type_spec ns:1>
                                                            <&typedef_name ns:1>
                                                                <identifier:VEC sym level: 6 namespace:1>
                                                    <&init_decl_list ns:1>
                                                        <&init_decl ns:1>
                                                            <&declarator ns:1>
                                                                <&pointer ns:1>
                                                                    <*:* sym level: 6 namespace:1>
                                                                <&direct_declarator ns:1>
                                                                    <identifier:sub_sub_obj_type sym level: 6 namespace:1>
                                                            <=:= sym level: 6 namespace:1>
                                                            <&initializer ns:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:Type_VEC_get_Array_TO sym level: 6 namespace:1>
                                                                    <(:( sym level: 6 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:sub_obj_type sym level: 6 namespace:1>
                                                                    <,:, sym level: 6 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <integer_constant:1 sym level: 6 namespace:1>
                                                                    <):) sym level: 6 namespace:1>
                                                    <;:; sym level: 6 namespace:1>
                                                <declaration ns:1>
                                                    <&declaration_spec ns:1>
                                                        <&type_spec ns:1>
                                                            <&typedef_name ns:1>
                                                                <identifier:size_t sym level: 6 namespace:1>
                                                    <&init_decl_list ns:1>
                                                        <&init_decl ns:1>
                                                            <&declarator ns:1>
                                                                <&direct_declarator ns:1>
                                                                    <identifier:sub_sub_obj_element_size sym level: 6 namespace:1>
                                                            <=:= sym level: 6 namespace:1>
                                                            <&initializer ns:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:Type_VEC_get_element_size sym level: 6 namespace:1>
                                                                    <(:( sym level: 6 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:sub_sub_obj_type sym level: 6 namespace:1>
                                                                    <):) sym level: 6 namespace:1>
                                                    <;:; sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <expr_stmt ns:1>
                                                        <&assignment_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:res_vec sym level: 6 namespace:1>
                                                            <=:= sym level: 6 namespace:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:Type_VEC_get_sub_obj_off_element_type sym level: 6 namespace:1>
                                                                <(:( sym level: 6 namespace:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:sub_sub_obj_type sym level: 6 namespace:1>
                                                                <,:, sym level: 6 namespace:1>
                                                                <&multi_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:sub_obj_off sym level: 6 namespace:1>
                                                                    <%:% sym level: 6 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:sub_sub_obj_element_size sym level: 6 namespace:1>
                                                                <):) sym level: 6 namespace:1>
                                                        <;:; sym level: 6 namespace:1>
                                                <right_brace:} sym level: 6 namespace:1>
                                        <KW_else:else sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <&if_stmt ns:1>
                                                <KW_if:if sym level: 6 namespace:1>
                                                <(:( sym level: 6 namespace:1>
                                                <&equality_expr ns:1>
                                                    <&postfix_expr ns:1>
                                                        <&primary_expression ns:1>
                                                            <identifier:actual_type sym level: 6 namespace:1>
                                                        <->:-> sym level: 6 namespace:1>
                                                        <identifier:typ_category sym level: 6 namespace:0>
                                                    <==:== sym level: 6 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:TP_STRUCT sym level: 6 namespace:1>
                                                <):) sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <compound_stmt ns:1>
                                                        <left_brace:{ sym level: 7 namespace:1>
                                                        <declaration ns:1>
                                                            <&declaration_spec ns:1>
                                                                <&type_spec ns:1>
                                                                    <&typedef_name ns:1>
                                                                        <identifier:VEC sym level: 7 namespace:1>
                                                            <&init_decl_list ns:1>
                                                                <&init_decl ns:1>
                                                                    <&declarator ns:1>
                                                                        <&pointer ns:1>
                                                                            <*:* sym level: 7 namespace:1>
                                                                        <&direct_declarator ns:1>
                                                                            <identifier:struct_member_list sym level: 7 namespace:1>
                                                                    <=:= sym level: 7 namespace:1>
                                                                    <&initializer ns:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <(:( sym level: 7 namespace:1>
                                                                                <&cast_expr ns:1>
                                                                                    <(:( sym level: 7 namespace:1>
                                                                                    <&type_name ns:1>
                                                                                        <&spec_qual_list ns:1>
                                                                                            <&type_spec ns:1>
                                                                                                <&typedef_name ns:1>
                                                                                                    <identifier:TP_SU sym level: 7 namespace:1>
                                                                                        <&abstract_declarator ns:1>
                                                                                            <&pointer ns:1>
                                                                                                <*:* sym level: 7 namespace:1>
                                                                                    <):) sym level: 7 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:actual_type sym level: 7 namespace:1>
                                                                                <):) sym level: 7 namespace:1>
                                                                            <->:-> sym level: 7 namespace:1>
                                                                            <identifier:members sym level: 7 namespace:0>
                                                            <;:; sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <&for_stmt ns:1>
                                                                <KW_for:for sym level: 8 namespace:1>
                                                                <(:( sym level: 8 namespace:1>
                                                                <declaration ns:1>
                                                                    <&declaration_spec ns:1>
                                                                        <&type_spec ns:1>
                                                                            <&typedef_name ns:1>
                                                                                <identifier:size_t sym level: 8 namespace:1>
                                                                    <&init_decl_list ns:1>
                                                                        <&init_decl ns:1>
                                                                            <&declarator ns:1>
                                                                                <&direct_declarator ns:1>
                                                                                    <identifier:i sym level: 8 namespace:1>
                                                                            <=:= sym level: 8 namespace:1>
                                                                            <&initializer ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <integer_constant:0 sym level: 8 namespace:1>
                                                                    <;:; sym level: 8 namespace:1>
                                                                <&relational_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 8 namespace:1>
                                                                    <<:< sym level: 8 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <(:( sym level: 8 namespace:1>
                                                                        <&postfix_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:struct_member_list sym level: 8 namespace:1>
                                                                            <->:-> sym level: 8 namespace:1>
                                                                            <identifier:len sym level: 8 namespace:0>
                                                                        <):) sym level: 8 namespace:1>
                                                                <;:; sym level: 8 namespace:1>
                                                                <&unary_expr ns:1>
                                                                    <++:++ sym level: 8 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 8 namespace:1>
                                                                <):) sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <compound_stmt ns:1>
                                                                        <left_brace:{ sym level: 9 namespace:1>
                                                                        <declaration ns:1>
                                                                            <&declaration_spec ns:1>
                                                                                <&type_spec ns:1>
                                                                                    <&typedef_name ns:1>
                                                                                        <identifier:TP_SU_MEMBER sym level: 9 namespace:1>
                                                                            <&init_decl_list ns:1>
                                                                                <&init_decl ns:1>
                                                                                    <&declarator ns:1>
                                                                                        <&pointer ns:1>
                                                                                            <*:* sym level: 9 namespace:1>
                                                                                        <&direct_declarator ns:1>
                                                                                            <identifier:struct_member sym level: 9 namespace:1>
                                                                                    <=:= sym level: 9 namespace:1>
                                                                                    <&initializer ns:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <(:( sym level: 9 namespace:1>
                                                                                            <&conditional_expr ns:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <(:( sym level: 9 namespace:1>
                                                                                                    <&logical_and_expr ns:1>
                                                                                                        <&equality_expr ns:1>
                                                                                                            <&primary_expression ns:1>
                                                                                                                <identifier:struct_member_list sym level: 9 namespace:1>
                                                                                                            <!=:!= sym level: 9 namespace:1>
                                                                                                            <&primary_expression ns:1>
                                                                                                                <integer_constant:0 sym level: 9 namespace:1>
                                                                                                        <double_ampersand:&& sym level: 9 namespace:1>
                                                                                                        <&relational_expr ns:1>
                                                                                                            <&primary_expression ns:1>
                                                                                                                <identifier:i sym level: 9 namespace:1>
                                                                                                            <<:< sym level: 9 namespace:1>
                                                                                                            <&primary_expression ns:1>
                                                                                                                <(:( sym level: 9 namespace:1>
                                                                                                                <&postfix_expr ns:1>
                                                                                                                    <&primary_expression ns:1>
                                                                                                                        <identifier:struct_member_list sym level: 9 namespace:1>
                                                                                                                    <->:-> sym level: 9 namespace:1>
                                                                                                                    <identifier:len sym level: 9 namespace:0>
                                                                                                                <):) sym level: 9 namespace:1>
                                                                                                    <):) sym level: 9 namespace:1>
                                                                                                <?:? sym level: 9 namespace:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <(:( sym level: 9 namespace:1>
                                                                                                    <&postfix_expr ns:1>
                                                                                                        <&primary_expression ns:1>
                                                                                                            <identifier:struct_member_list sym level: 9 namespace:1>
                                                                                                        <->:-> sym level: 9 namespace:1>
                                                                                                        <identifier:data sym level: 9 namespace:0>
                                                                                                        <[:[ sym level: 9 namespace:1>
                                                                                                        <&primary_expression ns:1>
                                                                                                            <identifier:i sym level: 9 namespace:1>
                                                                                                        <]:] sym level: 9 namespace:1>
                                                                                                    <):) sym level: 9 namespace:1>
                                                                                                <colon:: sym level: 9 namespace:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <integer_constant:0 sym level: 9 namespace:1>
                                                                                            <):) sym level: 9 namespace:1>
                                                                            <;:; sym level: 9 namespace:1>
                                                                        <declaration ns:1>
                                                                            <&declaration_spec ns:1>
                                                                                <&type_spec ns:1>
                                                                                    <&typedef_name ns:1>
                                                                                        <identifier:size_t sym level: 9 namespace:1>
                                                                            <&init_decl_list ns:1>
                                                                                <&init_decl ns:1>
                                                                                    <&declarator ns:1>
                                                                                        <&direct_declarator ns:1>
                                                                                            <identifier:struct_member_size sym level: 9 namespace:1>
                                                                                    <=:= sym level: 9 namespace:1>
                                                                                    <&initializer ns:1>
                                                                                        <&postfix_expr ns:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:Type_VEC_get_element_size sym level: 9 namespace:1>
                                                                                            <(:( sym level: 9 namespace:1>
                                                                                            <&postfix_expr ns:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <identifier:struct_member sym level: 9 namespace:1>
                                                                                                <->:-> sym level: 9 namespace:1>
                                                                                                <identifier:type_vec sym level: 9 namespace:0>
                                                                                            <):) sym level: 9 namespace:1>
                                                                            <;:; sym level: 9 namespace:1>
                                                                        <statement ns:1>
                                                                            <&if_stmt ns:1>
                                                                                <KW_if:if sym level: 10 namespace:1>
                                                                                <(:( sym level: 10 namespace:1>
                                                                                <&relational_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:struct_member_size sym level: 10 namespace:1>
                                                                                    <>:> sym level: 10 namespace:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:sub_obj_off sym level: 10 namespace:1>
                                                                                <):) sym level: 10 namespace:1>
                                                                                <statement ns:1>
                                                                                    <compound_stmt ns:1>
                                                                                        <left_brace:{ sym level: 11 namespace:1>
                                                                                        <statement ns:1>
                                                                                            <expr_stmt ns:1>
                                                                                                <&assignment_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:res_vec sym level: 11 namespace:1>
                                                                                                    <=:= sym level: 11 namespace:1>
                                                                                                    <&postfix_expr ns:1>
                                                                                                        <&primary_expression ns:1>
                                                                                                            <identifier:Type_VEC_get_sub_obj_off_element_type sym level: 11 namespace:1>
                                                                                                        <(:( sym level: 11 namespace:1>
                                                                                                        <&postfix_expr ns:1>
                                                                                                            <&primary_expression ns:1>
                                                                                                                <identifier:struct_member sym level: 11 namespace:1>
                                                                                                            <->:-> sym level: 11 namespace:1>
                                                                                                            <identifier:type_vec sym level: 11 namespace:0>
                                                                                                        <,:, sym level: 11 namespace:1>
                                                                                                        <&primary_expression ns:1>
                                                                                                            <identifier:sub_obj_off sym level: 11 namespace:1>
                                                                                                        <):) sym level: 11 namespace:1>
                                                                                                <;:; sym level: 11 namespace:1>
                                                                                        <right_brace:} sym level: 11 namespace:1>
                                                                                <KW_else:else sym level: 10 namespace:1>
                                                                                <statement ns:1>
                                                                                    <compound_stmt ns:1>
                                                                                        <left_brace:{ sym level: 11 namespace:1>
                                                                                        <statement ns:1>
                                                                                            <expr_stmt ns:1>
                                                                                                <&assignment_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:sub_obj_off sym level: 11 namespace:1>
                                                                                                    <=:-= sym level: 11 namespace:1>
                                                                                                    <&additive_expr ns:1>
                                                                                                        <&primary_expression ns:1>
                                                                                                            <identifier:sub_obj_off sym level: 11 namespace:1>
                                                                                                        <-:-= sym level: 11 namespace:1>
                                                                                                        <&primary_expression ns:1>
                                                                                                            <identifier:struct_member_size sym level: 11 namespace:1>
                                                                                                <;:; sym level: 11 namespace:1>
                                                                                        <right_brace:} sym level: 11 namespace:1>
                                                                        <right_brace:} sym level: 9 namespace:1>
                                                        <right_brace:} sym level: 7 namespace:1>
                                                <KW_else:else sym level: 6 namespace:1>
                                                <statement ns:1>
                                                    <&if_stmt ns:1>
                                                        <KW_if:if sym level: 7 namespace:1>
                                                        <(:( sym level: 7 namespace:1>
                                                        <&equality_expr ns:1>
                                                            <&postfix_expr ns:1>
                                                                <&primary_expression ns:1>
                                                                    <identifier:actual_type sym level: 7 namespace:1>
                                                                <->:-> sym level: 7 namespace:1>
                                                                <identifier:typ_category sym level: 7 namespace:0>
                                                            <==:== sym level: 7 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <identifier:TP_UNION sym level: 7 namespace:1>
                                                        <):) sym level: 7 namespace:1>
                                                        <statement ns:1>
                                                            <compound_stmt ns:1>
                                                                <left_brace:{ sym level: 8 namespace:1>
                                                                <declaration ns:1>
                                                                    <&declaration_spec ns:1>
                                                                        <&type_spec ns:1>
                                                                            <&typedef_name ns:1>
                                                                                <identifier:VEC sym level: 8 namespace:1>
                                                                    <&init_decl_list ns:1>
                                                                        <&init_decl ns:1>
                                                                            <&declarator ns:1>
                                                                                <&pointer ns:1>
                                                                                    <*:* sym level: 8 namespace:1>
                                                                                <&direct_declarator ns:1>
                                                                                    <identifier:struct_member_list sym level: 8 namespace:1>
                                                                            <=:= sym level: 8 namespace:1>
                                                                            <&initializer ns:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <(:( sym level: 8 namespace:1>
                                                                                        <&cast_expr ns:1>
                                                                                            <(:( sym level: 8 namespace:1>
                                                                                            <&type_name ns:1>
                                                                                                <&spec_qual_list ns:1>
                                                                                                    <&type_spec ns:1>
                                                                                                        <&typedef_name ns:1>
                                                                                                            <identifier:TP_SU sym level: 8 namespace:1>
                                                                                                <&abstract_declarator ns:1>
                                                                                                    <&pointer ns:1>
                                                                                                        <*:* sym level: 8 namespace:1>
                                                                                            <):) sym level: 8 namespace:1>
                                                                                            <&primary_expression ns:1>
                                                                                                <identifier:actual_type sym level: 8 namespace:1>
                                                                                        <):) sym level: 8 namespace:1>
                                                                                    <->:-> sym level: 8 namespace:1>
                                                                                    <identifier:members sym level: 8 namespace:0>
                                                                    <;:; sym level: 8 namespace:1>
                                                                <declaration ns:1>
                                                                    <&declaration_spec ns:1>
                                                                        <&type_spec ns:1>
                                                                            <&typedef_name ns:1>
                                                                                <identifier:TP_SU_MEMBER sym level: 8 namespace:1>
                                                                    <&init_decl_list ns:1>
                                                                        <&init_decl ns:1>
                                                                            <&declarator ns:1>
                                                                                <&pointer ns:1>
                                                                                    <*:* sym level: 8 namespace:1>
                                                                                <&direct_declarator ns:1>
                                                                                    <identifier:struct_member sym level: 8 namespace:1>
                                                                            <=:= sym level: 8 namespace:1>
                                                                            <&initializer ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <(:( sym level: 8 namespace:1>
                                                                                    <&conditional_expr ns:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <(:( sym level: 8 namespace:1>
                                                                                            <&logical_and_expr ns:1>
                                                                                                <&equality_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <identifier:struct_member_list sym level: 8 namespace:1>
                                                                                                    <!=:!= sym level: 8 namespace:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <integer_constant:0 sym level: 8 namespace:1>
                                                                                                <double_ampersand:&& sym level: 8 namespace:1>
                                                                                                <&relational_expr ns:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <integer_constant:0 sym level: 8 namespace:1>
                                                                                                    <<:< sym level: 8 namespace:1>
                                                                                                    <&primary_expression ns:1>
                                                                                                        <(:( sym level: 8 namespace:1>
                                                                                                        <&postfix_expr ns:1>
                                                                                                            <&primary_expression ns:1>
                                                                                                                <identifier:struct_member_list sym level: 8 namespace:1>
                                                                                                            <->:-> sym level: 8 namespace:1>
                                                                                                            <identifier:len sym level: 8 namespace:0>
                                                                                                        <):) sym level: 8 namespace:1>
                                                                                            <):) sym level: 8 namespace:1>
                                                                                        <?:? sym level: 8 namespace:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <(:( sym level: 8 namespace:1>
                                                                                            <&postfix_expr ns:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <identifier:struct_member_list sym level: 8 namespace:1>
                                                                                                <->:-> sym level: 8 namespace:1>
                                                                                                <identifier:data sym level: 8 namespace:0>
                                                                                                <[:[ sym level: 8 namespace:1>
                                                                                                <&primary_expression ns:1>
                                                                                                    <integer_constant:0 sym level: 8 namespace:1>
                                                                                                <]:] sym level: 8 namespace:1>
                                                                                            <):) sym level: 8 namespace:1>
                                                                                        <colon:: sym level: 8 namespace:1>
                                                                                        <&primary_expression ns:1>
                                                                                            <integer_constant:0 sym level: 8 namespace:1>
                                                                                    <):) sym level: 8 namespace:1>
                                                                    <;:; sym level: 8 namespace:1>
                                                                <statement ns:1>
                                                                    <expr_stmt ns:1>
                                                                        <&assignment_expr ns:1>
                                                                            <&primary_expression ns:1>
                                                                                <identifier:res_vec sym level: 8 namespace:1>
                                                                            <=:= sym level: 8 namespace:1>
                                                                            <&postfix_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:Type_VEC_get_sub_obj_off_element_type sym level: 8 namespace:1>
                                                                                <(:( sym level: 8 namespace:1>
                                                                                <&postfix_expr ns:1>
                                                                                    <&primary_expression ns:1>
                                                                                        <identifier:struct_member sym level: 8 namespace:1>
                                                                                    <->:-> sym level: 8 namespace:1>
                                                                                    <identifier:type_vec sym level: 8 namespace:0>
                                                                                <,:, sym level: 8 namespace:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:sub_obj_off sym level: 8 namespace:1>
                                                                                <):) sym level: 8 namespace:1>
                                                                        <;:; sym level: 8 namespace:1>
                                                                <right_brace:} sym level: 8 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:res_vec sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:print_type_vec sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <&typedef_name ns:1>
                                            <identifier:VEC sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&pointer ns:1>
                                        <*:* sym level: 2 namespace:1>
                                    <&direct_declarator ns:1>
                                        <identifier:type_vec sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:printf sym level: 2 namespace:1>
                            <(:( sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <string:"<" sym level: 2 namespace:1>
                            <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&for_stmt ns:1>
                        <KW_for:for sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <declaration ns:1>
                            <&declaration_spec ns:1>
                                <&type_spec ns:1>
                                    <KW_int:int sym level: 3 namespace:1>
                            <&init_decl_list ns:1>
                                <&init_decl ns:1>
                                    <&declarator ns:1>
                                        <&direct_declarator ns:1>
                                            <identifier:i sym level: 3 namespace:1>
                                    <=:= sym level: 3 namespace:1>
                                    <&initializer ns:1>
                                        <&additive_expr ns:1>
                                            <&primary_expression ns:1>
                                                <(:( sym level: 3 namespace:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:type_vec sym level: 3 namespace:1>
                                                    <->:-> sym level: 3 namespace:1>
                                                    <identifier:len sym level: 3 namespace:0>
                                                <):) sym level: 3 namespace:1>
                                            <-:- sym level: 3 namespace:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:1 sym level: 3 namespace:1>
                            <;:; sym level: 3 namespace:1>
                        <&relational_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <>=:>= sym level: 3 namespace:1>
                            <&primary_expression ns:1>
                                <integer_constant:0 sym level: 3 namespace:1>
                        <;:; sym level: 3 namespace:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:i sym level: 3 namespace:1>
                            <--:-- sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <&typedef_name ns:1>
                                                <identifier:M_TYPE sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 4 namespace:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:tmpt sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&cast_expr ns:1>
                                                    <(:( sym level: 4 namespace:1>
                                                    <&type_name ns:1>
                                                        <&spec_qual_list ns:1>
                                                            <&type_spec ns:1>
                                                                <&typedef_name ns:1>
                                                                    <identifier:M_TYPE sym level: 4 namespace:1>
                                                        <&abstract_declarator ns:1>
                                                            <&pointer ns:1>
                                                                <*:* sym level: 4 namespace:1>
                                                    <):) sym level: 4 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <(:( sym level: 4 namespace:1>
                                                        <&conditional_expr ns:1>
                                                            <&primary_expression ns:1>
                                                                <(:( sym level: 4 namespace:1>
                                                                <&logical_and_expr ns:1>
                                                                    <&equality_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:type_vec sym level: 4 namespace:1>
                                                                        <!=:!= sym level: 4 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <integer_constant:0 sym level: 4 namespace:1>
                                                                    <double_ampersand:&& sym level: 4 namespace:1>
                                                                    <&relational_expr ns:1>
                                                                        <&primary_expression ns:1>
                                                                            <identifier:i sym level: 4 namespace:1>
                                                                        <<:< sym level: 4 namespace:1>
                                                                        <&primary_expression ns:1>
                                                                            <(:( sym level: 4 namespace:1>
                                                                            <&postfix_expr ns:1>
                                                                                <&primary_expression ns:1>
                                                                                    <identifier:type_vec sym level: 4 namespace:1>
                                                                                <->:-> sym level: 4 namespace:1>
                                                                                <identifier:len sym level: 4 namespace:0>
                                                                            <):) sym level: 4 namespace:1>
                                                                <):) sym level: 4 namespace:1>
                                                            <?:? sym level: 4 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <(:( sym level: 4 namespace:1>
                                                                <&postfix_expr ns:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:type_vec sym level: 4 namespace:1>
                                                                    <->:-> sym level: 4 namespace:1>
                                                                    <identifier:data sym level: 4 namespace:0>
                                                                    <[:[ sym level: 4 namespace:1>
                                                                    <&primary_expression ns:1>
                                                                        <identifier:i sym level: 4 namespace:1>
                                                                    <]:] sym level: 4 namespace:1>
                                                                <):) sym level: 4 namespace:1>
                                                            <colon:: sym level: 4 namespace:1>
                                                            <&primary_expression ns:1>
                                                                <integer_constant:0 sym level: 4 namespace:1>
                                                        <):) sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:tmpt sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <expr_stmt ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:print_type sym level: 5 namespace:1>
                                                    <(:( sym level: 5 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:tmpt sym level: 5 namespace:1>
                                                    <):) sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                <statement ns:1>
                                    <&if_stmt ns:1>
                                        <KW_if:if sym level: 5 namespace:1>
                                        <(:( sym level: 5 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:i sym level: 5 namespace:1>
                                        <):) sym level: 5 namespace:1>
                                        <statement ns:1>
                                            <expr_stmt ns:1>
                                                <&postfix_expr ns:1>
                                                    <&primary_expression ns:1>
                                                        <identifier:printf sym level: 5 namespace:1>
                                                    <(:( sym level: 5 namespace:1>
                                                    <&primary_expression ns:1>
                                                        <string:"," sym level: 5 namespace:1>
                                                    <):) sym level: 5 namespace:1>
                                                <;:; sym level: 5 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:printf sym level: 2 namespace:1>
                            <(:( sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <string:">\n" sym level: 2 namespace:1>
                            <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
finish print ast tree
    start declaration line:20
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:22
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:23
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:25
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                    start struct union
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
                        finish declarator
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
                            start array
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            finish array
                        finish declarator
                    finish struct union
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:35
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:40
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:42
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:48
        start specify or qualify node
        finish specify or qualify node
    finish declaration
    start declaration line:49
        start specify or qualify node
        finish specify or qualify node
    finish declaration
    start declaration line:50
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:51
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:52
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    finish array
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                        start add
                            start mul
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                                start unary
                                    start specify or qualify node
                                    finish specify or qualify node
                                <Type>:< signed_int >
                                end unary
                            <Type>:< signed_int >
                            end mul
                            start mul
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                                start unary
                                    start specify or qualify node
                                    finish specify or qualify node
                                <Type>:< signed_int >
                                end unary
                            <Type>:< signed_int >
                            end mul
                            start unary
                                start primary expr
                                    start primary expr
                                    <Type>:< unsigned_long >
                                    end primary expr
                                <Type>:< unsigned_long >
                                end primary expr
                            <Type>:< signed_int >
                            end unary
                        <Type>:< signed_int >
                        end add
                    finish array
                finish declarator
            finish struct union
        finish specify or qualify node
    finish declaration
    start declaration line:96
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:98
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:100
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
            finish func
        finish declarator
    finish declaration
    start declaration line:102
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:104
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:106
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:108
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:111
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:115
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:118
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:122
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:125
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:128
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:130
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:132
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:135
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:138
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:141
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:144
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:146
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:149
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:151
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
            finish func
        finish declarator
    finish declaration
    start declaration line:153
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:155
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:157
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:159
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:161
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:165
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:169
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:172
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:174
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:176
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:178
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:180
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:182
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:184
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:186
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:188
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:191
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:194
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:196
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:198
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:204
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:206
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:208
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:210
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:223
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
            finish func
        finish declarator
    finish declaration
    start declaration line:232
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:233
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:234
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:235
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:236
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:237
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:238
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:239
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:241
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:242
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:243
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:244
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:245
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:246
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:247
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:248
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:250
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:251
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:252
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:253
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:254
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:255
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:256
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:257
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:259
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:260
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:262
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:266
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:267
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:268
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:274
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:276
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                    start struct union
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
                        finish declarator
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
                            start array
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            finish array
                        finish declarator
                    finish struct union
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:289
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:294
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:299
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:304
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:311
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
            finish func
        finish declarator
    finish declaration
    start declaration line:313
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:315
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:317
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:319
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:321
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:326
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:331
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:336
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:341
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:344
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:347
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start specify or qualify node
                    finish specify or qualify node
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:350
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:352
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start if expr
            start equal expr
                start primary expr
                <Type>:< unsigned_long >
                end primary expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            <Type>:< signed_int >
            end equal expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start while expr
            start equal expr
                start mul
                    start primary expr
                    <Type>:< unsigned_long >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< unsigned_long >
                end mul
                start primary expr
                <Type>:< signed_int >
                end primary expr
            <Type>:< signed_int >
            end equal expr
            start compound expr
                start expr expr
                    start assignment expr
                        start primary expr
                        <Type>:< unsigned_long >
                        end primary expr
                        start mul
                            start primary expr
                            <Type>:< unsigned_long >
                            end primary expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        <Type>:< unsigned_long >
                        end mul
                    <Type>:< unsigned_long >
                    end assignment expr
                end comopound stmt
            end while stmt
            start if expr
                start equal expr
                    start primary expr
                    <Type>:< unsigned_long >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end equal expr
                start return expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                end return stmt
                start return expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                end return stmt
            end if stmt
        end comopound stmt
    start declaration line:381
        start specify or qualify node
            start enum
            finish enum
        finish specify or qualify node
    finish declaration
    start declaration line:501
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:502
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:507
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:514
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                    finish array
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                    finish array
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                    finish array
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:515
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:516
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:518
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                    finish array
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:519
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                    finish array
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:520
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:521
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:523
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start expr expr
            start assignment expr
                start postfix expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end postfix expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            <Type>:< signed_int >
            end assignment expr
            start expr expr
                start assignment expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< point , signed_char >
                    end postfix expr
                    start primary expr
                    <Type>:< point , signed_char >
                    end primary expr
                <Type>:< point , signed_char >
                end assignment expr
                start expr expr
                    start assignment expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< unsigned_int >
                        end postfix expr
                        start primary expr
                        <Type>:< unsigned_int >
                        end primary expr
                    <Type>:< unsigned_int >
                    end assignment expr
                    start expr expr
                        start assignment expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< point , signed_char >
                            end postfix expr
                            start primary expr
                            <Type>:< point , signed_char >
                            end primary expr
                        <Type>:< point , signed_char >
                        end assignment expr
                        start return expr
                            start cast
                                start specify or qualify node
                                finish specify or qualify node
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< point , void >
                            end cast
                        end return stmt
                    end comopound stmt
    start declaration line:544
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    finish array
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:555
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                    finish array
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:561
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:564
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:565
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start expr expr
            start postfix expr
                start primary expr
                <Type>:< function , point , extern , void >
                end primary expr
                start primary expr
                <Type>:< point , void >
                end primary expr
                start primary expr
                <Type>:< signed_char >
                end primary expr
                start primary expr
                <Type>:< unsigned_long >
                end primary expr
            <Type>:< point , extern , void >
            end postfix expr
        end comopound stmt
    start declaration line:573
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:583
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:584
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:585
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:586
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:587
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:588
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:589
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start if expr
            start logical and expr
                start unary
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end unary
                start unary
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end unary
            <Type>:< signed_int >
            end logical and expr
            start return expr
            end return stmt
        end if stmt
        start for expr
            start declaration line:593
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start primary expr
                <Type>:< signed_int >
                end primary expr
            finish declaration
            start relation expr
                start primary expr
                <Type>:< unsigned_long >
                end primary expr
                start primary expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_long >
                    end postfix expr
                <Type>:< unsigned_long >
                end primary expr
            <Type>:< signed_int >
            end relation expr
            start unary
                start primary expr
                <Type>:< unsigned_long >
                end primary expr
            <Type>:< unsigned_long >
            end unary
            start compound expr
                start expr expr
                    start postfix expr
                        start primary expr
                        <Type>:< function , void >
                        end primary expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                        start primary expr
                            start condition expr
                                start primary expr
                                    start logical and expr
                                        start equal expr
                                            start primary expr
                                            <Type>:< point , struct >
                                            end primary expr
                                            start primary expr
                                            <Type>:< signed_int >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end equal expr
                                        start relation expr
                                            start primary expr
                                            <Type>:< unsigned_long >
                                            end primary expr
                                            start primary expr
                                                start postfix expr
                                                    start primary expr
                                                    <Type>:< point , struct >
                                                    end primary expr
                                                <Type>:< unsigned_long >
                                                end postfix expr
                                            <Type>:< unsigned_long >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end relation expr
                                    <Type>:< signed_int >
                                    end logical and expr
                                <Type>:< signed_int >
                                end primary expr
                                start primary expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                        start primary expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                    <Type>:< point , void >
                                    end postfix expr
                                <Type>:< point , void >
                                end primary expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            <Type>:< point , void >
                            end condition expr
                        <Type>:< point , void >
                        end primary expr
                    <Type>:< void >
                    end postfix expr
                end comopound stmt
            end for stmt
        end comopound stmt
    start declaration line:597
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:611
        start specify or qualify node
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:615
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
            finish func
        finish declarator
    finish declaration
    start declaration line:616
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
            finish func
        finish declarator
    finish declaration
    start declaration line:620
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:628
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start return expr
            start mul
                start primary expr
                <Type>:< unsigned_long_long_int >
                end primary expr
                start primary expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_long_long_int >
                    end postfix expr
                <Type>:< unsigned_long_long_int >
                end primary expr
            <Type>:< unsigned_long_long_int >
            end mul
        end return stmt
    end comopound stmt
    start declaration line:635
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
            finish func
        finish declarator
    finish declaration
    start declaration line:636
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start func
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
                        finish declarator
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
                        finish declarator
                    finish func
                    start declarator
                    finish declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:637
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start func
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
                        finish declarator
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
                        finish declarator
                    finish func
                    start declarator
                    finish declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:638
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start func
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
                        finish declarator
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
                        finish declarator
                    finish func
                    start declarator
                    finish declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:639
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:641
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:642
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
            finish func
        finish declarator
    finish declaration
    start declaration line:645
        start specify or qualify node
            start enum
            finish enum
        finish specify or qualify node
    finish declaration
    start declaration line:655
        start specify or qualify node
            start enum
            finish enum
        finish specify or qualify node
    finish declaration
    start declaration line:692
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                    start struct union
                        start specify or qualify node
                            start struct union
                                start specify or qualify node
                                finish specify or qualify node
                                start declarator
                                finish declarator
                                start specify or qualify node
                                finish specify or qualify node
                                start declarator
                                finish declarator
                                start specify or qualify node
                                finish specify or qualify node
                                start declarator
                                finish declarator
                                start specify or qualify node
                                finish specify or qualify node
                                start declarator
                                finish declarator
                            finish struct union
                        finish specify or qualify node
                        start specify or qualify node
                            start struct union
                                start specify or qualify node
                                finish specify or qualify node
                                start declarator
                                finish declarator
                                start specify or qualify node
                                finish specify or qualify node
                                start declarator
                                finish declarator
                            finish struct union
                        finish specify or qualify node
                    finish struct union
                finish specify or qualify node
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:708
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:720
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:730
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                    start struct union
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
                        finish declarator
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
                        finish declarator
                    finish struct union
                finish specify or qualify node
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:743
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:751
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:760
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:765
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:772
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    finish array
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    finish array
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    finish array
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:793
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:798
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    finish array
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    finish array
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:804
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:807
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:808
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:810
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:812
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:813
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:814
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:815
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:816
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:817
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:818
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:819
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:820
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:821
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:822
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:823
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:824
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:826
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:827
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:828
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:829
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:830
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:832
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:833
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:834
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:835
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:836
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:837
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:840
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:841
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:842
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:845
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish func
        finish declarator
    finish declaration
    start declaration line:847
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start array
                start primary expr
                <Type>:< signed_int >
                end primary expr
            finish array
        finish declarator
    finish declaration
    start declaration line:848
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start array
                start add
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end add
            finish array
        finish declarator
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
        start primary expr
        <Type>:< signed_int >
        end primary expr
    finish declaration
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start declaration line:852
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start primary expr
                start condition expr
                    start primary expr
                        start logical and expr
                            start equal expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            <Type>:< signed_int >
                            end equal expr
                            start relation expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                                start primary expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                    <Type>:< unsigned_long >
                                    end postfix expr
                                <Type>:< unsigned_long >
                                end primary expr
                            <Type>:< signed_int >
                            end relation expr
                        <Type>:< signed_int >
                        end logical and expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        <Type>:< point , void >
                        end postfix expr
                    <Type>:< point , void >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< point , void >
                end condition expr
            <Type>:< point , void >
            end primary expr
        finish declaration
        start if expr
            start equal expr
                start postfix expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end postfix expr
                start primary expr
                <Type>:< const , signed_int >
                end primary expr
            <Type>:< signed_int >
            end equal expr
            start compound expr
                start declaration line:854
                    start specify or qualify node
                    finish specify or qualify node
                    start declarator
                    finish declarator
                    start postfix expr
                        start primary expr
                            start cast
                                start specify or qualify node
                                finish specify or qualify node
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< point , struct >
                            end cast
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< point , struct >
                    end postfix expr
                finish declaration
                start return expr
                    start postfix expr
                        start primary expr
                        <Type>:< function , bool >
                        end primary expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< bool >
                    end postfix expr
                end return stmt
            end comopound stmt
        end if stmt
        start declaration line:857
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start primary expr
                start condition expr
                    start primary expr
                        start logical and expr
                            start equal expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            <Type>:< signed_int >
                            end equal expr
                            start relation expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                                start primary expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                    <Type>:< unsigned_long >
                                    end postfix expr
                                <Type>:< unsigned_long >
                                end primary expr
                            <Type>:< signed_int >
                            end relation expr
                        <Type>:< signed_int >
                        end logical and expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        <Type>:< point , void >
                        end postfix expr
                    <Type>:< point , void >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< point , void >
                end condition expr
            <Type>:< point , void >
            end primary expr
        finish declaration
        start if expr
            start equal expr
                start postfix expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end postfix expr
                start primary expr
                <Type>:< const , signed_int >
                end primary expr
            <Type>:< signed_int >
            end equal expr
            start compound expr
                start declaration line:859
                    start specify or qualify node
                    finish specify or qualify node
                    start declarator
                    finish declarator
                    start postfix expr
                        start primary expr
                            start cast
                                start specify or qualify node
                                finish specify or qualify node
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< point , struct >
                            end cast
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< point , struct >
                    end postfix expr
                finish declaration
                start return expr
                    start postfix expr
                        start primary expr
                        <Type>:< function , bool >
                        end primary expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< bool >
                    end postfix expr
                end return stmt
            end comopound stmt
        end if stmt
        start if expr
            start equal expr
                start primary expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_long >
                    end postfix expr
                <Type>:< unsigned_long >
                end primary expr
                start primary expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_long >
                    end postfix expr
                <Type>:< unsigned_long >
                end primary expr
            <Type>:< signed_int >
            end equal expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start for expr
            start declaration line:864
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start primary expr
                <Type>:< signed_int >
                end primary expr
            finish declaration
            start relation expr
                start primary expr
                <Type>:< unsigned_long >
                end primary expr
                start primary expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_long >
                    end postfix expr
                <Type>:< unsigned_long >
                end primary expr
            <Type>:< signed_int >
            end relation expr
            start unary
                start primary expr
                <Type>:< unsigned_long >
                end primary expr
            <Type>:< unsigned_long >
            end unary
            start compound expr
                start declaration line:865
                    start specify or qualify node
                    finish specify or qualify node
                    start declarator
                    finish declarator
                    start postfix expr
                        start primary expr
                        <Type>:< function , bool >
                        end primary expr
                        start primary expr
                            start condition expr
                                start primary expr
                                    start logical and expr
                                        start equal expr
                                            start primary expr
                                            <Type>:< point , struct >
                                            end primary expr
                                            start primary expr
                                            <Type>:< signed_int >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end equal expr
                                        start relation expr
                                            start primary expr
                                            <Type>:< unsigned_long >
                                            end primary expr
                                            start primary expr
                                                start postfix expr
                                                    start primary expr
                                                    <Type>:< point , struct >
                                                    end primary expr
                                                <Type>:< unsigned_long >
                                                end postfix expr
                                            <Type>:< unsigned_long >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end relation expr
                                    <Type>:< signed_int >
                                    end logical and expr
                                <Type>:< signed_int >
                                end primary expr
                                start primary expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                        start primary expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                    <Type>:< point , void >
                                    end postfix expr
                                <Type>:< point , void >
                                end primary expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            <Type>:< point , void >
                            end condition expr
                        <Type>:< point , void >
                        end primary expr
                        start primary expr
                            start condition expr
                                start primary expr
                                    start logical and expr
                                        start equal expr
                                            start primary expr
                                            <Type>:< point , struct >
                                            end primary expr
                                            start primary expr
                                            <Type>:< signed_int >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end equal expr
                                        start relation expr
                                            start primary expr
                                            <Type>:< unsigned_long >
                                            end primary expr
                                            start primary expr
                                                start postfix expr
                                                    start primary expr
                                                    <Type>:< point , struct >
                                                    end primary expr
                                                <Type>:< unsigned_long >
                                                end postfix expr
                                            <Type>:< unsigned_long >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end relation expr
                                    <Type>:< signed_int >
                                    end logical and expr
                                <Type>:< signed_int >
                                end primary expr
                                start primary expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                        start primary expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                    <Type>:< point , void >
                                    end postfix expr
                                <Type>:< point , void >
                                end primary expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            <Type>:< point , void >
                            end condition expr
                        <Type>:< point , void >
                        end primary expr
                    <Type>:< bool >
                    end postfix expr
                finish declaration
                start if expr
                    start unary
                        start primary expr
                        <Type>:< bool >
                        end primary expr
                    <Type>:< signed_int >
                    end unary
                    start return expr
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    end return stmt
                end if stmt
            end comopound stmt
        end for stmt
        start return expr
            start primary expr
            <Type>:< signed_int >
            end primary expr
        end return stmt
    end comopound stmt
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start if expr
            start logical and expr
                start equal expr
                    start primary expr
                    <Type>:< point , void >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end equal expr
                start equal expr
                    start primary expr
                    <Type>:< point , void >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end equal expr
            <Type>:< signed_int >
            end logical and expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start declaration line:874
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start cast
                start specify or qualify node
                finish specify or qualify node
                start primary expr
                <Type>:< point , void >
                end primary expr
            <Type>:< point , struct >
            end cast
        finish declaration
        start declaration line:875
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start cast
                start specify or qualify node
                finish specify or qualify node
                start primary expr
                <Type>:< point , void >
                end primary expr
            <Type>:< point , struct >
            end cast
        finish declaration
        start if expr
            start equal expr
                start postfix expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< bool >
                end postfix expr
                start postfix expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< bool >
                end postfix expr
            <Type>:< signed_int >
            end equal expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
            start compound expr
                start if expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< bool >
                    end postfix expr
                    start compound expr
                        start if expr
                            start logical and expr
                                start primary expr
                                    start logical and expr
                                        start primary expr
                                            start logical and expr
                                                start relation expr
                                                    start postfix expr
                                                        start primary expr
                                                        <Type>:< point , struct >
                                                        end primary expr
                                                    <Type>:< signed_int >
                                                    end postfix expr
                                                    start primary expr
                                                    <Type>:< const , signed_int >
                                                    end primary expr
                                                <Type>:< signed_int >
                                                end relation expr
                                                start relation expr
                                                    start postfix expr
                                                        start primary expr
                                                        <Type>:< point , struct >
                                                        end primary expr
                                                    <Type>:< signed_int >
                                                    end postfix expr
                                                    start primary expr
                                                    <Type>:< const , signed_int >
                                                    end primary expr
                                                <Type>:< signed_int >
                                                end relation expr
                                            <Type>:< signed_int >
                                            end logical and expr
                                        <Type>:< signed_int >
                                        end primary expr
                                        start equal expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                        <Type>:< signed_int >
                                        end equal expr
                                    <Type>:< signed_int >
                                    end logical and expr
                                <Type>:< signed_int >
                                end primary expr
                                start equal expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                    <Type>:< unsigned_long >
                                    end postfix expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                    <Type>:< unsigned_long >
                                    end postfix expr
                                <Type>:< signed_int >
                                end equal expr
                                start equal expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                    <Type>:< unsigned_char >
                                    end postfix expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                    <Type>:< unsigned_char >
                                    end postfix expr
                                <Type>:< signed_int >
                                end equal expr
                                start equal expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                    <Type>:< unsigned_char >
                                    end postfix expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                    <Type>:< unsigned_char >
                                    end postfix expr
                                <Type>:< signed_int >
                                end equal expr
                            <Type>:< signed_int >
                            end logical and expr
                            start return expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            end return stmt
                            start return expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            end return stmt
                        end if stmt
                    end comopound stmt
                    start compound expr
                        start if expr
                            start equal expr
                                start postfix expr
                                    start primary expr
                                    <Type>:< point , struct >
                                    end primary expr
                                <Type>:< signed_int >
                                end postfix expr
                                start postfix expr
                                    start primary expr
                                    <Type>:< point , struct >
                                    end primary expr
                                <Type>:< signed_int >
                                end postfix expr
                            <Type>:< signed_int >
                            end equal expr
                            start return expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            end return stmt
                            start compound expr
                                start switch expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                    <Type>:< signed_int >
                                    end postfix expr
                                end switch stmt
                            end comopound stmt
                        end if stmt
                    end comopound stmt
                end if stmt
            end comopound stmt
        end if stmt
        start return expr
            start primary expr
            <Type>:< signed_int >
            end primary expr
        end return stmt
    end comopound stmt
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start if expr
            start logical and expr
                start unary
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end unary
                start equal expr
                    start primary expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< unsigned_long >
                        end postfix expr
                    <Type>:< unsigned_long >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end equal expr
            <Type>:< signed_int >
            end logical and expr
            start compound expr
                start return expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                end return stmt
            end comopound stmt
        end if stmt
        start for expr
            start declaration line:966
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start primary expr
                <Type>:< signed_int >
                end primary expr
            finish declaration
            start relation expr
                start primary expr
                <Type>:< unsigned_long >
                end primary expr
                start primary expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_long >
                    end postfix expr
                <Type>:< unsigned_long >
                end primary expr
            <Type>:< signed_int >
            end relation expr
            start unary
                start primary expr
                <Type>:< unsigned_long >
                end primary expr
            <Type>:< unsigned_long >
            end unary
            start compound expr
                start declaration line:967
                    start specify or qualify node
                    finish specify or qualify node
                    start declarator
                    finish declarator
                    start primary expr
                        start condition expr
                            start primary expr
                                start logical and expr
                                    start equal expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                        start primary expr
                                        <Type>:< signed_int >
                                        end primary expr
                                    <Type>:< signed_int >
                                    end equal expr
                                    start relation expr
                                        start primary expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                        start primary expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< unsigned_long >
                                            end postfix expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                    <Type>:< signed_int >
                                    end relation expr
                                <Type>:< signed_int >
                                end logical and expr
                            <Type>:< signed_int >
                            end primary expr
                            start primary expr
                                start postfix expr
                                    start primary expr
                                    <Type>:< point , struct >
                                    end primary expr
                                    start primary expr
                                    <Type>:< unsigned_long >
                                    end primary expr
                                <Type>:< point , void >
                                end postfix expr
                            <Type>:< point , void >
                            end primary expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        <Type>:< point , void >
                        end condition expr
                    <Type>:< point , void >
                    end primary expr
                finish declaration
                start if expr
                    start logical and expr
                        start equal expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< signed_int >
                            end postfix expr
                            start primary expr
                            <Type>:< const , signed_int >
                            end primary expr
                        <Type>:< signed_int >
                        end equal expr
                        start postfix expr
                            start primary expr
                                start cast
                                    start specify or qualify node
                                    finish specify or qualify node
                                    start primary expr
                                    <Type>:< point , struct >
                                    end primary expr
                                <Type>:< point , struct >
                                end cast
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< bool >
                        end postfix expr
                    <Type>:< signed_int >
                    end logical and expr
                    start compound expr
                        start return expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        end return stmt
                    end comopound stmt
                end if stmt
            end comopound stmt
        end for stmt
        start return expr
            start primary expr
            <Type>:< signed_int >
            end primary expr
        end return stmt
    end comopound stmt
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start if expr
            start logical and expr
                start unary
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end unary
                start equal expr
                    start primary expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< unsigned_long >
                        end postfix expr
                    <Type>:< unsigned_long >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end equal expr
            <Type>:< signed_int >
            end logical and expr
            start compound expr
                start return expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                end return stmt
            end comopound stmt
        end if stmt
        start declaration line:979
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start postfix expr
                start primary expr
                <Type>:< function , point , struct >
                end primary expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
            <Type>:< point , struct >
            end postfix expr
        finish declaration
        start if expr
            start unary
                start primary expr
                <Type>:< point , struct >
                end primary expr
            <Type>:< signed_int >
            end unary
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start if expr
            start equal expr
                start postfix expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end postfix expr
                start primary expr
                <Type>:< const , signed_int >
                end primary expr
            <Type>:< signed_int >
            end equal expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start declaration line:984
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start postfix expr
                start primary expr
                <Type>:< function , point , struct >
                end primary expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            <Type>:< point , struct >
            end postfix expr
        finish declaration
        start for expr
            start declaration line:985
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start add
                    start primary expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< unsigned_long >
                        end postfix expr
                    <Type>:< unsigned_long >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< unsigned_long >
                end add
            finish declaration
            start relation expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            <Type>:< signed_int >
            end relation expr
            start postfix expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            <Type>:< signed_int >
            end postfix expr
            start compound expr
                start declaration line:986
                    start specify or qualify node
                    finish specify or qualify node
                    start declarator
                    finish declarator
                    start primary expr
                        start condition expr
                            start primary expr
                                start logical and expr
                                    start equal expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                        start primary expr
                                        <Type>:< signed_int >
                                        end primary expr
                                    <Type>:< signed_int >
                                    end equal expr
                                    start relation expr
                                        start primary expr
                                        <Type>:< signed_int >
                                        end primary expr
                                        start primary expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< unsigned_long >
                                            end postfix expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                    <Type>:< signed_int >
                                    end relation expr
                                <Type>:< signed_int >
                                end logical and expr
                            <Type>:< signed_int >
                            end primary expr
                            start primary expr
                                start postfix expr
                                    start primary expr
                                    <Type>:< point , struct >
                                    end primary expr
                                    start primary expr
                                    <Type>:< signed_int >
                                    end primary expr
                                <Type>:< point , void >
                                end postfix expr
                            <Type>:< point , void >
                            end primary expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        <Type>:< point , void >
                        end condition expr
                    <Type>:< point , void >
                    end primary expr
                finish declaration
                start if expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< bool >
                    end postfix expr
                    start continue expr
                    end continue stmt
                end if stmt
                start if expr
                    start logical and expr
                        start equal expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< signed_int >
                            end postfix expr
                            start primary expr
                            <Type>:< const , signed_int >
                            end primary expr
                        <Type>:< signed_int >
                        end equal expr
                        start postfix expr
                            start primary expr
                                start cast
                                    start specify or qualify node
                                    finish specify or qualify node
                                    start primary expr
                                    <Type>:< point , struct >
                                    end primary expr
                                <Type>:< point , struct >
                                end cast
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< bool >
                        end postfix expr
                    <Type>:< signed_int >
                    end logical and expr
                    start compound expr
                        start return expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        end return stmt
                    end comopound stmt
                end if stmt
                start if expr
                    start equal expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< signed_int >
                        end postfix expr
                        start primary expr
                        <Type>:< const , signed_int >
                        end primary expr
                    <Type>:< signed_int >
                    end equal expr
                    start compound expr
                        start if expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< bool >
                            end postfix expr
                            start return expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            end return stmt
                            start return expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            end return stmt
                        end if stmt
                    end comopound stmt
                end if stmt
            end comopound stmt
        end for stmt
        start return expr
            start primary expr
            <Type>:< signed_int >
            end primary expr
        end return stmt
    end comopound stmt
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start if expr
            start logical and expr
                start unary
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end unary
                start equal expr
                    start primary expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< unsigned_long >
                        end postfix expr
                    <Type>:< unsigned_long >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end equal expr
            <Type>:< signed_int >
            end logical and expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start if expr
            start unary
                start primary expr
                <Type>:< bool >
                end primary expr
            <Type>:< signed_int >
            end unary
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start declaration line:1007
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start postfix expr
                start primary expr
                <Type>:< function , point , struct >
                end primary expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
            <Type>:< point , struct >
            end postfix expr
        finish declaration
        start if expr
            start logical and expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
                start primary expr
                    start logical and expr
                        start equal expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< signed_int >
                            end postfix expr
                            start primary expr
                            <Type>:< const , signed_int >
                            end primary expr
                        <Type>:< signed_int >
                        end equal expr
                        start equal expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< signed_int >
                            end postfix expr
                            start primary expr
                            <Type>:< const , signed_int >
                            end primary expr
                        <Type>:< signed_int >
                        end equal expr
                    <Type>:< signed_int >
                    end logical and expr
                <Type>:< signed_int >
                end primary expr
            <Type>:< signed_int >
            end logical and expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start if expr
            start logical and expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
                start primary expr
                    start logical and expr
                        start equal expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< signed_int >
                            end postfix expr
                            start primary expr
                            <Type>:< const , signed_int >
                            end primary expr
                        <Type>:< signed_int >
                        end equal expr
                        start equal expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< signed_int >
                            end postfix expr
                            start primary expr
                            <Type>:< const , signed_int >
                            end primary expr
                        <Type>:< signed_int >
                        end equal expr
                    <Type>:< signed_int >
                    end logical and expr
                <Type>:< signed_int >
                end primary expr
            <Type>:< signed_int >
            end logical and expr
            start compound expr
                start if expr
                    start equal expr
                        start postfix expr
                            start primary expr
                                start cast
                                    start specify or qualify node
                                    finish specify or qualify node
                                    start primary expr
                                    <Type>:< point , struct >
                                    end primary expr
                                <Type>:< point , struct >
                                end cast
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< bool >
                        end postfix expr
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    <Type>:< signed_int >
                    end equal expr
                    start return expr
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    end return stmt
                end if stmt
            end comopound stmt
        end if stmt
        start if expr
            start logical and expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
                start unary
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< bool >
                    end postfix expr
                <Type>:< signed_int >
                end unary
            <Type>:< signed_int >
            end logical and expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start expr expr
            start assignment expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
                start postfix expr
                    start primary expr
                    <Type>:< function , point , struct >
                    end primary expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< point , struct >
                end postfix expr
            <Type>:< point , struct >
            end assignment expr
            start if expr
                start logical and expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                    start relation expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< unsigned_char >
                        end postfix expr
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    <Type>:< signed_int >
                    end relation expr
                <Type>:< signed_int >
                end logical and expr
                start return expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                end return stmt
            end if stmt
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end comopound stmt
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start if expr
            start unary
                start primary expr
                <Type>:< point , struct >
                end primary expr
            <Type>:< signed_int >
            end unary
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start declaration line:1028
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start primary expr
            <Type>:< signed_int >
            end primary expr
        finish declaration
        start for expr
            start declaration line:1029
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start primary expr
                <Type>:< signed_int >
                end primary expr
            finish declaration
            start relation expr
                start primary expr
                <Type>:< unsigned_long >
                end primary expr
                start primary expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_long >
                    end postfix expr
                <Type>:< unsigned_long >
                end primary expr
            <Type>:< signed_int >
            end relation expr
            start unary
                start primary expr
                <Type>:< unsigned_long >
                end primary expr
            <Type>:< unsigned_long >
            end unary
            start compound expr
                start declaration line:1034
                    start specify or qualify node
                    finish specify or qualify node
                    start declarator
                    finish declarator
                    start primary expr
                        start condition expr
                            start primary expr
                                start logical and expr
                                    start equal expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                        start primary expr
                                        <Type>:< signed_int >
                                        end primary expr
                                    <Type>:< signed_int >
                                    end equal expr
                                    start relation expr
                                        start primary expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                        start primary expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< unsigned_long >
                                            end postfix expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                    <Type>:< signed_int >
                                    end relation expr
                                <Type>:< signed_int >
                                end logical and expr
                            <Type>:< signed_int >
                            end primary expr
                            start primary expr
                                start postfix expr
                                    start primary expr
                                    <Type>:< point , struct >
                                    end primary expr
                                    start primary expr
                                    <Type>:< unsigned_long >
                                    end primary expr
                                <Type>:< point , void >
                                end postfix expr
                            <Type>:< point , void >
                            end primary expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        <Type>:< point , void >
                        end condition expr
                    <Type>:< point , void >
                    end primary expr
                finish declaration
                start if expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< bool >
                    end postfix expr
                    start continue expr
                    end continue stmt
                end if stmt
                start if expr
                    start logical and expr
                        start equal expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< signed_int >
                            end postfix expr
                            start primary expr
                            <Type>:< const , signed_int >
                            end primary expr
                        <Type>:< signed_int >
                        end equal expr
                        start equal expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< signed_int >
                            end postfix expr
                            start primary expr
                            <Type>:< const , NULL pointer constant >
                            end primary expr
                        <Type>:< signed_int >
                        end equal expr
                    <Type>:< signed_int >
                    end logical and expr
                    start expr expr
                        start assignment expr
                            start primary expr
                            <Type>:< unsigned_long >
                            end primary expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        <Type>:< unsigned_long >
                        end assignment expr
                        start if expr
                            start logical and expr
                                start primary expr
                                    start logical and expr
                                        start relation expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                            start primary expr
                                            <Type>:< const , NULL pointer constant >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end relation expr
                                        start relation expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                            start primary expr
                                            <Type>:< const , NULL pointer constant >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end relation expr
                                    <Type>:< signed_int >
                                    end logical and expr
                                <Type>:< signed_int >
                                end primary expr
                                start equal expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                    <Type>:< signed_int >
                                    end postfix expr
                                    start primary expr
                                    <Type>:< const , NULL pointer constant >
                                    end primary expr
                                <Type>:< signed_int >
                                end equal expr
                            <Type>:< signed_int >
                            end logical and expr
                            start compound expr
                                start expr expr
                                    start assignment expr
                                        start primary expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                        start postfix expr
                                            start primary expr
                                            <Type>:< array , extern , unsigned_long >
                                            end primary expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                        <Type>:< extern , unsigned_long >
                                        end postfix expr
                                    <Type>:< unsigned_long >
                                    end assignment expr
                                end comopound stmt
                                start if expr
                                    start logical and expr
                                        start equal expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                            start primary expr
                                            <Type>:< const , NULL pointer constant >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end equal expr
                                        start equal expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                            start primary expr
                                            <Type>:< const , NULL pointer constant >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end equal expr
                                        start equal expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                            start primary expr
                                            <Type>:< const , NULL pointer constant >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end equal expr
                                    <Type>:< signed_int >
                                    end logical and expr
                                    start compound expr
                                        start declaration line:1044
                                            start specify or qualify node
                                            finish specify or qualify node
                                            start declarator
                                            finish declarator
                                            start cast
                                                start specify or qualify node
                                                finish specify or qualify node
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< point , struct >
                                            end cast
                                        finish declaration
                                        start expr expr
                                            start assignment expr
                                                start primary expr
                                                <Type>:< unsigned_long >
                                                end primary expr
                                                start postfix expr
                                                    start primary expr
                                                    <Type>:< point , struct >
                                                    end primary expr
                                                <Type>:< unsigned_long >
                                                end postfix expr
                                            <Type>:< unsigned_long >
                                            end assignment expr
                                        end comopound stmt
                                        start if expr
                                            start equal expr
                                                start postfix expr
                                                    start primary expr
                                                    <Type>:< point , struct >
                                                    end primary expr
                                                <Type>:< signed_int >
                                                end postfix expr
                                                start primary expr
                                                <Type>:< const , NULL pointer constant >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end equal expr
                                            start compound expr
                                                start declaration line:1048
                                                    start specify or qualify node
                                                    finish specify or qualify node
                                                    start declarator
                                                    finish declarator
                                                    start cast
                                                        start specify or qualify node
                                                        finish specify or qualify node
                                                        start primary expr
                                                        <Type>:< point , struct >
                                                        end primary expr
                                                    <Type>:< point , struct >
                                                    end cast
                                                finish declaration
                                                start expr expr
                                                    start assignment expr
                                                        start primary expr
                                                        <Type>:< unsigned_long >
                                                        end primary expr
                                                        start mul
                                                            start primary expr
                                                            <Type>:< unsigned_long >
                                                            end primary expr
                                                            start postfix expr
                                                                start primary expr
                                                                <Type>:< point , struct >
                                                                end primary expr
                                                            <Type>:< unsigned_long >
                                                            end postfix expr
                                                        <Type>:< unsigned_long >
                                                        end mul
                                                    <Type>:< unsigned_long >
                                                    end assignment expr
                                                end comopound stmt
                                                start if expr
                                                    start equal expr
                                                        start postfix expr
                                                            start primary expr
                                                            <Type>:< point , struct >
                                                            end primary expr
                                                        <Type>:< signed_int >
                                                        end postfix expr
                                                        start primary expr
                                                        <Type>:< const , NULL pointer constant >
                                                        end primary expr
                                                    <Type>:< signed_int >
                                                    end equal expr
                                                    start compound expr
                                                        start expr expr
                                                            start assignment expr
                                                                start primary expr
                                                                <Type>:< unsigned_long >
                                                                end primary expr
                                                                start postfix expr
                                                                    start primary expr
                                                                    <Type>:< array , extern , unsigned_long >
                                                                    end primary expr
                                                                    start primary expr
                                                                    <Type>:< const , NULL pointer constant >
                                                                    end primary expr
                                                                <Type>:< extern , unsigned_long >
                                                                end postfix expr
                                                            <Type>:< unsigned_long >
                                                            end assignment expr
                                                        end comopound stmt
                                                    end if stmt
                                                end if stmt
                                            end if stmt
                                        end if stmt
                                    end if stmt
                                end comopound stmt
                            end for stmt
                            start return expr
                                start primary expr
                                <Type>:< unsigned_long >
                                end primary expr
                            end return stmt
                        end comopound stmt
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start if expr
            start logical and expr
                start unary
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end unary
                start equal expr
                    start primary expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< unsigned_long >
                        end postfix expr
                    <Type>:< unsigned_long >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end equal expr
            <Type>:< signed_int >
            end logical and expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start declaration line:1061
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start primary expr
            <Type>:< signed_int >
            end primary expr
        finish declaration
        start declaration line:1062
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start primary expr
            <Type>:< signed_int >
            end primary expr
        finish declaration
        start declaration line:1064
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start postfix expr
                start primary expr
                <Type>:< function , point , struct >
                end primary expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
            <Type>:< point , struct >
            end postfix expr
        finish declaration
        start if expr
            start logical and expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
                start equal expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_long >
                    end postfix expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end equal expr
            <Type>:< signed_int >
            end logical and expr
            start expr expr
                start assignment expr
                    start primary expr
                    <Type>:< unsigned_long >
                    end primary expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_long >
                    end postfix expr
                <Type>:< unsigned_long >
                end assignment expr
            end if stmt
            start expr expr
                start assignment expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                    start postfix expr
                        start primary expr
                        <Type>:< function , point , struct >
                        end primary expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< point , struct >
                    end postfix expr
                <Type>:< point , struct >
                end assignment expr
                start if expr
                    start unary
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< signed_int >
                    end unary
                    start return expr
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    end return stmt
                end if stmt
                start if expr
                    start logical and expr
                        start equal expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< signed_int >
                            end postfix expr
                            start primary expr
                            <Type>:< const , NULL pointer constant >
                            end primary expr
                        <Type>:< signed_int >
                        end equal expr
                        start equal expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< signed_int >
                            end postfix expr
                            start primary expr
                            <Type>:< const , NULL pointer constant >
                            end primary expr
                        <Type>:< signed_int >
                        end equal expr
                    <Type>:< signed_int >
                    end logical and expr
                    start expr expr
                        start assignment expr
                            start primary expr
                            <Type>:< unsigned_long >
                            end primary expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        <Type>:< unsigned_long >
                        end assignment expr
                        start if expr
                            start logical and expr
                                start primary expr
                                    start logical and expr
                                        start relation expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                            start primary expr
                                            <Type>:< const , NULL pointer constant >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end relation expr
                                        start relation expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                            start primary expr
                                            <Type>:< const , NULL pointer constant >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end relation expr
                                    <Type>:< signed_int >
                                    end logical and expr
                                <Type>:< signed_int >
                                end primary expr
                                start equal expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                    <Type>:< signed_int >
                                    end postfix expr
                                    start primary expr
                                    <Type>:< const , NULL pointer constant >
                                    end primary expr
                                <Type>:< signed_int >
                                end equal expr
                            <Type>:< signed_int >
                            end logical and expr
                            start compound expr
                                start expr expr
                                    start assignment expr
                                        start primary expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                        start postfix expr
                                            start primary expr
                                            <Type>:< array , extern , unsigned_long >
                                            end primary expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                        <Type>:< extern , unsigned_long >
                                        end postfix expr
                                    <Type>:< unsigned_long >
                                    end assignment expr
                                end comopound stmt
                                start if expr
                                    start logical and expr
                                        start equal expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                            start primary expr
                                            <Type>:< const , NULL pointer constant >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end equal expr
                                        start equal expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                            start primary expr
                                            <Type>:< const , NULL pointer constant >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end equal expr
                                        start equal expr
                                            start postfix expr
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end postfix expr
                                            start primary expr
                                            <Type>:< const , NULL pointer constant >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end equal expr
                                    <Type>:< signed_int >
                                    end logical and expr
                                    start compound expr
                                        start declaration line:1077
                                            start specify or qualify node
                                            finish specify or qualify node
                                            start declarator
                                            finish declarator
                                            start cast
                                                start specify or qualify node
                                                finish specify or qualify node
                                                start primary expr
                                                <Type>:< point , struct >
                                                end primary expr
                                            <Type>:< point , struct >
                                            end cast
                                        finish declaration
                                        start expr expr
                                            start assignment expr
                                                start primary expr
                                                <Type>:< unsigned_long >
                                                end primary expr
                                                start postfix expr
                                                    start primary expr
                                                    <Type>:< point , struct >
                                                    end primary expr
                                                <Type>:< unsigned_long >
                                                end postfix expr
                                            <Type>:< unsigned_long >
                                            end assignment expr
                                        end comopound stmt
                                        start if expr
                                            start equal expr
                                                start postfix expr
                                                    start primary expr
                                                    <Type>:< point , struct >
                                                    end primary expr
                                                <Type>:< signed_int >
                                                end postfix expr
                                                start primary expr
                                                <Type>:< const , NULL pointer constant >
                                                end primary expr
                                            <Type>:< signed_int >
                                            end equal expr
                                            start compound expr
                                                start expr expr
                                                    start assignment expr
                                                        start primary expr
                                                        <Type>:< unsigned_long >
                                                        end primary expr
                                                        start postfix expr
                                                            start primary expr
                                                            <Type>:< array , extern , unsigned_long >
                                                            end primary expr
                                                            start primary expr
                                                            <Type>:< const , NULL pointer constant >
                                                            end primary expr
                                                        <Type>:< extern , unsigned_long >
                                                        end postfix expr
                                                    <Type>:< unsigned_long >
                                                    end assignment expr
                                                end comopound stmt
                                            end if stmt
                                        end if stmt
                                    end if stmt
                                end if stmt
                                start if expr
                                    start relation expr
                                        start primary expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                        start primary expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                    <Type>:< signed_int >
                                    end relation expr
                                    start expr expr
                                        start assignment expr
                                            start primary expr
                                            <Type>:< unsigned_long >
                                            end primary expr
                                            start primary expr
                                            <Type>:< unsigned_long >
                                            end primary expr
                                        <Type>:< unsigned_long >
                                        end assignment expr
                                    end if stmt
                                    start return expr
                                        start primary expr
                                        <Type>:< unsigned_long >
                                        end primary expr
                                    end return stmt
                                end comopound stmt
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start if expr
            start logical and expr
                start unary
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end unary
                start equal expr
                    start primary expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< unsigned_long >
                        end postfix expr
                    <Type>:< unsigned_long >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end equal expr
            <Type>:< signed_int >
            end logical and expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start declaration line:1092
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start primary expr
                start condition expr
                    start primary expr
                        start logical and expr
                            start equal expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            <Type>:< signed_int >
                            end equal expr
                            start relation expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                                start primary expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                    <Type>:< unsigned_long >
                                    end postfix expr
                                <Type>:< unsigned_long >
                                end primary expr
                            <Type>:< signed_int >
                            end relation expr
                        <Type>:< signed_int >
                        end logical and expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        <Type>:< point , void >
                        end postfix expr
                    <Type>:< point , void >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< point , void >
                end condition expr
            <Type>:< point , void >
            end primary expr
        finish declaration
        start if expr
            start logical and expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
                start postfix expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< bool >
                end postfix expr
            <Type>:< signed_int >
            end logical and expr
            start goto expr
            end goto stmt
        end if stmt
        start if expr
            start relation expr
                start primary expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_long >
                    end postfix expr
                <Type>:< unsigned_long >
                end primary expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            <Type>:< signed_int >
            end relation expr
            start compound expr
                start expr expr
                    start assignment expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                        start primary expr
                            start condition expr
                                start primary expr
                                    start logical and expr
                                        start equal expr
                                            start primary expr
                                            <Type>:< point , struct >
                                            end primary expr
                                            start primary expr
                                            <Type>:< signed_int >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end equal expr
                                        start relation expr
                                            start primary expr
                                            <Type>:< signed_int >
                                            end primary expr
                                            start primary expr
                                                start postfix expr
                                                    start primary expr
                                                    <Type>:< point , struct >
                                                    end primary expr
                                                <Type>:< unsigned_long >
                                                end postfix expr
                                            <Type>:< unsigned_long >
                                            end primary expr
                                        <Type>:< signed_int >
                                        end relation expr
                                    <Type>:< signed_int >
                                    end logical and expr
                                <Type>:< signed_int >
                                end primary expr
                                start primary expr
                                    start postfix expr
                                        start primary expr
                                        <Type>:< point , struct >
                                        end primary expr
                                        start primary expr
                                        <Type>:< signed_int >
                                        end primary expr
                                    <Type>:< point , void >
                                    end postfix expr
                                <Type>:< point , void >
                                end primary expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            <Type>:< point , void >
                            end condition expr
                        <Type>:< point , void >
                        end primary expr
                    <Type>:< point , struct >
                    end assignment expr
                    start if expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< bool >
                        end postfix expr
                        start goto expr
                        end goto stmt
                    end if stmt
                end comopound stmt
            end if stmt
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
            start label expr
                start if expr
                    start unary
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< signed_int >
                    end unary
                    start return expr
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    end return stmt
                end if stmt
            end label stmt
            start if expr
                start logical and expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_long >
                    end postfix expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_char >
                    end postfix expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< signed_int >
                    end postfix expr
                <Type>:< signed_int >
                end logical and expr
                start return expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                end return stmt
            end if stmt
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end comopound stmt
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start if expr
            start logical and expr
                start unary
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end unary
                start equal expr
                    start primary expr
                        start postfix expr
                            start primary expr
                            <Type>:< point , struct >
                            end primary expr
                        <Type>:< unsigned_long >
                        end postfix expr
                    <Type>:< unsigned_long >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end equal expr
            <Type>:< signed_int >
            end logical and expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start declaration line:1112
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start primary expr
                start condition expr
                    start logical and expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                        start relation expr
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< unsigned_long >
                            end postfix expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        <Type>:< signed_int >
                        end relation expr
                    <Type>:< signed_int >
                    end logical and expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                        start add
                            start postfix expr
                                start primary expr
                                <Type>:< point , struct >
                                end primary expr
                            <Type>:< unsigned_long >
                            end postfix expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        <Type>:< unsigned_long >
                        end add
                    <Type>:< point , void >
                    end postfix expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< point , void >
                end condition expr
            <Type>:< point , void >
            end primary expr
        finish declaration
        start if expr
            start unary
                start primary expr
                <Type>:< point , struct >
                end primary expr
            <Type>:< signed_int >
            end unary
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start if expr
            start postfix expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
            <Type>:< bool >
            end postfix expr
            start compound expr
                start if expr
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< unsigned_char >
                    end postfix expr
                    start return expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    end return stmt
                end if stmt
            end comopound stmt
        end if stmt
        start return expr
            start primary expr
            <Type>:< signed_int >
            end primary expr
        end return stmt
    end comopound stmt
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
        finish func
    finish declarator
    start compound expr
        start if expr
            start logical and expr
                start unary
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end unary
                start unary
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end unary
            <Type>:< signed_int >
            end logical and expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start if expr
            start unary
                start primary expr
                <Type>:< point , struct >
                end primary expr
            <Type>:< signed_int >
            end unary
            start return expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
            end return stmt
        end if stmt
        start if expr
            start unary
                start primary expr
                <Type>:< point , struct >
                end primary expr
            <Type>:< signed_int >
            end unary
            start return expr
                start primary expr
                <Type>:< point , struct >
                end primary expr
            end return stmt
        end if stmt
        start if expr
            start logical and expr
                start unary
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< bool >
                    end postfix expr
                <Type>:< signed_int >
                end unary
                start unary
                    start postfix expr
                        start primary expr
                        <Type>:< point , struct >
                        end primary expr
                    <Type>:< bool >
                    end postfix expr
                <Type>:< signed_int >
                end unary
            <Type>:< signed_int >
            end logical and expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start if expr
            start equal expr
                start postfix expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end postfix expr
                start postfix expr
                    start primary expr
                    <Type>:< point , struct >
                    end primary expr
                <Type>:< signed_int >
                end postfix expr
            <Type>:< signed_int >
            end equal expr
            start return expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            end return stmt
        end if stmt
        start declaration line:1133
            start specify or qualify node
            finish specify or qualify node
            start declarator
                start array
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                finish array
            finish declarator
        finish declaration
        start declaration line:1134
            start specify or qualify node
            finish specify or qualify node
            start declarator
                start array
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                finish array
            finish declarator
        finish declaration
        start for expr
            start declaration line:1135
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start primary expr
                <Type>:< signed_int >
                end primary expr
            finish declaration
            start relation expr
                start primary expr
                <Type>:< unsigned_long >
                end primary expr
                start primary expr
                <Type>:< signed_int >
                end primary expr
            <Type>:< signed_int >
            end relation expr
            start unary
                start primary expr
                <Type>:< unsigned_long >
                end primary expr
            <Type>:< unsigned_long >
            end unary
            start compound expr
                start expr expr
                    start assignment expr
                        start postfix expr
                            start primary expr
                            <Type>:< array , signed_int >
                            end primary expr
                            start primary expr
                            <Type>:< unsigned_long >
                            end primary expr
                        <Type>:< signed_int >
                        end postfix expr
                        start and expr
                            start primary expr
                                start and expr
                                    start primary expr
                                        start postfix expr
                                            start primary expr
                                            <Type>:< point , struct >
                                            end primary expr
                                        <Type>:< unsigned_char >
                                        end postfix expr
                                    <Type>:< unsigned_char >
                                    end primary expr
                                    start primary expr
                                    <Type>:< none >
                                    end primary expr
                                end and expr fail
                            end primary expr fail
                        end and expr fail
                    end assignment fail
                end comopound stmt fail
            end for stmt fail
        end comopound stmt fail
error
Compile Error:(file (null): line 1137: token ( )
        type_qual_cnt[i]=((qual_a->type_qual)&0x01)&((qual_b->type_qual)&0x01);
reason:	C0060:Here need an integer type
