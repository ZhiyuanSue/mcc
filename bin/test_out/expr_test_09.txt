read in file name:
	./bin/test_src/expr_test_09.c
start print ast tree
<translation_unit ns:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:ttt sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:4>
                            <&struct_decl ns:4>
                                <&spec_qual_list ns:4>
                                    <&type_spec ns:4>
                                        <KW_char:char sym level: 0 namespace:4>
                                <&struct_declarator_list ns:4>
                                    <&struct_declarator ns:4>
                                        <&declarator ns:4>
                                            <&direct_declarator ns:4>
                                                <identifier:bbb sym level: 0 namespace:4>
                                <;:; sym level: 0 namespace:4>
                            <&struct_decl ns:4>
                                <&spec_qual_list ns:4>
                                    <&type_spec ns:4>
                                        <KW_int:int sym level: 0 namespace:4>
                                <&struct_declarator_list ns:4>
                                    <&struct_declarator ns:4>
                                        <&declarator ns:4>
                                            <&direct_declarator ns:4>
                                                <identifier:aaa sym level: 0 namespace:4>
                                <;:; sym level: 0 namespace:4>
                        <right_brace:} sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:TST sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:a sym level: 0 namespace:1>
                            <[:[ sym level: 0 namespace:1>
                            <&logical_or_expr ns:1>
                                <&logical_and_expr ns:1>
                                    <&inclusive_or_expr ns:1>
                                        <&exclusive_or_expr ns:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:2 sym level: 0 namespace:1>
                                            <^:^ sym level: 0 namespace:1>
                                            <&primary_expression ns:1>
                                                <integer_constant:3 sym level: 0 namespace:1>
                                            <^:^ sym level: 0 namespace:1>
                                            <&and_expression ns:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:4ull sym level: 0 namespace:1>
                                                <ampersand:& sym level: 0 namespace:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:9 sym level: 0 namespace:1>
                                        <|:| sym level: 0 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:5 sym level: 0 namespace:1>
                                        <|:| sym level: 0 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:6 sym level: 0 namespace:1>
                                        <|:| sym level: 0 namespace:1>
                                        <&primary_expression ns:1>
                                            <integer_constant:7 sym level: 0 namespace:1>
                                    <double_ampersand:&& sym level: 0 namespace:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:1 sym level: 0 namespace:1>
                                    <double_ampersand:&& sym level: 0 namespace:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:2 sym level: 0 namespace:1>
                                    <double_ampersand:&& sym level: 0 namespace:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:3 sym level: 0 namespace:1>
                                <||:|| sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:4 sym level: 0 namespace:1>
                                <||:|| sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:5 sym level: 0 namespace:1>
                                <||:|| sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:8 sym level: 0 namespace:1>
                            <]:] sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:c sym level: 0 namespace:1>
                            <[:[ sym level: 0 namespace:1>
                            <&shift_expr ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:100 sym level: 0 namespace:1>
                                <<<:<< sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:1 sym level: 0 namespace:1>
                                <>>:>> sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:1 sym level: 0 namespace:1>
                            <]:] sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:b sym level: 0 namespace:1>
                            <[:[ sym level: 0 namespace:1>
                            <&equality_expr ns:1>
                                <&relational_expr ns:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:3 sym level: 0 namespace:1>
                                    <<=:<= sym level: 0 namespace:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:5 sym level: 0 namespace:1>
                                <==:== sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:1 sym level: 0 namespace:1>
                            <]:] sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:d sym level: 0 namespace:1>
                            <[:[ sym level: 0 namespace:1>
                            <&unary_expr ns:1>
                                <KW_sizeof:sizeof sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <(:( sym level: 0 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:TST sym level: 0 namespace:1>
                                    <):) sym level: 0 namespace:1>
                            <]:] sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
finish print ast tree
    start declaration line:0
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
                start specify or qualify node
                finish specify or qualify node
                start declarator
                finish declarator
            finish struct union
        finish specify or qualify node
        start declarator
        finish declarator
    finish declaration
    start declaration line:4
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start array
                start logical and expr
                    start logical and expr
                        start inor expr
                            start exor expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                                start and expr
                                    start primary expr
                                    <Type>:< unsigned_int >
                                    end primary expr
                                    start primary expr
                                    <Type>:< signed_int >
                                    end primary expr
                                <Type>:< unsigned_int >
                                end and expr
                            <Type>:< unsigned_int >
                            end bit exor expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                            start primary expr
                            <Type>:< signed_int >
                            end primary expr
                        <Type>:< unsigned_int >
                        end bit inor expr
                    <Type>:< signed_int >
                    end logical and expr
                <Type>:< signed_int >
                end logical and expr
            finish array
        finish declarator
    finish declaration
    start declaration line:5
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start array
                start shift
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end shift
            finish array
        finish declarator
    finish declaration
    start declaration line:6
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start array
                start equal expr
                    start relation expr
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    <Type>:< signed_int >
                    end relation expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end equal expr
            finish array
        finish declarator
    finish declaration
    start declaration line:7
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start array
                start unary
                    start primary expr
                        start primary expr
                        <Type>:< struct >
                        end primary expr
                    <Type>:< struct >
                    end primary expr
                <Type>:< signed_int >
                end unary
            finish array
        finish declarator
    finish declaration
start print symbol table
scope type:file_scope with child 0 and namespace 0
    <symbol table>
        <symbol:a ns:1 linkage:2>
            type::< array , signed_int >
                array len is: 1
        <symbol:b ns:1 linkage:2>
            type::< array , signed_int >
                array len is: 1
        <symbol:c ns:1 linkage:2>
            type::< array , signed_int >
                array len is: 100
        <symbol:d ns:1 linkage:2>
            type::< array , signed_int >
                array len is: 8
        <symbol:ttt ns:2 linkage:0>
            type::< struct >
                struct have 2 members are:
                    < bbb off:0 >
                    < aaa off:4 >
                total size:8 align size:4
        <symbol:aaa ns:4 linkage:0>
            type::< signed_int >
                value:0
        <symbol:TST ns:1 linkage:2>
            type::< typedef_name >
        <symbol:bbb ns:4 linkage:0>
            type::< signed_char >
end print symbol table
start print ir
start print ir
mempool global alloc/free: alloc 0 times,free 0 times
	use sys alloc/free: alloc 54938 times,free 996 times
mempool file alloc/free: alloc 0 times,free 0 times
	use sys alloc/free: alloc 7234 times,free 4787 times
test pass!
