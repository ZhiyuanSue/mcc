read in file name:
	./bin/test_src/arr_test_03.c
start print ast tree
<translation_unit ns:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:main sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_void:void sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <KW_int:int sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:testarr sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:1 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&storage_class_spec ns:1>
                            <KW_static:static sym level: 2 namespace:1>
                        <&storage_class_spec ns:1>
                            <KW__Thread_local:_Thread_local sym level: 2 namespace:1>
                        <&type_spec ns:1>
                            <KW_int:int sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:arr sym level: 2 namespace:1>
                                    <[:[ sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:2 sym level: 2 namespace:1>
                                    <]:] sym level: 2 namespace:1>
                                    <[:[ sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:testarr sym level: 2 namespace:1>
                                    <]:] sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:1 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
finish print ast tree
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
        finish func
    finish declarator
    start compound expr
        start declaration line:1
            start specify or qualify node
            finish specify or qualify node
            start declarator
            finish declarator
            start primary expr
            <Type>:< signed_int >
            end primary expr
        finish declaration
        start declaration line:2
            start specify or qualify node
            finish specify or qualify node
            start declarator
                start array
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                finish array
                start array
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                finish array
arr is a vla
            end comopound stmt fail
error
Compile Error:(file ./bin/test_src/arr_test_03.c: line 2: token * )
    static _Thread_local int *arr[2][testarr];
reason:	C0037:A varibly length array should not have storage class type 'static' or '_Thread_local'
mempool global alloc/free: alloc 0 times,free 0 times
	use sys alloc/free: alloc 54938 times,free 996 times
mempool file alloc/free: alloc 0 times,free 0 times
	use sys alloc/free: alloc 3909 times,free 3020 times
