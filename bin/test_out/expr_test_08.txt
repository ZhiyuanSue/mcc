read in file name:
	./bin/test_src/expr_test_08.c
parser start


test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
start print ast tree
<translation_unit ns:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_long:long sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_unsigned:unsigned sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:size_t sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_char:char sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:tstccc sym level: 0 namespace:1>
                            <[:[ sym level: 0 namespace:1>
                            <&additive_expr ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:1 sym level: 0 namespace:1>
                                <+:+ sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:2 sym level: 0 namespace:1>
                                <+:+ sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:3 sym level: 0 namespace:1>
                                <-:- sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:4 sym level: 0 namespace:1>
                                <+:+ sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:5 sym level: 0 namespace:1>
                                <-:- sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:2 sym level: 0 namespace:1>
                                <+:+ sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:2 sym level: 0 namespace:1>
                                <-:- sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:4 sym level: 0 namespace:1>
                            <]:] sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_char:char sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:_unused2 sym level: 0 namespace:1>
                            <[:[ sym level: 0 namespace:1>
                            <&additive_expr ns:1>
                                <&multi_expr ns:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:15 sym level: 0 namespace:1>
                                    <*:* sym level: 0 namespace:1>
                                    <&unary_expr ns:1>
                                        <KW_sizeof:sizeof sym level: 0 namespace:1>
                                        <(:( sym level: 0 namespace:1>
                                        <&type_name ns:1>
                                            <&spec_qual_list ns:1>
                                                <&type_spec ns:1>
                                                    <KW_int:int sym level: 0 namespace:1>
                                        <):) sym level: 0 namespace:1>
                                    <*:* sym level: 0 namespace:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:3 sym level: 0 namespace:1>
                                <-:- sym level: 0 namespace:1>
                                <&multi_expr ns:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:4 sym level: 0 namespace:1>
                                    <*:* sym level: 0 namespace:1>
                                    <&unary_expr ns:1>
                                        <KW_sizeof:sizeof sym level: 0 namespace:1>
                                        <(:( sym level: 0 namespace:1>
                                        <&type_name ns:1>
                                            <&spec_qual_list ns:1>
                                                <&type_spec ns:1>
                                                    <KW_void:void sym level: 0 namespace:1>
                                            <&abstract_declarator ns:1>
                                                <&pointer ns:1>
                                                    <*:* sym level: 0 namespace:1>
                                        <):) sym level: 0 namespace:1>
                                <-:- sym level: 0 namespace:1>
                                <&unary_expr ns:1>
                                    <KW_sizeof:sizeof sym level: 0 namespace:1>
                                    <&primary_expression ns:1>
                                        <(:( sym level: 0 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:size_t sym level: 0 namespace:1>
                                        <):) sym level: 0 namespace:1>
                            <]:] sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_char:char sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:bbb sym level: 0 namespace:1>
                            <[:[ sym level: 0 namespace:1>
                            <&equality_expr ns:1>
                                <&primary_expression ns:1>
                                    <floating_constant:12.2 sym level: 0 namespace:1>
                                <==:== sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <floating_constant:12.2 sym level: 0 namespace:1>
                            <]:] sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_char:char sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:ddd sym level: 0 namespace:1>
                            <[:[ sym level: 0 namespace:1>
                            <&relational_expr ns:1>
                                <&primary_expression ns:1>
                                    <integer_constant:1 sym level: 0 namespace:1>
                                <<:< sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:2 sym level: 0 namespace:1>
                                <<=:<= sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:2 sym level: 0 namespace:1>
                                <>:> sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:1 sym level: 0 namespace:1>
                                <>=:>= sym level: 0 namespace:1>
                                <&primary_expression ns:1>
                                    <integer_constant:0 sym level: 0 namespace:1>
                            <]:] sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
finish print ast tree
    start declaration line:0
        start specify or qualify node
        finish specify or qualify node
        start declarator
test point 2
test point 3
test point 2
test point 3
        finish declarator
test point 2
test point 3
    finish declaration
    start declaration line:1
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start array
                start add
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end add
            finish array
test point 2
test point 3
test point 2
test point 3
        finish declarator
test point 2
test point 3
    finish declaration
    start declaration line:2
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start array
                start add
                    start mul
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                        start unary
                            start specify or qualify node
                            finish specify or qualify node
                        <Type>:< signed_int >
                        end unary
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    <Type>:< signed_int >
                    end mul
                    start mul
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                        start unary
                            start specify or qualify node
                            finish specify or qualify node
                        <Type>:< signed_int >
                        end unary
                    <Type>:< signed_int >
                    end mul
                    start unary
                        start primary expr
                            start primary expr
test point 2
test point 3
                            <Type>:< unsigned_long >
                            end primary expr
                        <Type>:< unsigned_long >
                        end primary expr
                    <Type>:< signed_int >
                    end unary
                <Type>:< signed_int >
                end add
            finish array
test point 2
test point 3
test point 2
test point 3
        finish declarator
test point 2
test point 3
    finish declaration
    start declaration line:3
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start array
                start equal expr
                    start primary expr
                    <Type>:< double >
                    end primary expr
                    start primary expr
                    <Type>:< double >
                    end primary expr
                <Type>:< signed_int >
                end equal expr
            finish array
test point 2
test point 3
test point 2
test point 3
        finish declarator
test point 2
test point 3
    finish declaration
    start declaration line:4
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start array
                start relation expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                    start primary expr
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end relation expr
            finish array
test point 2
test point 3
test point 2
test point 3
        finish declarator
test point 2
test point 3
    finish declaration
start print symbol table
scope type:file_scope with child 0 and namespace 0
    <symbol table>
        <symbol:size_t ns:1 linkage:2>
            type::< typedef_name >
        <symbol:_unused2 ns:1 linkage:2>
            type::< array , signed_char >
                array len is: 140
        <symbol:tstccc ns:1 linkage:2>
            type::< array , signed_char >
                array len is: 3
        <symbol:bbb ns:1 linkage:2>
            type::< array , signed_char >
                array len is: 1
        <symbol:ddd ns:1 linkage:2>
            type::< array , signed_char >
                array len is: 1
end print symbol table
start print ir
start print ir
mempool global alloc/free: alloc 0 times,free 0 times
	use sys alloc/free: alloc 54938 times,free 996 times
mempool file alloc/free: alloc 0 times,free 0 times
	use sys alloc/free: alloc 6646 times,free 4603 times
test pass!
