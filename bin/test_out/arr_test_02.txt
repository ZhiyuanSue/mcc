read in file name:
	./bin/test_src/arr_test_02.c
parser start


test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
start print ast tree
<translation_unit ns:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:aaa sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:i sym level: 1 namespace:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:arr sym level: 1 namespace:1>
                                                <[:[ sym level: 1 namespace:1>
                                                <KW_static:static sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_const:const sym level: 1 namespace:1>
                                                <&primary_expression ns:1>
                                                    <identifier:i sym level: 1 namespace:1>
                                                <]:] sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:aaa sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_int:int sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:i sym level: 2 namespace:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_int:int sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:arr sym level: 2 namespace:1>
                                        <[:[ sym level: 2 namespace:1>
                                        <KW_static:static sym level: 2 namespace:1>
                                        <&type_qual_list ns:1>
                                            <&type_qual ns:1>
                                                <KW_const:const sym level: 2 namespace:1>
                                        <&primary_expression ns:1>
                                            <identifier:i sym level: 2 namespace:1>
                                        <]:] sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <KW_int:int sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                    <&type_qual_list ns:1>
                                        <&type_qual ns:1>
                                            <KW_const:const sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:a sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <KW_int:int sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:array sym level: 2 namespace:1>
                                    <[:[ sym level: 2 namespace:1>
                                    <KW_static:static sym level: 2 namespace:1>
                                    <&type_qual_list ns:1>
                                        <&type_qual ns:1>
                                            <KW_const:const sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <identifier:i sym level: 2 namespace:1>
                                    <]:] sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&return_stmt ns:1>
                        <KW_return:return sym level: 2 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:1 sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_int:int sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:bbb sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:arr sym level: 1 namespace:1>
                                                <[:[ sym level: 1 namespace:1>
                                                <&type_qual_list ns:1>
                                                    <&type_qual ns:1>
                                                        <KW_const:const sym level: 1 namespace:1>
                                                <]:] sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
finish print ast tree
    start declaration line:0
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                        start specify or qualify node
                        finish specify or qualify node
                        start primary expr
test point 2
test point 3
                        <Type>:< signed_int >
                        end primary expr
                    finish array
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
            finish func
test point 2
test point 3
test point 2
test point 3
        finish declarator
test point 2
test point 3
    finish declaration
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
test point 2
test point 3
test point 2
test point 3
            finish declarator
test point 2
test point 3
            start specify or qualify node
            finish specify or qualify node
            start declarator
                start array
                    start specify or qualify node
                    finish specify or qualify node
                    start primary expr
test point 2
test point 3
                    <Type>:< signed_int >
                    end primary expr
                finish array
test point 2
test point 3
test point 2
test point 3
            finish declarator
test point 2
test point 3
        finish func
test point 2
test point 3
test point 2
test point 3
    finish declarator
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
    start compound expr
        start declaration line:3
            start specify or qualify node
            finish specify or qualify node
            start declarator
                start specify or qualify node
                finish specify or qualify node
test point 2
test point 3
test point 2
test point 3
            finish declarator
test point 2
test point 3
        finish declaration
        start declaration line:4
            start specify or qualify node
            finish specify or qualify node
            start declarator
                start array
                    start specify or qualify node
                    finish specify or qualify node
                    start primary expr
test point 2
test point 3
                    <Type>:< signed_int >
                    end primary expr
                finish array
            end comopound stmt fail
error
Compile Error:(file ./bin/test_src/arr_test_02.c: line 4: token array )
    int array[static const i];
reason:	C0036:Static or type qualifiers in non-parameter array declarator
mempool global alloc/free: alloc 0 times,free 0 times
	use sys alloc/free: alloc 54938 times,free 996 times
mempool file alloc/free: alloc 0 times,free 0 times
	use sys alloc/free: alloc 6045 times,free 4463 times
