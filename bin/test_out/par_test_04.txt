read in file name:
	./bin/test_src/par_test_04.c
parser start


test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
start print ast tree
<translation_unit ns:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW__Thread_local:_Thread_local sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:c sym level: 0 namespace:2>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:c sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:5>
                            <&struct_decl ns:5>
                                <&spec_qual_list ns:5>
                                    <&type_spec ns:5>
                                        <KW_int:int sym level: 0 namespace:5>
                                <&struct_declarator_list ns:5>
                                    <&struct_declarator ns:5>
                                        <&declarator ns:5>
                                            <&direct_declarator ns:5>
                                                <identifier:cc sym level: 0 namespace:5>
                                <;:; sym level: 0 namespace:5>
                        <right_brace:} sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:stest sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:7>
                            <&struct_decl ns:7>
                                <&spec_qual_list ns:7>
                                    <&type_spec ns:7>
                                        <KW_int:int sym level: 0 namespace:7>
                                <&struct_declarator_list ns:7>
                                    <&struct_declarator ns:7>
                                        <&declarator ns:7>
                                            <&direct_declarator ns:7>
                                                <identifier:y sym level: 0 namespace:7>
                                <;:; sym level: 0 namespace:7>
                            <&struct_decl ns:7>
                                <&spec_qual_list ns:7>
                                    <&type_spec ns:7>
                                        <KW_int:int sym level: 0 namespace:7>
                                <&struct_declarator_list ns:7>
                                    <&struct_declarator ns:7>
                                        <&declarator ns:7>
                                            <&direct_declarator ns:7>
                                                <identifier:c sym level: 0 namespace:7>
                                <;:; sym level: 0 namespace:7>
                            <&struct_decl ns:7>
                                <&spec_qual_list ns:7>
                                    <&type_spec ns:7>
                                        <&struct_union_spec ns:7>
                                            <&struct_union ns:7>
                                                <KW_struct:struct sym level: 0 namespace:7>
                                            <identifier:sstest sym level: 0 namespace:2>
                                            <left_brace:{ sym level: 0 namespace:1>
                                            <&struct_decl_list ns:8>
                                                <&struct_decl ns:8>
                                                    <&spec_qual_list ns:8>
                                                        <&type_spec ns:8>
                                                            <KW_int:int sym level: 0 namespace:8>
                                                    <&struct_declarator_list ns:8>
                                                        <&struct_declarator ns:8>
                                                            <&declarator ns:8>
                                                                <&direct_declarator ns:8>
                                                                    <identifier:e sym level: 0 namespace:8>
                                                    <;:; sym level: 0 namespace:8>
                                                <&struct_decl ns:8>
                                                    <&spec_qual_list ns:8>
                                                        <&type_spec ns:8>
                                                            <KW_int:int sym level: 0 namespace:8>
                                                    <&struct_declarator_list ns:8>
                                                        <&struct_declarator ns:8>
                                                            <&declarator ns:8>
                                                                <&direct_declarator ns:8>
                                                                    <identifier:f sym level: 0 namespace:8>
                                                    <;:; sym level: 0 namespace:8>
                                            <right_brace:} sym level: 0 namespace:1>
                                <&struct_declarator_list ns:7>
                                    <&struct_declarator ns:7>
                                        <&declarator ns:7>
                                            <&direct_declarator ns:7>
                                                <identifier:t sym level: 0 namespace:7>
                                <;:; sym level: 0 namespace:7>
                        <right_brace:} sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&storage_class_spec ns:1>
                    <KW_typedef:typedef sym level: 0 namespace:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:stest sym level: 0 namespace:2>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:ccc sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&struct_union_spec ns:1>
                        <&struct_union ns:1>
                            <KW_struct:struct sym level: 0 namespace:1>
                        <identifier:b sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&struct_decl_list ns:11>
                            <&struct_decl ns:11>
                                <&spec_qual_list ns:11>
                                    <&type_spec ns:11>
                                        <KW_int:int sym level: 0 namespace:11>
                                <&struct_declarator_list ns:11>
                                    <&struct_declarator ns:11>
                                        <&declarator ns:11>
                                            <&direct_declarator ns:11>
                                                <identifier:ccc sym level: 0 namespace:11>
                                <;:; sym level: 0 namespace:11>
                        <right_brace:} sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&typedef_name ns:1>
                        <identifier:ccc sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:cc sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <&enum_spec ns:1>
                        <KW_enum:enum sym level: 0 namespace:1>
                        <identifier:scope_type sym level: 0 namespace:2>
                        <left_brace:{ sym level: 0 namespace:1>
                        <&enum_list ns:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:SPT_NONE sym level: 0 namespace:1>
                                <=:= sym level: 0 namespace:1>
                                <&constant_expr ns:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:0 sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:SPT_BLOCK sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:SPT_FUN sym level: 0 namespace:1>
                                <=:= sym level: 0 namespace:1>
                                <&constant_expr ns:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:5 sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:SPT_FILE sym level: 0 namespace:1>
                            <&enumerator ns:1>
                                <&enum_const ns:1>
                                    <identifier:SPT_FUN_PROTOTYPE sym level: 0 namespace:1>
                        <right_brace:} sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <declaration ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 0 namespace:1>
            <&init_decl_list ns:1>
                <&init_decl ns:1>
                    <&declarator ns:1>
                        <&direct_declarator ns:1>
                            <identifier:g sym level: 0 namespace:1>
                            <(:( sym level: 0 namespace:1>
                            <&parameter_type_list ns:1>
                                <&parameter_list ns:1>
                                    <&parameter_declaration ns:1>
                                        <&declaration_spec ns:1>
                                            <&type_spec ns:1>
                                                <KW_signed:signed sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_long:long sym level: 1 namespace:1>
                                            <&type_spec ns:1>
                                                <KW_int:int sym level: 1 namespace:1>
                                        <&declarator ns:1>
                                            <&direct_declarator ns:1>
                                                <identifier:ccc sym level: 1 namespace:1>
                            <):) sym level: 0 namespace:1>
            <;:; sym level: 0 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:g sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_signed:signed sym level: 2 namespace:1>
                                    <&type_spec ns:1>
                                        <KW_long:long sym level: 2 namespace:1>
                                    <&type_spec ns:1>
                                        <KW_int:int sym level: 2 namespace:1>
                                <&declarator ns:1>
                                    <&direct_declarator ns:1>
                                        <identifier:ccc sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&storage_class_spec ns:1>
                            <KW_extern:extern sym level: 2 namespace:1>
                        <&storage_class_spec ns:1>
                            <KW__Thread_local:_Thread_local sym level: 2 namespace:1>
                        <&type_spec ns:1>
                            <&struct_union_spec ns:1>
                                <&struct_union ns:1>
                                    <KW_struct:struct sym level: 2 namespace:1>
                                <identifier:thread_c sym level: 2 namespace:2>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:ccc sym level: 2 namespace:1>
                            <++:++ sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <KW_int:int sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:b sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <identifier:ccc sym level: 2 namespace:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:z sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <floating_constant:2.0 sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <KW_int:int sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:p sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <KW_int:int sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:x sym level: 2 namespace:1>
                                    <[:[ sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:20 sym level: 2 namespace:1>
                                    <]:] sym level: 2 namespace:1>
                                    <[:[ sym level: 2 namespace:1>
                                    <&primary_expression ns:1>
                                        <integer_constant:30 sym level: 2 namespace:1>
                                    <]:] sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <KW_char:char sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&pointer ns:1>
                                    <*:* sym level: 2 namespace:1>
                                <&direct_declarator ns:1>
                                    <identifier:a sym level: 2 namespace:1>
                            <=:= sym level: 2 namespace:1>
                            <&initializer ns:1>
                                <&primary_expression ns:1>
                                    <string:"a is a bool" sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:b sym level: 2 namespace:1>
                            <++:++ sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&assignment_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:b sym level: 2 namespace:1>
                            <=:+= sym level: 2 namespace:1>
                            <&additive_expr ns:1>
                                <&primary_expression ns:1>
                                    <identifier:b sym level: 2 namespace:1>
                                <+:+= sym level: 2 namespace:1>
                                <&primary_expression ns:1>
                                    <identifier:SPT_FILE sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <&if_stmt ns:1>
                        <KW_if:if sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&primary_expression ns:1>
                            <integer_constant:0 sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <declaration ns:1>
                                    <&declaration_spec ns:1>
                                        <&type_spec ns:1>
                                            <KW_int:int sym level: 4 namespace:1>
                                    <&init_decl_list ns:1>
                                        <&init_decl ns:1>
                                            <&declarator ns:1>
                                                <&direct_declarator ns:1>
                                                    <identifier:a sym level: 4 namespace:1>
                                            <=:= sym level: 4 namespace:1>
                                            <&initializer ns:1>
                                                <&primary_expression ns:1>
                                                    <integer_constant:1 sym level: 4 namespace:1>
                                    <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&goto_stmt ns:1>
                                        <KW_goto:goto sym level: 4 namespace:1>
                                        <identifier:label_test sym level: 4 namespace:15>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                        <KW_else:else sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <&return_stmt ns:1>
                                        <KW_return:return sym level: 4 namespace:1>
                                        <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <&switch_stmt ns:1>
                        <KW_switch:switch sym level: 3 namespace:1>
                        <(:( sym level: 3 namespace:1>
                        <&primary_expression ns:1>
                            <identifier:b sym level: 3 namespace:1>
                        <):) sym level: 3 namespace:1>
                        <statement ns:1>
                            <compound_stmt ns:1>
                                <left_brace:{ sym level: 4 namespace:1>
                                <statement ns:1>
                                    <labeled_stmt ns:15>
                                        <KW_case:case sym level: 4 namespace:15>
                                        <&constant_expr ns:15>
                                            <&primary_expression ns:15>
                                                <integer_constant:1 sym level: 4 namespace:15>
                                        <colon:: sym level: 4 namespace:15>
                                        <statement ns:1>
                                            <&break_stmt ns:1>
                                                <KW_break:break sym level: 4 namespace:1>
                                                <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <labeled_stmt ns:15>
                                        <KW_case:case sym level: 4 namespace:15>
                                        <&constant_expr ns:15>
                                            <&primary_expression ns:15>
                                                <integer_constant:2 sym level: 4 namespace:15>
                                        <colon:: sym level: 4 namespace:15>
                                        <statement ns:1>
                                            <&break_stmt ns:1>
                                                <KW_break:break sym level: 4 namespace:1>
                                                <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <labeled_stmt ns:15>
                                        <KW_default:default sym level: 4 namespace:15>
                                        <colon:: sym level: 4 namespace:15>
                                        <statement ns:1>
                                            <&break_stmt ns:1>
                                                <KW_break:break sym level: 4 namespace:1>
                                                <;:; sym level: 4 namespace:1>
                                <statement ns:1>
                                    <labeled_stmt ns:15>
                                        <KW_default:default sym level: 4 namespace:15>
                                        <colon:: sym level: 4 namespace:15>
                                        <statement ns:1>
                                            <&break_stmt ns:1>
                                                <KW_break:break sym level: 4 namespace:1>
                                                <;:; sym level: 4 namespace:1>
                                <right_brace:} sym level: 4 namespace:1>
                <statement ns:1>
                    <labeled_stmt ns:15>
                        <identifier:label_test sym level: 2 namespace:15>
                        <colon:: sym level: 2 namespace:15>
                        <statement ns:1>
                            <&return_stmt ns:1>
                                <KW_return:return sym level: 2 namespace:1>
                                <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
    <external_decl ns:1>
        <function_definition ns:1>
            <&declaration_spec ns:1>
                <&type_spec ns:1>
                    <KW_void:void sym level: 1 namespace:1>
            <&declarator ns:1>
                <&direct_declarator ns:1>
                    <identifier:k sym level: 1 namespace:1>
                    <(:( sym level: 1 namespace:1>
                    <&parameter_type_list ns:1>
                        <&parameter_list ns:1>
                            <&parameter_declaration ns:1>
                                <&declaration_spec ns:1>
                                    <&type_spec ns:1>
                                        <KW_void:void sym level: 2 namespace:1>
                    <):) sym level: 1 namespace:1>
            <compound_stmt ns:1>
                <left_brace:{ sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <&typedef_name ns:1>
                                <identifier:ccc sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:gg sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <declaration ns:1>
                    <&declaration_spec ns:1>
                        <&type_spec ns:1>
                            <KW_signed:signed sym level: 2 namespace:1>
                        <&type_spec ns:1>
                            <KW_long:long sym level: 2 namespace:1>
                        <&type_spec ns:1>
                            <KW_int:int sym level: 2 namespace:1>
                    <&init_decl_list ns:1>
                        <&init_decl ns:1>
                            <&declarator ns:1>
                                <&direct_declarator ns:1>
                                    <identifier:ccc sym level: 2 namespace:1>
                    <;:; sym level: 2 namespace:1>
                <statement ns:1>
                    <expr_stmt ns:1>
                        <&postfix_expr ns:1>
                            <&primary_expression ns:1>
                                <identifier:g sym level: 2 namespace:1>
                            <(:( sym level: 2 namespace:1>
                            <&primary_expression ns:1>
                                <identifier:ccc sym level: 2 namespace:1>
                            <):) sym level: 2 namespace:1>
                        <;:; sym level: 2 namespace:1>
                <right_brace:} sym level: 2 namespace:1>
finish print ast tree
    start declaration line:0
        start specify or qualify node
test point 2
test point 3
test point 2
test point 3
        finish specify or qualify node
    finish declaration
    start declaration line:1
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
            finish struct union
        finish specify or qualify node
    finish declaration
    start declaration line:4
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
                start specify or qualify node
                finish specify or qualify node
                start declarator
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
                start specify or qualify node
                    start struct union
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
test point 2
test point 3
test point 2
test point 3
                        finish declarator
test point 2
test point 3
                        start specify or qualify node
                        finish specify or qualify node
                        start declarator
test point 2
test point 3
test point 2
test point 3
                        finish declarator
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
                    finish struct union
                finish specify or qualify node
                start declarator
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
            finish struct union
        finish specify or qualify node
    finish declaration
    start declaration line:12
        start specify or qualify node
test point 2
test point 3
        finish specify or qualify node
        start declarator
test point 2
test point 3
test point 2
test point 3
        finish declarator
test point 2
test point 3
    finish declaration
    start declaration line:13
        start specify or qualify node
            start struct union
                start specify or qualify node
                finish specify or qualify node
                start declarator
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
            finish struct union
        finish specify or qualify node
    finish declaration
    start declaration line:16
        start specify or qualify node
test point 2
test point 3
test point 2
test point 3
        finish specify or qualify node
        start declarator
test point 2
test point 3
test point 2
test point 3
        finish declarator
test point 2
test point 3
    finish declaration
    start declaration line:17
        start specify or qualify node
            start enum
test point 2
test point 3
                start primary expr
                <Type>:< signed_int >
                end primary expr
test point 2
test point 3
test point 2
test point 3
                start primary expr
                <Type>:< signed_int >
                end primary expr
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
            finish enum
        finish specify or qualify node
    finish declaration
    start declaration line:20
        start specify or qualify node
        finish specify or qualify node
        start declarator
            start func
                start specify or qualify node
                finish specify or qualify node
                start declarator
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
            finish func
test point 2
test point 3
test point 2
test point 3
        finish declarator
test point 2
test point 3
    finish declaration
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
            start declarator
test point 2
test point 3
test point 2
test point 3
            finish declarator
test point 2
test point 3
        finish func
test point 2
test point 3
test point 2
test point 3
    finish declarator
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
    start compound expr
        start declaration line:22
            start specify or qualify node
test point 2
test point 3
test point 2
test point 3
            finish specify or qualify node
        finish declaration
        start expr expr
            start postfix expr
                start primary expr
test point 2
test point 3
                <Type>:< signed_long >
                end primary expr
            <Type>:< signed_long >
            end postfix expr
            start declaration line:24
                start specify or qualify node
                finish specify or qualify node
                start declarator
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
                start primary expr
test point 2
test point 3
                <Type>:< signed_long >
                end primary expr
                start declarator
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
                start primary expr
                <Type>:< double >
                end primary expr
            finish declaration
            start declaration line:25
                start specify or qualify node
                finish specify or qualify node
                start declarator
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
            finish declaration
            start declaration line:26
                start specify or qualify node
                finish specify or qualify node
                start declarator
                    start array
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    finish array
                    start array
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                    finish array
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
            finish declaration
            start declaration line:28
                start specify or qualify node
                finish specify or qualify node
                start declarator
test point 2
test point 3
test point 2
test point 3
                finish declarator
test point 2
test point 3
                start primary expr
                <Type>:< point , signed_char >
                end primary expr
            finish declaration
            start expr expr
                start postfix expr
                    start primary expr
test point 2
test point 3
                    <Type>:< signed_int >
                    end primary expr
                <Type>:< signed_int >
                end postfix expr
                start expr expr
                    start assignment expr
                        start primary expr
test point 2
test point 3
                        <Type>:< signed_int >
                        end primary expr
                        start add
                            start primary expr
test point 2
test point 3
                            <Type>:< signed_int >
                            end primary expr
                            start primary expr
test point 2
test point 3
                            <Type>:< const , signed_int >
                            end primary expr
                        <Type>:< signed_int >
                        end add
                    <Type>:< signed_int >
                    end assignment expr
                    start if expr
                        start primary expr
                        <Type>:< signed_int >
                        end primary expr
                        start compound expr
                            start declaration line:32
                                start specify or qualify node
                                finish specify or qualify node
                                start declarator
test point 2
test point 3
test point 2
test point 3
                                finish declarator
test point 2
test point 3
                                start primary expr
                                <Type>:< signed_int >
                                end primary expr
                            finish declaration
                            start goto expr
test point 2
test point 3
                            end goto stmt
                        end comopound stmt
                        start compound expr
                            start return expr
                            end return stmt
                        end comopound stmt
                    end if stmt
                    start switch expr
                        start primary expr
test point 2
test point 3
                        <Type>:< signed_int >
                        end primary expr
                    end switch stmt
                    start label expr
                        start return expr
                        end return stmt
                    end label stmt
                end comopound stmt
    start specify or qualify node
    finish specify or qualify node
    start declarator
        start func
            start specify or qualify node
            finish specify or qualify node
        finish func
test point 2
test point 3
test point 2
test point 3
    finish declarator
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
test point 2
test point 3
    start compound expr
        start declaration line:53
            start specify or qualify node
test point 2
test point 3
test point 2
test point 3
            finish specify or qualify node
            start declarator
test point 2
test point 3
test point 2
test point 3
            finish declarator
test point 2
test point 3
        finish declaration
        start declaration line:54
            start specify or qualify node
            finish specify or qualify node
            start declarator
test point 2
test point 3
test point 2
test point 3
            finish declarator
test point 2
test point 3
        finish declaration
        start expr expr
            start postfix expr
                start primary expr
test point 2
test point 3
                <Type>:< function , void >
                end primary expr
                start primary expr
test point 2
test point 3
                <Type>:< signed_long >
                end primary expr
            <Type>:< void >
            end postfix expr
        end comopound stmt
start print symbol table
scope type:file_scope with child 3 and namespace 0
    <symbol table>
        <symbol:SPT_FILE ns:1 linkage:0>
            type::< const , signed_int >
                value:6
        <symbol:sstest ns:2 linkage:0>
            type::< struct >
                struct have 2 members are:
                    < e off:0 >
                    < f off:4 >
                total size:8 align size:4
        <symbol:e ns:8 linkage:0>
            type::< signed_int >
                value:0
        <symbol:f ns:8 linkage:0>
            type::< signed_int >
                value:0
        <symbol:g ns:1 linkage:2>
            type::< function , void >
                function have 1 parameters are:
                    ccc
        <symbol:ccc ns:1 linkage:2>
            type::< typedef_name >
        <symbol:scope_type ns:2 linkage:0>
            type::< enum >
        <symbol:k ns:1 linkage:0>
            type::< function , void >
                no parameter
        <symbol:cc ns:5 linkage:0>
            type::< signed_int >
                value:0
        <symbol:ccc ns:11 linkage:0>
            type::< signed_int >
                value:0
        <symbol:SPT_NONE ns:1 linkage:0>
            type::< const , signed_int >
                value:0
        <symbol:b ns:2 linkage:0>
            type::< struct >
                struct have 1 members are:
                    < ccc off:0 >
                total size:4 align size:4
        <symbol:c ns:2 linkage:0>
            type::< struct >
                struct have 1 members are:
                    < cc off:0 >
                total size:4 align size:4
        <symbol:c ns:7 linkage:0>
            type::< signed_int >
                value:0
        <symbol:SPT_FUN_PROTOTYPE ns:1 linkage:0>
            type::< const , signed_int >
                value:7
        <symbol:SPT_BLOCK ns:1 linkage:0>
            type::< const , signed_int >
                value:1
        <symbol:stest ns:2 linkage:0>
            type::< struct >
                struct have 3 members are:
                    < y off:0 >
                    < c off:4 >
                    < t off:8 >
                total size:16 align size:4
        <symbol:t ns:7 linkage:0>
            type::< struct >
        <symbol:cc ns:1 linkage:2>
            type::< struct >
        <symbol:SPT_FUN ns:1 linkage:0>
            type::< const , signed_int >
                value:5
        <symbol:y ns:7 linkage:0>
            type::< signed_int >
                value:0
    scope type:function_prototype_scope with child 0 and namespace 0
        <symbol table>
            <symbol:ccc ns:1 linkage:0>
                type::< signed_long >
    scope type:function_scope with child 1 and namespace 0
        <symbol table>
            <symbol:label_test ns:0 linkage:51261008>
                type::< label >
        scope type:block_scope with child 2 and namespace 0
            <symbol table>
                <symbol:a ns:1 linkage:0>
                    type::< point , signed_char >
                <symbol:b ns:1 linkage:0>
                    type::< signed_int >
                        value:0
                <symbol:ccc ns:1 linkage:0>
                    type::< signed_long >
                <symbol:thread_c ns:2 linkage:0>
                    type::< struct >
                <symbol:p ns:1 linkage:0>
                    type::< point , signed_int >
                <symbol:x ns:1 linkage:0>
                    type::< array , array , signed_int >
                        array len is: 20
                <symbol:z ns:1 linkage:0>
                    type::< signed_int >
                        value:0
            scope type:block_scope with child 2 and namespace 0
                <symbol table>
                scope type:block_scope with child 0 and namespace 0
                    <symbol table>
                        <symbol:a ns:1 linkage:0>
                            type::< signed_int >
                                value:0
                scope type:block_scope with child 0 and namespace 0
                    <symbol table>
            scope type:block_scope with child 1 and namespace 0
                <symbol table>
                scope type:block_scope with child 0 and namespace 0
                    <symbol table>
    scope type:function_scope with child 1 and namespace 0
        <symbol table>
        scope type:block_scope with child 0 and namespace 0
            <symbol table>
                <symbol:ccc ns:1 linkage:0>
                    type::< signed_long >
                <symbol:gg ns:1 linkage:0>
                    type::< struct >
end print symbol table
start print ir
start print ir
not decided token label_test
not decided token label_test
mempool global alloc/free: alloc 0 times,free 0 times
	use sys alloc/free: alloc 54938 times,free 996 times
mempool file alloc/free: alloc 0 times,free 0 times
	use sys alloc/free: alloc 23562 times,free 17726 times
test pass!
